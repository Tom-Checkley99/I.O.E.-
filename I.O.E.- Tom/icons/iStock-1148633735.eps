%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: EarthGlobe.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Alody
%%CreationDate: 4/25/2019
%%BoundingBox: 0 0 380 380
%%HiResBoundingBox: 0 0 380 380
%%CropBox: 0 0 380 380
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.0 x530 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=1200 GradRes=300 Text=0 Stroke=0 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2019-04-25T22:15:27+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2019-04-25T22:15:28+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2019-04-25T22:15:28+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FUDquu6NpEPranew2iH7PquFLU/lXq30DLMeKUzURbTm1GPGLmRFgmsfnr5YtSyabbz6i46&#xA;PT0Ij/snBf8A4TNhj7KyH6iI/a6jN2/hj9AMvsH4+DDdT/PXzZcErZQW1jH+yQplkH+yc8f+EzOh&#xA;2VjHMkuqy9v5pfSBH7fx8mN3v5i+eLyvrazcrXr6LCD/AJNBMyY6LFHlEfe4M+09RLnM/Db7kmn1&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:479c86fd-527b-be41-ad18-932521ff5e02</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:479c86fd-527b-be41-ad18-932521ff5e02</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3cc8e31c-9559-144b-8739-5e2fc9f4e702</stRef:instanceID>
            <stRef:documentID>xmp.did:3cc8e31c-9559-144b-8739-5e2fc9f4e702</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b595fcb1-9cdb-e043-af5c-1db0c8b48d0c</stEvt:instanceID>
                  <stEvt:when>2019-02-25T10:20:32+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:aaa61147-067f-a540-bf1a-767d8799e3d9</stEvt:instanceID>
                  <stEvt:when>2019-02-25T10:21:36+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b417c1d2-4552-ed43-893c-51995e1039dd</stEvt:instanceID>
                  <stEvt:when>2019-03-10T19:25:31+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3cc8e31c-9559-144b-8739-5e2fc9f4e702</stEvt:instanceID>
                  <stEvt:when>2019-04-25T22:07:53+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:479c86fd-527b-be41-ad18-932521ff5e02</stEvt:instanceID>
                  <stEvt:when>2019-04-25T22:15:28+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -380 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 380 li
380 380 li
380 0 li
cp
clp
380 190 mo
380 85.0659 294.934 0 190 0 cv
85.0659 0 0 85.0659 0 190 cv
0 294.934 85.0659 380 190 380 cv
294.934 380 380 294.934 380 190 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.0509804 .556863 .74902 rgb
f
337.469 259.978 mo
337.264 259.389 336.937 258.838 336.816 258.226 cv
336.628 257.269 336.968 256.287 337.401 255.414 cv
338.076 254.056 339.06 252.769 340.451 252.167 cv
341.136 251.871 341.888 251.754 342.568 251.449 cv
345.437 250.163 346.207 246.013 349.143 244.891 cv
349.835 244.626 350.66 244.576 351.28 244.98 cv
351.698 245.252 351.974 245.694 352.189 246.144 cv
353.237 248.32 353.135 251.013 351.925 253.104 cv
350.984 254.729 349.453 255.959 348.57 257.615 cv
348.021 258.645 347.745 259.794 347.312 260.877 cv
346.589 262.685 345.271 264.343 344.827 266.254 cv
344.417 268.017 344.445 269.8 343.933 271.574 cv
343.68 272.448 343.398 273.369 342.725 273.979 cv
342.096 274.547 341.202 274.756 340.357 274.693 cv
339.513 274.632 338.705 274.324 337.937 273.967 cv
334.522 272.38 333.365 267.584 336.158 264.921 cv
337.48 263.66 338.084 261.745 337.469 259.978 cv
.615686 .909804 .329412 rgb
f
245.045 99.0244 mo
245.513 98.9341 245.991 98.8159 246.367 98.5234 cv
246.987 98.041 247.19 97.2031 247.641 96.5591 cv
248.325 95.5815 249.586 95.0474 250.051 93.9482 cv
250.117 93.79 250.166 93.6128 250.116 93.4482 cv
250.021 93.1299 249.631 93.0234 249.302 92.9751 cv
248.021 92.7871 246.726 92.7012 245.432 92.7188 cv
245.171 92.7227 244.88 92.7188 244.695 92.5356 cv
244.542 92.3838 244.508 92.1533 244.482 91.9399 cv
244.391 91.1855 244.299 90.4312 244.208 89.6768 cv
244.104 88.8218 243.902 87.8237 243.121 87.4609 cv
242.587 87.2129 241.963 87.3589 241.376 87.3169 cv
240.789 87.2749 240.109 86.8511 240.216 86.2725 cv
240.361 85.4849 241.754 85.3965 241.801 84.5967 cv
241.818 84.2905 241.611 84.0225 241.415 83.7861 cv
240.908 83.1777 240.402 82.5688 239.896 81.96 cv
239.439 81.4116 238.831 80.8052 238.133 80.9521 cv
237.311 81.1255 237.076 82.1499 236.708 82.9058 cv
236.267 83.813 235.407 84.603 235.463 85.6104 cv
235.516 86.5732 236.398 87.2681 237.259 87.7036 cv
238.119 88.1387 239.089 88.4917 239.646 89.2793 cv
240.33 90.2476 240.174 91.5635 239.896 92.7168 cv
239.833 92.981 239.739 93.2754 239.495 93.3936 cv
239.305 93.4854 239.081 93.4399 238.87 93.4282 cv
237.794 93.3687 236.854 94.2744 236.511 95.2964 cv
236.292 95.9443 235.992 97.4697 236.408 98.0859 cv
236.786 98.6465 238.016 98.771 238.622 98.9092 cv
240.725 99.3877 242.927 99.4312 245.045 99.0244 cv
cp
f
227.205 92.7754 mo
227.458 92.5557 227.77 92.3438 228.091 92.1245 cv
228.688 91.7183 228.697 90.5723 229.52 90.4551 cv
229.614 90.4419 229.711 90.4644 229.806 90.4746 cv
230.315 90.5298 231.234 90.2944 231.51 89.8276 cv
231.866 89.2246 231.478 88.6309 232.355 88.2983 cv
232.708 88.1655 233.093 88.1543 233.47 88.1499 cv
234.681 88.1367 235.966 89.9624 235.873 91.0679 cv
235.832 91.5601 235.498 92.8306 235.246 93.2476 cv
235.087 93.5112 234.561 93.6572 234.291 93.8047 cv
232.972 94.5288 231.562 95.6265 229.994 95.5894 cv
228.938 95.5645 227.971 95.5522 227.19 94.7817 cv
226.315 93.918 226.576 93.3232 227.205 92.7754 cv
cp
f
280.846 300.639 mo
280.413 300.619 279.986 300.528 279.582 300.352 cv
276.74 299.122 278.029 295.365 277.854 293.01 cv
277.698 290.894 276.876 288.734 275.21 287.42 cv
274.634 286.967 273.97 286.62 273.461 286.093 cv
271.984 284.562 272.27 282.121 271.82 280.042 cv
271.33 277.774 269.898 275.832 269.083 273.66 cv
268.402 271.848 268.161 269.906 267.925 267.985 cv
267.436 264 267.119 259.947 266.451 255.988 cv
265.883 252.613 267.332 250.351 268.161 247.112 cv
268.929 244.112 268.486 240.821 266.955 238.13 cv
266.608 237.521 266.202 236.925 266.056 236.239 cv
265.894 235.478 266.07 234.68 265.949 233.91 cv
265.664 232.108 263.904 230.98 262.854 229.488 cv
261.976 228.241 261.596 226.72 261.25 225.234 cv
260.793 223.27 260.25 221.705 260.239 219.689 cv
260.223 216.731 262.12 214.278 260.324 211.414 cv
259.333 209.834 257.522 208.801 255.656 208.752 cv
255.573 208.75 255.488 208.749 255.402 208.749 cv
255.144 208.749 254.876 208.757 254.605 208.766 cv
254.334 208.774 254.061 208.783 253.791 208.783 cv
252.654 208.783 251.589 208.631 251.101 207.684 cv
250.757 207.018 250.868 206.132 250.349 205.592 cv
250.099 205.331 249.743 205.203 249.396 205.103 cv
248.444 204.824 247.452 204.686 246.459 204.686 cv
245.146 204.686 243.833 204.928 242.611 205.408 cv
241.071 206.013 239.677 206.979 238.082 207.421 cv
237.255 207.65 236.413 207.73 235.561 207.73 cv
234.587 207.73 233.6 207.625 232.612 207.521 cv
231.624 207.416 230.635 207.312 229.655 207.312 cv
228.965 207.312 228.28 207.364 227.603 207.504 cv
226.145 207.806 224.768 208.512 223.281 208.578 cv
223.203 208.582 223.125 208.583 223.047 208.583 cv
220.836 208.583 218.854 207.203 217.058 205.883 cv
215.584 204.8 214.088 203.694 212.997 202.227 cv
212.235 201.202 211.694 200.029 210.938 199 cv
210.127 197.895 209.087 196.98 208.096 196.032 cv
206.332 194.347 204.674 192.492 203.626 190.29 cv
202.578 188.086 202.194 185.482 203.019 183.186 cv
203.573 181.645 204.623 180.34 205.454 178.928 cv
206.284 177.516 206.913 175.843 206.502 174.257 cv
206.255 173.306 205.659 172.489 205.241 171.601 cv
204.41 169.834 204.522 167.941 205.166 166.098 cv
207.887 163.836 208.607 159.991 210.606 157.072 cv
211.567 155.669 212.805 154.506 214.168 153.482 cv
214.146 153.513 214.125 153.544 214.103 153.575 cv
212.105 156.494 211.383 160.339 208.663 162.602 cv
208.019 164.444 207.907 166.337 208.738 168.104 cv
209.156 168.993 209.752 169.809 209.999 170.76 cv
210.41 172.346 209.781 174.019 208.95 175.431 cv
208.12 176.843 207.07 178.147 206.516 179.689 cv
205.69 181.985 206.075 184.589 207.123 186.793 cv
208.17 188.996 209.829 190.85 211.593 192.535 cv
212.584 193.483 213.624 194.398 214.436 195.503 cv
215.19 196.532 215.732 197.705 216.494 198.729 cv
217.585 200.198 219.081 201.304 220.555 202.387 cv
222.351 203.706 224.333 205.086 226.544 205.086 cv
226.622 205.086 226.7 205.085 226.778 205.081 cv
228.265 205.015 229.643 204.309 231.1 204.007 cv
231.777 203.867 232.462 203.815 233.152 203.815 cv
234.132 203.815 235.121 203.919 236.109 204.024 cv
237.097 204.128 238.084 204.233 239.059 204.233 cv
239.91 204.233 240.753 204.153 241.579 203.924 cv
243.174 203.482 244.568 202.516 246.107 201.911 cv
247.33 201.431 248.643 201.189 249.956 201.189 cv
250.948 201.189 251.94 201.327 252.893 201.605 cv
253.24 201.707 253.596 201.834 253.846 202.095 cv
254.365 202.635 254.254 203.52 254.598 204.187 cv
255.086 205.134 256.151 205.286 257.288 205.286 cv
257.558 205.286 257.831 205.277 258.102 205.269 cv
258.373 205.26 258.641 205.252 258.899 205.252 cv
258.985 205.252 259.07 205.253 259.153 205.255 cv
261.019 205.304 262.83 206.337 263.821 207.917 cv
265.617 210.781 263.72 213.234 263.736 216.191 cv
263.747 218.209 264.29 219.772 264.747 221.737 cv
265.092 223.224 265.473 224.744 266.351 225.991 cv
267.401 227.483 269.161 228.612 269.446 230.413 cv
269.567 231.183 269.391 231.98 269.553 232.743 cv
269.699 233.429 270.105 234.023 270.452 234.633 cv
271.983 237.324 272.426 240.615 271.658 243.615 cv
270.829 246.854 269.38 249.116 269.948 252.491 cv
270.615 256.45 270.933 260.503 271.422 264.488 cv
271.658 266.409 271.899 268.351 272.579 270.163 cv
273.396 272.335 274.827 274.277 275.316 276.545 cv
275.767 278.625 275.481 281.064 276.957 282.596 cv
277.466 283.123 278.131 283.47 278.706 283.924 cv
280.373 285.237 281.194 287.396 281.352 289.514 cv
281.526 291.868 280.237 295.625 283.078 296.855 cv
283.539 297.055 284.03 297.146 284.525 297.146 cv
284.526 297.146 284.528 297.146 284.53 297.146 cv
283.317 298.326 282.089 299.491 280.846 300.639 cv
332.523 219.148 mo
332.732 218.906 332.947 218.667 333.166 218.43 cv
333.144 218.5 333.126 218.555 333.104 218.625 cv
332.91 218.798 332.716 218.973 332.523 219.148 cv
336.202 189.503 mo
335.563 189.503 334.924 189.44 334.297 189.312 cv
334.148 189.282 333.998 189.247 333.85 189.206 cv
333.77 188.828 333.692 188.447 333.578 188.089 cv
333.213 186.937 332.473 186.008 331.603 185.163 cv
330.992 181.209 329.306 177.257 325.992 175.078 cv
325.312 174.63 324.548 174.237 323.962 173.692 cv
323.751 172.45 323.354 171.223 322.843 170.009 cv
322.837 169.958 322.83 169.907 322.823 169.857 cv
322.553 167.97 321.356 166.404 320.163 164.884 cv
318.882 162.698 317.556 160.543 316.635 158.405 cv
316.016 156.968 315.519 155.462 314.653 154.158 cv
314.494 153.919 314.323 153.687 314.145 153.461 cv
313.941 152.763 313.761 152.059 313.605 151.349 cv
313.531 151.318 313.46 151.303 313.392 151.303 cv
313.131 151.303 312.915 151.515 312.713 151.793 cv
312.161 151.157 311.636 150.502 311.244 149.759 cv
310.849 149.01 310.599 148.127 310.846 147.317 cv
311.055 146.629 311.727 146.057 312.421 146.057 cv
312.542 146.057 312.664 146.075 312.784 146.112 cv
313.841 146.44 314.01 147.818 314.328 148.877 cv
314.407 149.143 314.532 149.428 314.787 149.536 cv
314.862 149.568 314.933 149.583 315.002 149.583 cv
315.378 149.583 315.661 149.139 315.945 148.695 cv
316.228 148.251 316.512 147.806 316.889 147.806 cv
316.957 147.806 317.028 147.821 317.103 147.853 cv
318.107 152.438 320.132 156.796 322.986 160.523 cv
324.365 162.324 325.999 164.114 326.32 166.36 cv
326.463 167.359 326.341 168.43 326.794 169.332 cv
327.327 170.391 328.498 170.929 329.488 171.581 cv
333.076 173.94 334.757 178.378 335.229 182.647 cv
335.314 183.418 335.388 184.244 335.876 184.847 cv
336.336 185.415 337.077 185.669 337.794 185.815 cv
338.421 185.943 339.06 186.006 339.699 186.006 cv
339.923 186.006 340.148 185.998 340.372 185.983 cv
340.25 186.91 340.123 187.83 339.987 188.753 cv
338.791 189.246 337.496 189.503 336.202 189.503 cv
219.827 148.514 mo
220.09 146.741 219.382 144.587 220.466 143.118 cv
220.804 142.66 221.282 142.328 221.752 142.006 cv
222.315 141.62 222.878 141.233 223.44 140.847 cv
223.065 142.691 223.91 144.998 222.723 146.516 cv
222.327 147.022 221.756 147.355 221.203 147.681 cv
220.743 147.952 220.282 148.229 219.827 148.514 cv
341.548 147.793 mo
341.514 147.731 341.482 147.668 341.454 147.603 cv
341.259 147.145 341.27 146.64 341.43 146.171 cv
341.471 146.711 341.511 147.252 341.548 147.793 cv
281.513 144.871 mo
281.542 144.779 281.569 144.686 281.595 144.594 cv
281.775 143.935 281.906 143.225 282.357 142.71 cv
282.871 142.123 283.679 141.93 284.477 141.93 cv
284.587 141.93 284.697 141.934 284.805 141.941 cv
284.232 143.342 283.199 144.598 281.741 144.841 cv
281.664 144.854 281.588 144.864 281.513 144.871 cv
312.347 141.833 mo
312.342 139.6 312.336 137.366 312.331 135.133 cv
312.33 134.584 312.32 134.003 312.033 133.535 cv
311.675 132.949 311.037 132.732 310.34 132.732 cv
309.733 132.732 309.081 132.897 308.529 133.127 cv
307.674 133.484 306.735 133.928 305.848 133.928 cv
305.506 133.928 305.172 133.862 304.854 133.699 cv
304.361 133.447 303.987 132.989 303.469 132.8 cv
303.283 132.732 303.099 132.702 302.917 132.702 cv
301.913 132.702 300.954 133.61 299.979 134.094 cv
299.48 134.341 298.936 134.455 298.39 134.455 cv
296.584 134.455 294.739 133.211 294.325 131.418 cv
294.19 130.833 294.183 130.206 293.899 129.676 cv
293.469 128.873 292.452 128.392 292.326 127.489 cv
292.213 126.669 292.968 125.931 293.779 125.767 cv
293.957 125.731 294.135 125.715 294.313 125.715 cv
294.952 125.715 295.594 125.918 296.205 126.13 cv
296.479 126.224 296.779 126.319 297.062 126.319 cv
297.191 126.319 297.316 126.3 297.434 126.252 cv
297.681 126.766 297.694 127.363 297.822 127.921 cv
298.236 129.714 300.08 130.958 301.886 130.958 cv
302.433 130.958 302.976 130.844 303.476 130.597 cv
304.451 130.113 305.41 129.205 306.415 129.205 cv
306.597 129.205 306.78 129.235 306.966 129.303 cv
307.484 129.492 307.858 129.95 308.35 130.202 cv
308.668 130.365 309.003 130.431 309.345 130.431 cv
310.232 130.431 311.171 129.987 312.026 129.63 cv
312.578 129.4 313.23 129.235 313.837 129.235 cv
314.534 129.235 315.172 129.452 315.53 130.038 cv
315.816 130.506 315.827 131.087 315.828 131.636 cv
315.834 134.098 315.84 136.561 315.845 139.023 cv
315.846 139.404 315.84 139.809 315.632 140.128 cv
315.444 140.415 315.125 140.583 314.818 140.738 cv
314.015 141.146 313.201 141.558 312.347 141.833 cv
230.203 134.806 mo
229.417 134.806 228.682 134.38 228.002 133.967 cv
226.714 133.185 225.425 132.403 224.137 131.622 cv
223.688 131.349 223.221 131.06 222.948 130.61 cv
222.696 130.194 222.641 129.685 222.671 129.199 cv
222.824 126.667 225.055 124.444 224.635 121.942 cv
224.483 121.042 223.988 120.197 224.02 119.285 cv
224.05 118.377 224.657 117.515 225.501 117.18 cv
225.769 117.073 226.056 117.022 226.343 117.022 cv
226.91 117.022 227.478 117.221 227.908 117.59 cv
227.999 117.872 228.083 118.156 228.132 118.445 cv
228.552 120.947 226.321 123.17 226.168 125.702 cv
226.138 126.188 226.193 126.697 226.445 127.113 cv
226.718 127.563 227.185 127.852 227.634 128.125 cv
228.922 128.906 230.211 129.688 231.499 130.47 cv
232.178 130.882 232.914 131.309 233.7 131.309 cv
233.755 131.309 233.811 131.307 233.867 131.303 cv
235.047 131.21 235.942 130.138 237.104 129.911 cv
237.274 129.878 237.443 129.864 237.613 129.864 cv
238.147 129.864 238.681 130.006 239.216 130.151 cv
238.867 131.027 238.641 131.95 238.56 132.891 cv
238.535 133.173 238.512 133.482 238.315 133.686 cv
238.166 133.84 237.945 133.901 237.732 133.928 cv
237.615 133.943 237.498 133.949 237.38 133.949 cv
236.833 133.949 236.287 133.802 235.744 133.655 cv
235.2 133.508 234.658 133.36 234.115 133.36 cv
233.946 133.36 233.777 133.375 233.607 133.408 cv
232.446 133.635 231.551 134.707 230.37 134.8 cv
230.314 134.804 230.258 134.806 230.203 134.806 cv
286.989 134.631 mo
285.694 134.54 282.171 134.795 282.602 132.45 cv
282.867 130.999 285.333 130.94 285.699 129.511 cv
285.387 128.91 284.659 128.7 283.961 128.7 cv
283.834 128.7 283.709 128.707 283.587 128.72 cv
283.032 128.778 282.467 128.913 281.915 128.913 cv
281.676 128.913 281.44 128.887 281.208 128.819 cv
280.517 128.618 280.037 128.1 279.718 127.453 cv
280.012 127.041 280.189 126.528 280.188 126.028 cv
280.184 124.978 279.653 124.023 279.074 123.133 cv
279.049 122.924 279.016 122.718 278.971 122.516 cv
279.036 122.493 279.12 122.486 279.215 122.486 cv
279.303 122.486 279.4 122.492 279.5 122.498 cv
279.6 122.505 279.703 122.511 279.803 122.511 cv
279.922 122.511 280.036 122.502 280.134 122.473 cv
280.531 122.353 280.613 121.778 280.386 121.431 cv
280.158 121.084 279.749 120.912 279.366 120.752 cv
277.201 119.845 275.134 118.706 273.21 117.36 cv
271.283 116.011 269.387 114.264 268.98 111.947 cv
268.905 111.519 268.988 110.938 269.416 110.863 cv
269.444 110.858 269.472 110.856 269.5 110.856 cv
269.663 110.856 269.824 110.935 269.973 111.012 cv
273.213 112.687 276.453 114.363 279.692 116.04 cv
280.499 116.457 281.335 116.898 281.87 117.631 cv
282.721 118.795 282.607 120.368 282.694 121.807 cv
282.781 123.246 283.321 124.918 284.705 125.322 cv
284.799 125.35 284.893 125.37 284.988 125.385 cv
284.933 126.12 285.817 126.692 286.47 127.167 cv
286.708 127.34 286.924 127.536 287.118 127.751 cv
286.617 128.051 286.199 128.402 286.098 128.953 cv
285.832 130.402 287.075 130.858 288.369 131.016 cv
288.406 132.353 287.955 133.698 286.989 134.631 cv
274.766 131.797 mo
274.679 131.797 274.591 131.789 274.502 131.772 cv
273.157 131.525 272.79 129.778 272.842 128.412 cv
272.893 127.045 272.912 125.373 271.729 124.686 cv
271.392 124.491 271.025 124.418 270.641 124.418 cv
270.094 124.418 269.513 124.566 268.937 124.713 cv
268.36 124.86 267.787 125.008 267.256 125.008 cv
266.818 125.008 266.408 124.907 266.047 124.625 cv
264.999 123.805 265.32 122.172 264.967 120.889 cv
264.568 119.446 263.286 118.451 262.081 117.564 cv
261.234 116.941 260.197 116.297 259.208 116.297 cv
258.891 116.297 258.578 116.363 258.278 116.517 cv
257.362 116.988 256.959 118.126 256.073 118.649 cv
255.694 118.874 255.287 118.961 254.864 118.961 cv
254.123 118.961 253.331 118.694 252.544 118.428 cv
252.056 118.263 251.57 118.098 251.098 117.996 cv
251.407 116.805 251.477 115.497 252.44 114.798 cv
252.841 114.508 253.281 114.398 253.746 114.398 cv
254.47 114.398 255.253 114.664 256.041 114.931 cv
256.828 115.197 257.62 115.464 258.36 115.464 cv
258.784 115.464 259.19 115.377 259.569 115.153 cv
260.456 114.629 260.859 113.491 261.774 113.021 cv
262.075 112.866 262.387 112.8 262.705 112.8 cv
263.695 112.8 264.73 113.444 265.577 114.067 cv
265.705 114.161 265.835 114.257 265.963 114.354 cv
265.949 114.355 265.934 114.357 265.919 114.36 cv
265.491 114.435 265.408 115.016 265.483 115.444 cv
265.836 117.453 267.309 119.034 268.95 120.298 cv
269.074 120.619 269.258 120.904 269.544 121.128 cv
269.885 121.395 270.27 121.499 270.682 121.509 cv
272.325 122.575 274.063 123.493 275.87 124.249 cv
276.031 124.317 276.198 124.386 276.353 124.471 cv
276.35 124.621 276.344 124.77 276.339 124.915 cv
276.326 125.265 276.34 125.639 276.391 126.007 cv
276.363 126.008 276.334 126.008 276.306 126.008 cv
276.206 126.008 276.103 126.002 276.003 125.996 cv
275.903 125.989 275.806 125.983 275.718 125.983 cv
275.475 125.983 275.303 126.032 275.337 126.266 cv
276 127.26 276.688 128.331 276.69 129.525 cv
276.694 130.629 275.825 131.797 274.766 131.797 cv
243.42 125.225 mo
244.307 123.736 245.574 122.471 247.091 121.629 cv
247.27 121.53 247.454 121.435 247.639 121.341 cv
247.529 121.796 247.392 122.239 247.165 122.629 cv
246.424 123.904 244.883 124.411 243.594 125.126 cv
243.535 125.159 243.477 125.192 243.42 125.225 cv
295.297 124.893 mo
294.354 124.893 293.456 124.489 292.564 124.166 cv
291.962 123.948 291.311 123.765 290.679 123.765 cv
290.501 123.765 290.324 123.78 290.151 123.812 cv
290.091 123.763 290.03 123.716 289.967 123.67 cv
289.25 123.149 288.257 122.512 288.528 121.669 cv
288.703 121.126 289.34 120.908 289.927 120.908 cv
289.993 120.908 290.058 120.91 290.122 120.916 cv
290.577 120.954 291.039 121.072 291.49 121.072 cv
291.666 121.072 291.841 121.054 292.013 121.006 cv
292.422 120.893 292.768 120.622 293.16 120.459 cv
293.486 120.324 293.829 120.268 294.177 120.268 cv
294.809 120.268 295.46 120.451 296.061 120.669 cv
296.191 120.716 296.321 120.765 296.452 120.814 cv
296.499 120.926 296.551 121.037 296.609 121.147 cv
296.809 121.526 297.076 121.89 297.263 122.273 cv
296.457 122.443 295.711 123.176 295.823 123.992 cv
295.863 124.276 295.991 124.519 296.161 124.743 cv
295.925 124.829 295.676 124.88 295.432 124.89 cv
295.386 124.892 295.342 124.893 295.297 124.893 cv
321.966 121.535 mo
321.858 121.348 321.734 121.169 321.607 120.999 cv
319.843 118.615 317.417 116.727 314.673 115.602 cv
313.875 115.274 313.018 114.988 312.434 114.354 cv
311.92 113.796 311.735 112.857 312.152 112.268 cv
312.48 112.139 312.803 111.989 313.119 111.84 cv
313.102 111.811 313.084 111.781 313.066 111.751 cv
313.285 111.716 313.517 111.711 313.752 111.711 cv
313.794 111.711 313.836 111.711 313.877 111.711 cv
313.919 111.711 313.961 111.712 314.003 111.712 cv
314.29 111.712 314.578 111.705 314.849 111.644 cv
315.305 111.541 315.683 111.252 315.946 110.874 cv
316.53 111.496 317.379 111.78 318.17 112.105 cv
320.913 113.23 323.34 115.119 325.104 117.501 cv
325.469 117.994 325.821 118.558 325.781 119.17 cv
325.705 120.334 324.36 120.909 323.237 121.226 cv
322.829 121.341 322.4 121.452 321.966 121.535 cv
306.967 116.139 mo
306.895 116.139 306.822 116.137 306.749 116.131 cv
305.746 116.06 304.718 115.279 304.752 114.274 cv
304.767 113.825 304.984 113.406 305.034 112.96 cv
305.181 111.658 303.797 110.673 302.471 110.673 cv
302.275 110.673 302.08 110.695 301.892 110.74 cv
301.71 110.784 301.535 110.841 301.366 110.91 cv
301.563 110.612 301.767 110.322 301.973 110.044 cv
302.869 108.836 303.926 107.595 305.388 107.243 cv
305.576 107.198 305.771 107.176 305.968 107.176 cv
307.294 107.176 308.678 108.161 308.531 109.463 cv
308.48 109.909 308.264 110.328 308.248 110.777 cv
308.235 111.158 308.375 111.507 308.609 111.797 cv
308.249 112.76 309.057 114.407 309.623 115.336 cv
308.779 115.733 307.891 116.139 306.967 116.139 cv
237.468 115.335 mo
237.548 114.348 237.24 113.316 236.693 112.476 cv
235.931 111.307 234.763 110.459 233.544 109.779 cv
232.96 109.454 232.3 109.088 232.129 108.442 cv
231.848 107.375 233.065 106.557 234.101 106.176 cv
234.716 105.95 235.343 105.743 235.975 105.546 cv
236.263 105.85 236.668 106.074 237.041 106.282 cv
238.26 106.962 239.428 107.81 240.189 108.979 cv
240.952 110.149 241.249 111.69 240.681 112.965 cv
240.144 114.171 238.92 114.963 237.642 115.292 cv
237.584 115.307 237.526 115.321 237.468 115.335 cv
312.133 109.653 mo
311.935 108.896 311.952 108.186 312.476 107.813 cv
312.822 107.565 313.264 107.502 313.669 107.368 cv
314.715 107.019 315.515 106.19 316.417 105.557 cv
317.044 105.117 317.82 104.768 318.561 104.768 cv
318.888 104.768 319.208 104.836 319.506 104.994 cv
320.305 106.057 319.643 107.855 318.346 108.147 cv
318.075 108.208 317.787 108.215 317.5 108.215 cv
317.458 108.215 317.415 108.215 317.373 108.215 cv
317.332 108.214 317.29 108.214 317.249 108.214 cv
316.785 108.214 316.334 108.232 315.967 108.469 cv
315.681 108.326 315.376 108.265 315.064 108.265 cv
314.323 108.265 313.547 108.614 312.921 109.054 cv
312.652 109.242 312.393 109.448 312.133 109.653 cv
280.104 90.1653 mo
280.099 89.6076 280.008 89.0387 279.91 88.4898 cv
279.832 88.0478 279.758 87.5625 279.982 87.1733 cv
280.201 86.7926 280.577 86.6537 281.006 86.6537 cv
281.549 86.6537 282.179 86.8769 282.683 87.1137 cv
282.942 87.236 283.245 87.3341 283.551 87.3886 cv
283.509 87.6536 283.437 87.9126 283.327 88.1621 cv
282.799 89.3589 281.468 90.043 280.165 90.1602 cv
280.145 90.162 280.124 90.1637 280.104 90.1653 cv
267.843 90.1447 mo
267.769 90.1447 267.696 90.1382 267.622 90.124 cv
267.217 90.0454 266.891 89.7432 266.639 89.4161 cv
265.866 88.4131 265.596 87.1254 265.13 85.9487 cv
264.664 84.7715 263.846 83.5776 262.605 83.3281 cv
262.434 83.2938 262.263 83.279 262.092 83.279 cv
261.296 83.279 260.501 83.5998 259.709 83.7754 cv
259.271 83.8725 258.822 83.9201 258.373 83.9201 cv
256.46 83.9201 254.537 83.0581 253.452 81.4892 cv
252.112 79.5522 252.321 76.6162 254.092 75.062 cv
254.712 74.5176 255.439 74.1745 256.217 73.9249 cv
255.897 75.2963 256.142 76.8256 256.949 77.9927 cv
258.034 79.5612 259.957 80.4235 261.87 80.4235 cv
262.319 80.4235 262.768 80.376 263.205 80.2788 cv
263.997 80.1029 264.792 79.7822 265.587 79.7822 cv
265.759 79.7822 265.93 79.7971 266.102 79.8315 cv
267.343 80.0806 268.16 81.2749 268.627 82.4517 cv
269.093 83.6289 269.363 84.916 270.136 85.9189 cv
270.388 86.2461 270.714 86.5483 271.119 86.627 cv
271.193 86.6412 271.267 86.6477 271.34 86.6477 cv
271.704 86.6477 272.063 86.4908 272.4 86.3369 cv
272.484 86.2988 272.568 86.2601 272.652 86.2209 cv
272.581 86.4696 272.517 86.7226 272.425 86.9605 cv
271.861 88.4106 270.318 89.1875 268.903 89.834 cv
268.566 89.9874 268.206 90.1447 267.843 90.1447 cv
275.558 84.1435 mo
275.703 83.9343 275.827 83.7085 275.922 83.4634 cv
276.1 83.0047 276.173 82.4901 276.39 82.0583 cv
276.569 82.37 276.71 82.7081 276.669 83.0595 cv
276.599 83.6595 276.139 83.9407 275.558 84.1435 cv
287.555 83.9391 mo
287.094 83.9391 286.584 83.8072 286.18 83.6167 cv
285.812 83.4436 285.376 83.2778 284.956 83.2011 cv
285.123 83.0844 285.311 82.9952 285.503 82.9409 cv
285.767 82.866 286.039 82.8408 286.314 82.8408 cv
286.669 82.8408 287.029 82.8833 287.384 82.9155 cv
287.844 82.9576 288.307 82.9812 288.769 82.9867 cv
288.769 83.059 288.76 83.1323 288.742 83.207 cv
288.612 83.7403 288.121 83.9391 287.555 83.9391 cv
286.581 80.1515 mo
285.791 80.1515 285.001 80.0879 284.221 79.9599 cv
282.455 79.6704 280.503 78.8061 280.06 77.0728 cv
279.42 74.5717 282.243 72.6411 283.204 70.2456 cv
283.477 69.5674 283.5 68.6148 282.846 68.289 cv
282.712 68.2228 282.575 68.1939 282.437 68.1939 cv
281.942 68.1939 281.432 68.5633 281.033 68.9151 cv
279.893 69.9199 278.753 70.925 277.613 71.93 cv
277.659 71.8248 277.711 71.7219 277.77 71.6216 cv
278.066 71.1182 278.512 70.7231 278.949 70.3374 cv
280.81 68.6977 282.67 67.0581 284.53 65.4184 cv
284.929 65.0667 285.439 64.6971 285.934 64.6971 cv
286.072 64.6971 286.209 64.726 286.343 64.7925 cv
286.997 65.1182 286.974 66.0703 286.701 66.7485 cv
285.74 69.1441 282.916 71.0747 283.556 73.5756 cv
283.999 75.3096 285.952 76.1733 287.718 76.4634 cv
288.497 76.5911 289.287 76.6546 290.077 76.6546 cv
291.567 76.6546 293.057 76.4287 294.478 75.9819 cv
295.366 75.7031 296.28 75.3353 297.191 75.3353 cv
297.419 75.3353 297.646 75.3583 297.873 75.4116 cv
299.006 75.6772 299.885 77.169 299.1 78.0268 cv
298.839 78.3105 298.463 78.4546 298.098 78.5767 cv
297.133 78.8998 296.14 79.1384 295.134 79.2907 cv
294.91 79.1089 294.65 78.9726 294.376 78.9082 cv
294.15 78.8551 293.922 78.8321 293.695 78.8321 cv
292.828 78.8321 291.957 79.1656 291.109 79.4382 cv
291.033 79.4323 290.957 79.4259 290.881 79.4189 cv
290.525 79.3866 290.164 79.3439 289.808 79.3439 cv
289.535 79.3439 289.264 79.3691 289 79.4439 cv
288.636 79.5468 288.288 79.7746 288.07 80.0762 cv
287.575 80.1264 287.078 80.1515 286.581 80.1515 cv
265.508 68.7327 mo
265.741 68.3112 265.94 67.8706 266.099 67.415 cv
266.29 66.8648 266.434 66.2822 266.783 65.8154 cv
267.172 65.2954 267.769 64.9804 268.346 64.6826 cv
268.745 64.4765 269.143 64.2704 269.542 64.0644 cv
268.814 66.0346 267.343 67.7152 265.508 68.7327 cv
304.762 67.035 mo
304.473 67.035 304.184 67.0094 303.897 66.9502 cv
303.869 66.9443 303.841 66.9381 303.812 66.9317 cv
303.21 66.467 302.63 65.9725 302.077 65.4502 cv
301.505 64.9097 300.919 64.2344 300.982 63.4493 cv
301.018 63.0069 301.249 62.6574 301.586 62.4057 cv
303.778 62.9009 305.97 63.3963 308.161 63.8916 cv
308.56 63.9814 308.996 64.0962 309.227 64.4331 cv
309.63 65.0227 309.157 65.642 308.499 66.0634 cv
308.44 66.0586 308.381 66.056 308.322 66.056 cv
308.198 66.056 308.074 66.0674 307.951 66.0937 cv
307.648 66.1589 307.359 66.351 307.185 66.6026 cv
306.39 66.8328 305.573 67.035 304.762 67.035 cv
314.155 66.9763 mo
314.15 66.8042 314.128 66.6306 314.086 66.457 cv
313.896 65.6709 313.337 64.9101 313.554 64.1313 cv
313.715 63.5503 314.276 63.213 314.886 63.1439 cv
315.435 64.0561 315.975 64.971 316.51 65.893 cv
316.019 66.344 315.411 66.6853 314.776 66.8525 cv
314.57 66.9066 314.363 66.9474 314.155 66.9763 cv
.0470588 .501961 .67451 rgb
f
321.344 61.7891 mo
320.831 60.9971 320.264 60.1689 319.399 59.791 cv
318.534 59.4125 317.303 59.7251 317.051 60.6348 cv
316.834 61.4136 317.393 62.1743 317.582 62.96 cv
317.999 64.6831 316.49 66.4014 314.776 66.8525 cv
313.062 67.3032 311.252 66.8281 309.557 66.3071 cv
309.035 66.1464 308.485 65.9795 307.951 66.0937 cv
307.417 66.2085 306.926 66.7173 307.037 67.2519 cv
307.139 67.7393 307.649 68.0024 308.025 68.3296 cv
308.401 68.6567 308.631 69.3359 308.206 69.5972 cv
305.958 68.5571 303.879 67.1509 302.077 65.4502 cv
301.505 64.9097 300.919 64.2344 300.982 63.4493 cv
301.083 62.2036 302.731 61.6948 303.936 62.0303 cv
305.14 62.3662 306.17 63.2007 307.395 63.4532 cv
308.621 63.7066 309.883 63.3452 311.084 62.9873 cv
312.069 62.6938 313.305 61.7847 312.724 60.9365 cv
312.493 60.5996 312.057 60.4848 311.658 60.3946 cv
307.72 59.5049 303.781 58.6147 299.843 57.7246 cv
298.246 57.3638 296.646 57.002 295.019 56.8193 cv
292.43 56.5288 289.808 56.6953 287.216 56.4345 cv
285.857 56.2978 284.495 56.0435 283.135 56.1675 cv
281.241 56.3404 279.498 57.2295 277.81 58.1021 cv
275.82 59.1299 273.831 60.1577 271.843 61.1856 cv
271.266 61.4834 270.669 61.7984 270.279 62.3188 cv
269.931 62.7852 269.787 63.3682 269.595 63.918 cv
268.722 66.4218 266.653 68.4795 264.144 69.3398 cv
261.939 70.0962 259.341 70.0273 257.589 71.5655 cv
255.818 73.1191 255.609 76.0552 256.949 77.9927 cv
258.289 79.9297 260.906 80.7896 263.205 80.2788 cv
264.168 80.065 265.135 79.6372 266.102 79.8315 cv
267.343 80.0806 268.16 81.2749 268.627 82.4517 cv
269.093 83.6289 269.363 84.916 270.136 85.9189 cv
270.388 86.2461 270.714 86.5483 271.119 86.627 cv
271.557 86.7114 271.995 86.5219 272.4 86.3369 cv
273.815 85.6904 275.358 84.9136 275.922 83.4634 cv
276.153 82.8677 276.208 82.1777 276.629 81.6973 cv
277.584 80.6064 279.998 81.0029 280.166 79.5625 cv
280.217 79.1259 279.987 78.709 279.751 78.3384 cv
279.086 77.2964 278.291 76.3252 277.796 75.1928 cv
277.3 74.06 277.143 72.687 277.77 71.6216 cv
278.066 71.1182 278.512 70.7231 278.949 70.3374 cv
280.81 68.6977 282.67 67.0581 284.53 65.4184 cv
285.041 64.9683 285.733 64.4887 286.343 64.7925 cv
286.997 65.1182 286.974 66.0703 286.701 66.7485 cv
285.74 69.1441 282.916 71.0747 283.556 73.5756 cv
283.999 75.3096 285.952 76.1733 287.718 76.4634 cv
289.968 76.832 292.304 76.6655 294.478 75.9819 cv
295.588 75.6333 296.74 75.1455 297.873 75.4116 cv
299.006 75.6772 299.885 77.169 299.1 78.0268 cv
298.839 78.3105 298.463 78.4546 298.098 78.5767 cv
295.784 79.3516 293.31 79.6401 290.881 79.4189 cv
290.252 79.3618 289.606 79.272 289 79.4439 cv
288.393 79.6158 287.829 80.1353 287.841 80.7661 cv
287.857 81.6543 288.953 82.3438 288.742 83.207 cv
288.506 84.1748 287.081 84.041 286.18 83.6167 cv
285.278 83.1929 283.976 82.813 283.479 83.6763 cv
283.255 84.0659 283.329 84.5508 283.407 84.9926 cv
283.595 86.0498 283.761 87.1801 283.327 88.1621 cv
282.799 89.3589 281.468 90.043 280.165 90.1602 cv
278.862 90.2774 277.567 89.9243 276.313 89.5567 cv
275.741 89.3891 275.145 89.2163 274.561 89.3301 cv
273.626 89.5122 272.99 90.3614 272.175 90.853 cv
270.634 91.782 268.854 91.3219 267.032 90.8616 cv
265.69 90.5225 264.325 90.1835 263.018 90.4004 cv
262.233 90.5308 261.497 90.8603 260.771 91.187 cv
258.78 92.0835 256.788 92.9795 254.797 93.876 cv
253.163 94.6118 251.658 96.0928 250.336 97.3018 cv
246.905 100.438 241.961 101.077 237.598 102.679 cv
236.562 103.06 235.345 103.878 235.626 104.945 cv
235.797 105.591 236.457 105.957 237.041 106.282 cv
238.26 106.962 239.428 107.81 240.189 108.979 cv
240.952 110.149 241.249 111.69 240.681 112.965 cv
240.144 114.171 238.92 114.963 237.642 115.292 cv
236.362 115.622 235.018 115.552 233.701 115.453 cv
233.256 115.419 232.791 115.376 232.417 115.132 cv
232.054 114.896 231.827 114.503 231.52 114.198 cv
230.875 113.559 229.842 113.348 228.998 113.683 cv
228.154 114.018 227.547 114.88 227.517 115.788 cv
227.485 116.7 227.98 117.545 228.132 118.445 cv
228.552 120.947 226.321 123.17 226.168 125.702 cv
226.138 126.188 226.193 126.697 226.445 127.113 cv
226.718 127.563 227.185 127.852 227.634 128.125 cv
228.922 128.906 230.211 129.688 231.499 130.47 cv
232.227 130.912 233.019 131.37 233.867 131.303 cv
235.047 131.21 235.942 130.138 237.104 129.911 cv
237.817 129.772 238.528 129.965 239.241 130.158 cv
239.901 130.337 240.563 130.516 241.228 130.431 cv
241.442 130.404 241.663 130.343 241.812 130.189 cv
242.009 129.985 242.032 129.676 242.057 129.394 cv
242.333 126.195 244.283 123.188 247.091 121.629 cv
248.38 120.915 249.921 120.407 250.662 119.132 cv
251.461 117.756 251.152 115.733 252.44 114.798 cv
253.465 114.056 254.747 114.493 256.041 114.931 cv
257.279 115.35 258.527 115.769 259.569 115.153 cv
260.456 114.629 260.859 113.491 261.774 113.021 cv
263.011 112.385 264.459 113.244 265.577 114.067 cv
266.783 114.955 268.065 115.949 268.464 117.393 cv
268.817 118.675 268.496 120.308 269.544 121.128 cv
270.343 121.753 271.382 121.484 272.434 121.216 cv
273.415 120.965 274.407 120.715 275.227 121.189 cv
276.409 121.876 276.391 123.548 276.339 124.915 cv
276.287 126.282 276.654 128.028 277.999 128.276 cv
279.173 128.492 280.191 127.222 280.188 126.028 cv
280.184 124.833 279.497 123.763 278.834 122.769 cv
278.788 122.45 279.124 122.474 279.5 122.498 cv
279.72 122.513 279.954 122.527 280.134 122.473 cv
280.531 122.353 280.613 121.778 280.386 121.431 cv
280.158 121.084 279.749 120.912 279.366 120.752 cv
277.201 119.845 275.134 118.706 273.21 117.36 cv
271.283 116.011 269.387 114.264 268.98 111.947 cv
268.905 111.519 268.988 110.938 269.416 110.863 cv
269.608 110.829 269.799 110.921 269.973 111.012 cv
273.213 112.687 276.453 114.363 279.692 116.04 cv
280.499 116.457 281.335 116.898 281.87 117.631 cv
282.721 118.795 282.607 120.368 282.694 121.807 cv
282.781 123.246 283.321 124.918 284.705 125.322 cv
285.473 125.547 286.288 125.306 287.084 125.223 cv
287.88 125.14 288.827 125.305 289.196 126.014 cv
288.83 127.443 286.364 127.502 286.098 128.953 cv
285.668 131.298 289.191 131.043 290.486 131.134 cv
292.53 129.161 292.265 125.34 289.967 123.67 cv
289.25 123.149 288.257 122.512 288.528 121.669 cv
288.723 121.065 289.488 120.863 290.122 120.916 cv
290.755 120.969 291.4 121.177 292.013 121.006 cv
292.422 120.893 292.768 120.622 293.16 120.459 cv
294.077 120.078 295.128 120.331 296.061 120.669 cv
296.995 121.007 297.936 121.435 298.929 121.393 cv
299.921 121.352 300.977 120.64 300.985 119.646 cv
300.992 118.91 300.45 118.302 300.106 117.65 cv
298.816 115.209 300.329 112.261 301.973 110.044 cv
302.869 108.836 303.926 107.595 305.388 107.243 cv
306.851 106.892 308.699 107.968 308.531 109.463 cv
308.48 109.909 308.264 110.328 308.248 110.777 cv
308.215 111.782 309.243 112.563 310.246 112.634 cv
311.249 112.706 312.21 112.268 313.119 111.84 cv
312.439 110.723 311.411 108.572 312.476 107.813 cv
312.822 107.565 313.264 107.502 313.669 107.368 cv
314.715 107.019 315.515 106.19 316.417 105.557 cv
317.32 104.924 318.532 104.477 319.506 104.994 cv
320.305 106.057 319.643 107.855 318.346 108.147 cv
318.035 108.217 317.703 108.216 317.373 108.215 cv
316.818 108.213 316.272 108.211 315.855 108.55 cv
315.187 109.095 315.347 110.222 315.931 110.857 cv
316.515 111.491 317.372 111.777 318.17 112.105 cv
320.913 113.23 323.34 115.119 325.104 117.501 cv
325.469 117.994 325.821 118.558 325.781 119.17 cv
325.705 120.334 324.36 120.909 323.237 121.226 cv
321.638 121.678 319.711 122.061 318.484 120.938 cv
318.074 120.563 317.796 120.054 317.353 119.716 cv
316.826 119.313 316.138 119.206 315.479 119.112 cv
312.925 118.748 310.118 118.433 307.942 119.822 cv
307.335 120.21 306.764 120.735 306.048 120.819 cv
305.331 120.904 304.499 120.194 304.818 119.548 cv
303.493 119.777 302.294 120.648 301.667 121.838 cv
301.497 122.16 301.349 122.524 301.034 122.705 cv
300.636 122.935 300.136 122.783 299.702 122.633 cv
298.92 122.362 298.088 122.105 297.276 122.27 cv
296.465 122.435 295.71 123.172 295.823 123.992 cv
295.949 124.895 296.966 125.376 297.396 126.179 cv
297.68 126.709 297.687 127.336 297.822 127.921 cv
298.361 130.257 301.327 131.661 303.476 130.597 cv
304.628 130.025 305.757 128.862 306.966 129.303 cv
307.484 129.492 307.858 129.95 308.35 130.202 cv
309.494 130.787 310.841 130.125 312.026 129.63 cv
313.212 129.135 314.859 128.942 315.53 130.038 cv
315.816 130.506 315.827 131.087 315.828 131.636 cv
315.834 134.098 315.84 136.561 315.845 139.023 cv
315.846 139.404 315.84 139.809 315.632 140.128 cv
315.444 140.415 315.125 140.583 314.818 140.738 cv
313.704 141.305 312.567 141.878 311.335 142.083 cv
310.297 142.255 309.243 142.158 308.189 142.06 cv
307.171 141.967 306.153 141.873 305.148 142.021 cv
304.04 142.185 302.99 142.639 301.881 142.801 cv
297.184 143.486 293.244 138.939 288.521 138.461 cv
287.565 138.365 286.486 138.491 285.853 139.213 cv
285.403 139.728 285.272 140.437 285.092 141.098 cv
284.624 142.805 283.487 144.55 281.741 144.841 cv
279.236 145.258 277.431 142.657 275.469 141.045 cv
273.886 139.744 271.86 138.991 269.811 138.941 cv
268.462 138.909 266.787 139.012 266.125 137.836 cv
265.909 137.452 265.859 136.997 265.848 136.556 cv
265.817 135.373 266.033 134.188 265.932 133.009 cv
265.83 131.83 265.323 130.583 264.269 130.044 cv
262.988 129.389 261.635 129.999 260.243 130.608 cv
259.196 131.066 258.127 131.524 257.049 131.446 cv
256.065 131.375 255.178 130.857 254.238 130.559 cv
251.823 129.791 249.187 130.495 246.864 131.508 cv
244.447 132.562 242.458 133.82 239.855 134.404 cv
238.632 134.679 237.35 134.515 236.07 134.352 cv
234.662 134.173 233.257 133.993 231.939 134.396 cv
230.687 134.78 229.585 135.532 228.505 136.273 cv
227.42 137.019 226.335 137.764 225.249 138.509 cv
224.779 138.831 224.301 139.163 223.963 139.621 cv
222.545 141.543 224.194 144.636 222.723 146.516 cv
222.327 147.022 221.756 147.355 221.203 147.681 cv
218.53 149.255 215.855 151.016 214.103 153.575 cv
212.105 156.494 211.383 160.339 208.663 162.602 cv
208.019 164.444 207.907 166.337 208.738 168.104 cv
209.156 168.993 209.752 169.809 209.999 170.76 cv
210.41 172.346 209.781 174.019 208.95 175.431 cv
208.12 176.843 207.07 178.147 206.516 179.689 cv
205.69 181.985 206.075 184.589 207.123 186.793 cv
208.17 188.996 209.829 190.85 211.593 192.535 cv
212.584 193.483 213.624 194.398 214.436 195.503 cv
215.19 196.532 215.732 197.705 216.494 198.729 cv
217.585 200.198 219.081 201.304 220.555 202.387 cv
222.414 203.753 224.473 205.184 226.778 205.081 cv
228.265 205.015 229.643 204.309 231.1 204.007 cv
232.738 203.667 234.425 203.846 236.109 204.024 cv
237.96 204.22 239.807 204.416 241.579 203.924 cv
243.174 203.482 244.568 202.516 246.107 201.911 cv
248.254 201.068 250.68 200.959 252.893 201.605 cv
253.24 201.707 253.596 201.834 253.846 202.095 cv
254.365 202.635 254.254 203.52 254.598 204.187 cv
255.202 205.358 256.687 205.313 258.102 205.269 cv
258.462 205.257 258.818 205.246 259.153 205.255 cv
261.019 205.304 262.83 206.337 263.821 207.917 cv
265.617 210.781 263.72 213.234 263.736 216.191 cv
263.747 218.209 264.29 219.772 264.747 221.737 cv
265.092 223.224 265.473 224.744 266.351 225.991 cv
267.401 227.483 269.161 228.612 269.446 230.413 cv
269.567 231.183 269.391 231.98 269.553 232.743 cv
269.699 233.429 270.105 234.023 270.452 234.633 cv
271.983 237.324 272.426 240.615 271.658 243.615 cv
270.829 246.854 269.38 249.116 269.948 252.491 cv
270.615 256.45 270.933 260.503 271.422 264.488 cv
271.658 266.409 271.899 268.351 272.579 270.163 cv
273.396 272.335 274.827 274.277 275.316 276.545 cv
275.767 278.625 275.481 281.064 276.957 282.596 cv
277.466 283.123 278.131 283.47 278.706 283.924 cv
280.373 285.237 281.194 287.396 281.352 289.514 cv
281.526 291.868 280.237 295.625 283.078 296.855 cv
284.59 297.511 286.418 296.997 287.677 295.936 cv
288.016 295.65 288.333 295.321 288.742 295.15 cv
289.639 294.774 290.525 295.253 291.435 295.732 cv
292.169 296.118 292.919 296.504 293.701 296.441 cv
294.185 296.402 294.635 296.191 295.066 295.97 cv
299.209 293.839 302.592 290.512 305.904 287.236 cv
307.742 285.418 309.58 283.601 311.418 281.783 cv
311.853 281.353 312.297 280.909 312.547 280.351 cv
313 279.339 312.738 278.135 313.097 277.085 cv
313.334 276.395 313.823 275.82 314.355 275.321 cv
315.37 274.37 316.57 273.629 317.559 272.649 cv
318.546 271.67 319.333 270.345 319.19 268.96 cv
319.115 268.228 318.788 267.548 318.605 266.835 cv
317.967 264.349 319.132 261.755 320.59 259.643 cv
321.577 258.212 322.713 256.884 323.973 255.686 cv
325.237 254.484 326.64 253.4 327.662 251.986 cv
329.145 249.933 329.709 247.238 329.172 244.762 cv
328.121 239.916 328.861 234.963 328.797 230.005 cv
328.779 228.62 328.762 227.226 329.013 225.864 cv
329.99 220.554 334.675 216.887 338.685 213.271 cv
345.046 207.535 350.436 200.729 354.563 193.225 cv
355.313 191.86 355.976 190.027 354.922 188.881 cv
353.745 187.601 351.653 188.405 350.083 189.153 cv
346.182 191.015 341.88 192.033 337.558 192.12 cv
336.601 192.14 335.551 192.079 334.84 191.437 cv
333.94 190.625 333.944 189.244 333.578 188.089 cv
332.834 185.742 330.537 184.324 328.741 182.64 cv
326.239 180.292 324.534 177.109 323.968 173.725 cv
323.077 168.404 318.769 163.36 316.635 158.405 cv
316.016 156.968 315.519 155.462 314.653 154.158 cv
313.625 152.61 312.111 151.403 311.244 149.759 cv
310.849 149.01 310.599 148.127 310.846 147.317 cv
311.092 146.508 311.976 145.861 312.784 146.112 cv
313.841 146.44 314.01 147.818 314.328 148.877 cv
314.407 149.143 314.532 149.428 314.787 149.536 cv
315.275 149.744 315.61 149.219 315.945 148.695 cv
316.279 148.17 316.614 147.646 317.103 147.853 cv
318.107 152.438 320.132 156.796 322.986 160.523 cv
324.365 162.324 325.999 164.114 326.32 166.36 cv
326.463 167.359 326.341 168.43 326.794 169.332 cv
327.327 170.391 328.498 170.929 329.488 171.581 cv
333.076 173.94 334.757 178.378 335.229 182.647 cv
335.314 183.418 335.388 184.244 335.876 184.847 cv
336.336 185.415 337.077 185.669 337.794 185.815 cv
340.379 186.342 343.169 185.762 345.33 184.249 cv
349.488 181.338 353.101 178.79 357.852 177.004 cv
359.034 176.56 360.273 176.141 361.191 175.272 cv
362.802 173.749 363.028 171.239 364.394 169.493 cv
365.37 168.244 366.837 167.498 368.06 166.489 cv
369.281 165.48 370.328 163.936 369.939 162.4 cv
368.161 162.13 366.415 161.639 364.757 160.941 cv
363.405 160.373 361.966 159.478 361.707 158.035 cv
361.582 157.341 361.759 156.615 361.604 155.927 cv
361.451 155.239 360.707 154.581 360.086 154.916 cv
359.765 155.09 359.612 155.457 359.446 155.782 cv
358.395 157.831 355.961 158.924 353.66 158.832 cv
351.359 158.741 349.201 157.635 347.395 156.207 cv
346.922 155.834 346.449 155.412 346.236 154.847 cv
346.029 154.3 346.095 153.693 346.021 153.113 cv
345.814 151.477 344.532 150.185 343.174 149.251 cv
342.51 148.794 341.771 148.343 341.454 147.603 cv
341.019 146.582 341.612 145.327 342.573 144.77 cv
343.533 144.215 344.74 144.247 345.804 144.564 cv
346.67 144.822 347.482 145.256 348.177 145.833 cv
349.67 147.073 350.547 148.881 351.66 150.47 cv
352.774 152.059 354.368 153.559 356.309 153.606 cv
357.081 153.625 357.864 153.413 358.638 153.202 cv
359.848 152.872 361.032 152.541 362.107 153.09 cv
363.034 153.564 363.551 154.566 364.321 155.266 cv
365.551 156.38 367.316 156.64 368.973 156.731 cv
371.632 156.879 374.308 156.722 376.931 156.266 cv
377.01 156.25 li
370.397 119.367 353.135 86.1831 328.526 59.9766 cv
326.559 61.6133 323.845 62.3862 321.344 61.7891 cv
.615686 .909804 .329412 rgb
f
218.002 72.7115 mo
216.633 72.7115 215.325 72.4008 214.482 71.5776 cv
212.514 69.6551 216.345 67.9427 218.193 67.9427 cv
218.281 67.9427 218.365 67.9466 218.443 67.9546 cv
219.197 68.0308 219.901 68.485 220.646 68.485 cv
220.708 68.485 220.77 68.4818 220.833 68.4751 cv
221.334 68.4209 221.776 68.1416 222.225 67.9131 cv
223.284 67.3716 224.473 67.0876 225.662 67.0876 cv
225.956 67.0876 226.251 67.105 226.543 67.1402 cv
227.325 67.2343 228.223 67.5825 228.391 68.352 cv
228.553 69.0953 227.903 69.7954 227.193 70.0679 cv
226.482 70.3398 225.697 70.3354 224.965 70.5406 cv
224.109 70.7803 223.362 71.294 222.566 71.6889 cv
221.441 72.2484 219.675 72.7116 218.002 72.7115 cv
.0470588 .501961 .67451 rgb
f
173.98 79.3257 mo
173.869 79.3257 173.757 79.3197 173.645 79.3072 cv
175.432 78.0341 li
174.59 78.5791 173.614 78.8291 172.627 78.8291 cv
170.195 78.8292 167.696 77.3092 166.976 74.9433 cv
166.666 73.9238 166.647 72.8237 166.249 71.835 cv
165.832 70.7949 165.005 69.8921 164.915 68.7749 cv
164.779 67.0859 166.32 65.8154 167.502 64.6015 cv
169.484 62.5664 170.792 59.8399 170.937 57.0025 cv
171.083 54.1655 170.015 51.2486 167.935 49.313 cv
167.002 48.445 165.806 47.7599 164.54 47.7599 cv
164.476 47.7599 164.412 47.7616 164.348 47.7651 cv
163.526 47.8105 162.753 48.145 161.975 48.4135 cv
160.361 48.9702 158.654 49.2516 156.947 49.2517 cv
155.885 49.2517 154.824 49.1429 153.786 48.9238 cv
153.199 48.8003 152.577 48.6152 152.208 48.1436 cv
151.524 47.2695 152.138 45.8975 153.106 45.3554 cv
154.075 44.814 155.243 44.833 156.35 44.748 cv
160.141 44.457 163.671 42.8105 167.214 41.4296 cv
171.498 39.7601 176.073 38.4418 180.626 38.4418 cv
182.002 38.4418 183.375 38.5621 184.739 38.8296 cv
186.838 39.2415 188.993 39.9942 191.083 39.9942 cv
191.832 39.9942 192.572 39.8977 193.299 39.6543 cv
194.777 39.1592 196.001 38.102 197.428 37.4747 cv
198.961 36.8002 200.625 36.6547 202.315 36.6547 cv
203.451 36.6547 204.599 36.7206 205.727 36.7353 cv
205.878 36.7373 206.029 36.7383 206.181 36.7383 cv
208.604 36.7383 211.028 36.4843 213.398 35.9825 cv
214.732 35.7 216.071 35.3367 217.429 35.3367 cv
217.55 35.3367 217.671 35.3396 217.792 35.3457 cv
221.24 35.5185 224.192 38.2227 227.644 38.3242 cv
227.736 38.327 227.83 38.3282 227.924 38.3282 cv
228.299 38.3282 228.688 38.3091 229.078 38.29 cv
229.469 38.2709 229.861 38.2519 230.244 38.2519 cv
231.418 38.2519 232.503 38.4312 233.172 39.3398 cv
233.334 39.561 233.458 39.8413 233.386 40.1064 cv
233.308 40.3955 233.027 40.5752 232.769 40.7261 cv
231.179 41.6538 229.564 42.5386 227.927 43.3794 cv
227.185 43.7602 226.421 44.145 225.85 44.753 cv
225.192 45.4511 224.851 46.3784 224.483 47.2637 cv
223.747 49.0366 222.812 50.7876 221.351 52.0312 cv
220.283 52.9396 218.882 53.5325 217.501 53.5326 cv
216.991 53.5326 216.484 53.4518 215.997 53.2763 cv
215.223 52.9975 214.512 52.4922 213.691 52.4263 cv
213.655 52.4234 213.619 52.4219 213.582 52.4219 cv
212.788 52.4219 211.921 53.0895 212.149 53.8423 cv
212.317 54.3984 212.953 54.6416 213.509 54.812 cv
216.222 55.644 221.73 58.9345 216.263 60.4878 cv
212.411 61.5821 208.289 61.4633 204.357 62.1148 cv
202.273 62.4599 200.112 62.8355 198.377 64.0411 cv
197.574 64.5991 196.894 65.3159 196.106 65.895 cv
191.533 69.2574 184.126 67.5596 180.495 71.9213 cv
179.355 73.2901 178.812 75.0498 177.897 76.5776 cv
177.04 78.0084 175.611 79.3257 173.98 79.3257 cv
f
137.479 48.3806 mo
136.472 48.3806 134.771 48.0945 134.637 46.878 cv
134.503 45.6573 135.807 44.9258 135.342 43.6436 cv
135.01 42.727 133.047 42.0635 134.917 41.5317 cv
136.144 41.1836 137.372 40.835 138.6 40.4863 cv
138.971 40.3808 139.363 40.2627 139.621 39.9746 cv
140.159 39.374 139.796 38.3628 139.152 37.879 cv
138.507 37.395 137.679 37.2505 136.93 36.9527 cv
136.181 36.6543 135.427 36.0771 135.375 35.273 cv
135.316 34.3525 136.205 33.6416 137.083 33.3598 cv
137.651 33.1776 138.23 33.1023 138.814 33.1023 cv
140.438 33.1023 142.102 33.6845 143.691 34.1655 cv
147.447 35.3014 151.371 35.8817 155.295 35.8817 cv
155.571 35.8817 155.846 35.8788 156.122 35.8731 cv
157.876 35.8366 159.666 35.691 161.43 35.691 cv
163.473 35.691 165.479 35.8863 167.353 36.6734 cv
167.537 36.751 167.746 36.8682 167.765 37.0674 cv
167.785 37.2657 167.605 37.4204 167.445 37.5376 cv
164.043 40.0117 160.113 39.8721 156.256 41.1782 cv
153.866 41.9888 151.746 43.4209 149.52 44.6113 cv
145.953 46.52 141.719 48.2427 137.644 48.378 cv
137.591 48.3797 137.536 48.3806 137.479 48.3806 cv
f
128.762 42.6342 mo
127.263 42.6342 125.432 41.9077 124.194 41.1734 cv
123.965 41.0376 123.71 40.8071 123.797 40.5552 cv
123.835 40.4443 123.933 40.3657 124.027 40.2964 cv
125.159 39.4619 126.526 38.9751 127.926 38.8531 cv
128.159 38.8328 128.393 38.8226 128.626 38.8226 cv
129.805 38.8226 130.982 39.0818 132.037 39.6104 cv
132.298 39.7417 132.567 39.9028 132.693 40.1675 cv
133.379 41.6059 129.879 42.6001 128.91 42.6318 cv
128.861 42.6334 128.811 42.6342 128.762 42.6342 cv
f
127.56 51.5342 mo
127.42 51.5342 127.304 51.5296 127.217 51.5205 cv
126.382 51.4336 125.576 51.1714 124.778 50.9107 cv
123.813 50.5952 122.848 50.2798 121.883 49.9643 cv
121.05 49.6924 120.083 49.2725 119.934 48.4092 cv
119.663 46.8442 121.509 46.3395 123.089 46.3395 cv
123.794 46.3395 124.446 46.4399 124.834 46.5913 cv
126.356 47.185 127.277 48.0874 128.973 48.3306 cv
129.745 48.4414 133.48 48.7608 133.228 49.9311 cv
132.987 51.0413 129.01 51.5342 127.56 51.5342 cv
f
136.654 77.1462 mo
135.209 77.1462 133.78 76.3515 133.035 75.1099 cv
132.725 74.5928 132.528 74.0122 132.204 73.5034 cv
131.25 72.0034 129.397 71.3838 127.671 70.9604 cv
127.145 70.8316 126.596 70.7017 126.17 70.3662 cv
125.744 70.0303 125.478 69.4224 125.708 68.9307 cv
125.909 68.5019 126.398 68.3032 126.844 68.1425 cv
128.064 67.7022 129.285 67.2622 130.505 66.8222 cv
131.04 66.6295 131.588 66.4344 132.155 66.4344 cv
132.166 66.4344 132.176 66.4345 132.187 66.4346 cv
132.842 66.4429 133.46 66.7139 134.088 66.9038 cv
134.605 67.06 135.151 67.1608 135.689 67.1608 cv
136.143 67.1608 136.591 67.0895 137.012 66.9199 cv
137.934 66.5493 138.675 65.6191 138.594 64.6289 cv
138.505 63.5493 137.54 62.7598 136.575 62.268 cv
135.61 61.7769 134.53 61.4194 133.801 60.6187 cv
133.228 59.9883 132.939 59.1524 132.459 58.4482 cv
132.047 57.8455 131.379 57.3145 130.678 57.3145 cv
130.561 57.3145 130.443 57.3294 130.325 57.3613 cv
129.973 57.4571 129.678 57.6909 129.381 57.9029 cv
128.545 58.5017 127.439 58.924 126.431 58.924 cv
125.641 58.924 124.91 58.6651 124.416 58.0293 cv
124.137 57.6709 123.96 57.2168 123.584 56.9619 cv
123.373 56.8191 123.143 56.7608 122.904 56.7608 cv
122.318 56.7608 121.679 57.1096 121.141 57.4244 cv
120.436 57.8368 119.647 58.2027 118.844 58.2026 cv
118.702 58.2026 118.56 58.1912 118.417 58.1665 cv
115.458 57.6533 117.043 54.7935 118.91 54.1797 cv
119.251 54.0677 119.595 54.0238 119.942 54.0238 cv
120.572 54.0238 121.21 54.1682 121.849 54.3126 cv
122.489 54.457 123.13 54.6014 123.768 54.6014 cv
123.974 54.6014 124.181 54.5862 124.386 54.5508 cv
125.456 54.3665 126.643 53.8737 127.733 53.8737 cv
127.926 53.8737 128.115 53.8891 128.301 53.9243 cv
129.74 54.1973 130.719 55.5849 132.279 55.6338 cv
132.311 55.6349 132.343 55.6354 132.374 55.6354 cv
133.521 55.6354 134.587 54.9562 135.737 54.8901 cv
135.803 54.8864 135.867 54.8846 135.932 54.8846 cv
138.423 54.8846 140.243 57.6227 142.746 58.0039 cv
143.835 58.1699 145.318 58.0982 145.618 59.1586 cv
145.822 59.8809 145.233 60.6011 145.247 61.3516 cv
145.279 63.1411 148.183 63.2554 149.053 64.8198 cv
149.665 65.9179 148.944 67.4019 147.813 67.9483 cv
147.326 68.1832 146.797 68.2813 146.26 68.2813 cv
145.547 68.2813 144.818 68.1088 144.148 67.8535 cv
143.604 67.6456 142.978 67.3976 142.418 67.3976 cv
142.09 67.3976 141.784 67.4825 141.53 67.71 cv
140.892 68.2808 141.105 69.3213 141.45 70.105 cv
141.796 70.8882 142.23 71.7744 141.876 72.5547 cv
141.578 73.2141 140.815 73.5076 140.073 73.5076 cv
139.927 73.5076 139.782 73.4963 139.642 73.4741 cv
138.786 73.3389 138.003 72.9135 137.162 72.707 cv
137.018 72.6718 136.86 72.6503 136.704 72.6503 cv
136.354 72.6503 136.018 72.7593 135.894 73.0678 cv
135.721 73.4951 136.095 73.9248 136.37 74.2949 cv
136.965 75.0962 137.175 76.1704 136.927 77.1367 cv
136.836 77.1431 136.745 77.1462 136.654 77.1462 cv
f
103.369 55.5551 mo
101.927 55.555 99.3612 55.2313 99.5078 53.7724 cv
99.5682 53.1683 99.9964 53.0081 100.565 53.0081 cv
100.886 53.0081 101.252 53.0592 101.621 53.1103 cv
101.991 53.1615 102.364 53.2126 102.7 53.2126 cv
103.029 53.2126 103.322 53.1635 103.541 53.0171 cv
103.827 52.8262 104.039 52.5337 104.343 52.3725 cv
104.657 52.2056 105.028 52.1982 105.384 52.1953 cv
105.433 52.1949 105.482 52.1946 105.531 52.1946 cv
105.855 52.1946 106.183 52.2099 106.481 52.332 cv
106.824 52.4732 107.122 52.7939 107.117 53.165 cv
107.116 53.3178 107.064 53.4654 107.001 53.605 cv
106.5 54.7163 105.287 55.3789 104.075 55.522 cv
103.907 55.5418 103.661 55.5551 103.369 55.5551 cv
f
115.408 73.4871 mo
114.541 73.487 113.641 72.0601 112.874 71.7544 cv
112.504 71.607 112.123 71.5531 111.735 71.5531 cv
111.208 71.5531 110.668 71.6527 110.126 71.7522 cv
109.583 71.8518 109.039 71.9513 108.502 71.9513 cv
108.092 71.9513 107.686 71.8932 107.291 71.7324 cv
106.585 71.4463 107.226 70.2656 107.517 69.9664 cv
107.968 69.5016 108.565 69.4647 109.149 69.4647 cv
109.204 69.4647 109.259 69.4651 109.313 69.4654 cv
109.369 69.4657 109.424 69.466 109.478 69.466 cv
109.521 69.466 109.563 69.4659 109.605 69.4653 cv
109.692 69.4641 109.78 69.4635 109.869 69.4635 cv
111.542 69.4635 113.402 69.6841 114.936 70.3492 cv
115.424 70.561 115.9 70.8487 116.205 71.2856 cv
116.51 71.7221 116.609 72.333 116.337 72.791 cv
116.037 73.2965 115.724 73.4871 115.408 73.4871 cv
f
142.998 108.972 mo
140.155 108.971 136.648 107.598 139.18 104.701 cv
139.88 103.9 141.868 102.085 143.133 102.085 cv
143.2 102.085 143.265 102.09 143.327 102.101 cv
144.872 102.363 144.774 105.069 146.703 105.609 cv
147.167 105.739 147.668 105.822 148.042 106.127 cv
148.415 106.432 148.577 107.065 148.219 107.388 cv
148.027 107.561 147.751 107.594 147.498 107.648 cv
146.491 107.866 145.634 108.542 144.636 108.792 cv
144.16 108.911 143.594 108.972 142.998 108.972 cv
f
75.2905 62.4245 mo
73.9412 62.4245 72.5808 62.015 72.563 60.7769 cv
72.5371 58.9903 75.873 59.3594 77.0361 58.5747 cv
76.172 56.685 73.8499 55.6763 71.7184 55.6763 cv
71.051 55.6763 70.4021 55.7753 69.8227 55.9771 cv
68.6279 56.3935 67.5498 57.1806 66.2934 57.336 cv
66.2009 57.3474 66.107 57.3529 66.0123 57.3529 cv
64.8216 57.3529 63.5224 56.4751 63.7305 55.3212 cv
63.8852 54.4615 64.7607 53.957 65.5439 53.5693 cv
68.2251 52.2428 71.0431 50.8852 74.0201 50.8852 cv
74.1366 50.8852 74.2537 50.8873 74.3706 50.8916 cv
77.0971 50.9907 79.624 52.2549 82.0996 53.4023 cv
82.7573 53.7073 83.4455 54.0118 84.1686 54.0118 cv
84.1864 54.0118 84.2043 54.0116 84.2222 54.0112 cv
85.2902 53.9884 85.9422 53.6692 86.7028 53.6692 cv
87.0985 53.6692 87.5236 53.7557 88.0517 54.0151 cv
88.8183 54.3912 88.3768 54.7543 89.1066 54.7543 cv
89.2163 54.7543 89.3526 54.7461 89.5235 54.7285 cv
90.1922 54.6599 90.7958 54.4162 91.4259 54.4162 cv
91.7201 54.4162 92.02 54.4693 92.335 54.6181 cv
93.7686 55.2949 92.5429 56.0762 92.3872 57.0274 cv
92.1738 58.3281 94.1265 58.6479 93.6631 59.8252 cv
93.3902 60.5176 92.0058 60.7012 91.4072 60.8179 cv
90.4032 61.0136 89.3148 61.1116 88.2395 61.1116 cv
87.5494 61.1116 86.8646 61.0712 86.2114 60.9903 cv
84.7506 60.8095 83.2237 60.4262 81.7722 60.4262 cv
80.8984 60.4262 80.0516 60.5653 79.2637 60.9711 cv
78.6792 61.2724 78.1699 61.7071 77.581 61.999 cv
77.094 62.2406 76.1947 62.4245 75.2905 62.4245 cv
f
117.463 342.593 mo
115.592 342.593 113.883 341.315 112.755 339.793 cv
111.562 338.185 110.83 336.284 109.764 334.588 cv
108.745 332.965 107.419 331.534 105.878 330.395 cv
105.291 329.96 104.623 329.497 104.468 328.782 cv
104.195 327.516 105.663 326.57 106.032 325.327 cv
106.474 323.838 105.258 322.351 105.242 320.796 cv
105.231 319.896 105.628 319.006 105.478 318.118 cv
105.357 317.398 104.894 316.791 104.478 316.19 cv
103.01 314.073 101.963 311.664 101.417 309.145 cv
100.147 303.282 101.599 297.122 100.624 291.202 cv
100.318 289.345 99.7754 287.528 99.5527 285.659 cv
99.1274 282.088 99.8194 278.186 97.9687 275.104 cv
96.4488 272.572 97.1601 269.434 96.9268 266.489 cv
96.6938 263.546 96.0523 260.46 94.0532 258.286 cv
92.3916 256.479 90.0063 255.535 88.0576 254.04 cv
86.2305 252.639 84.8184 250.775 83.4585 248.916 cv
79.7905 243.9 76.3306 238.733 73.0898 233.432 cv
72.1079 231.825 71.1088 229.965 71.6157 228.151 cv
71.8833 227.194 72.5586 226.346 72.5967 225.352 cv
72.6518 223.915 71.3515 222.592 71.6953 221.196 cv
72.0014 219.95 71.3432 218.808 71.9057 217.655 cv
72.5127 216.41 73.5323 215.427 74.4414 214.382 cv
77.7407 210.593 79.7578 205.215 78.0962 200.474 cv
77.6641 199.24 76.7969 197.953 75.4956 197.836 cv
75.4307 197.83 75.3661 197.827 75.3018 197.827 cv
74.5157 197.827 73.7758 198.242 73.041 198.551 cv
71.9472 199.01 70.7627 199.249 69.5767 199.252 cv
69.5688 199.252 69.561 199.252 69.553 199.252 cv
68.8307 199.252 68.0996 199.161 67.4326 198.886 cv
66.8384 198.641 66.313 198.258 65.7939 197.878 cv
64.6787 197.063 63.564 196.248 62.4487 195.434 cv
62.0258 195.124 61.5957 194.808 61.29 194.382 cv
61.0102 193.992 60.8506 193.532 60.6665 193.089 cv
60.184 191.924 59.5157 190.835 58.6938 189.878 cv
56.6558 187.505 54.2598 184.946 51.1348 184.808 cv
50.3979 184.775 49.6308 184.832 48.9517 184.546 cv
48.1269 184.199 47.5884 183.416 47.0278 182.719 cv
45.835 181.235 44.1757 179.92 42.272 179.913 cv
42.2666 179.913 42.2613 179.913 42.2558 179.913 cv
40.887 179.913 39.6069 180.584 38.2515 180.78 cv
37.9654 180.821 37.6792 180.841 37.3935 180.841 cv
35.6368 180.841 33.9051 180.101 32.4243 179.119 cv
30.7026 177.978 29.2227 176.51 27.5693 175.272 cv
26.521 174.486 25.3521 173.734 24.7969 172.548 cv
24.5147 171.945 24.416 171.276 24.2983 170.621 cv
23.8867 168.333 23.2026 166.095 22.2642 163.969 cv
20.9776 161.052 18.125 159.038 16.441 156.331 cv
15.8481 155.377 15.2867 154.386 14.9946 153.301 cv
14.416 151.15 14.9263 148.754 14.0088 146.725 cv
13.665 145.965 13.0991 145.27 12.3291 144.95 cv
12.061 144.838 11.7668 144.781 11.4741 144.781 cv
10.9266 144.781 10.3847 144.98 10.0313 145.393 cv
9.25539 146.299 9.65236 147.683 10.1245 148.779 cv
10.7817 150.304 11.5278 151.878 11.4326 153.536 cv
11.4195 153.766 11.3868 154.004 11.2627 154.198 cv
11.1143 154.431 10.8569 154.568 10.6059 154.683 cv
9.42654 155.225 8.13002 155.492 6.83291 155.492 cv
6.52865 155.492 6.22421 155.478 5.9214 155.448 cv
13.1865 118.522 31.147 85.4404 56.4458 59.5532 cv
60.1426 59.751 63.8232 60.2504 67.4365 61.0571 cv
67.9477 61.1714 68.5 61.3179 68.8169 61.7348 cv
69.0576 62.0523 69.1157 62.4692 69.2886 62.8282 cv
69.742 63.7687 70.8948 64.1474 71.9449 64.1474 cv
71.9747 64.1474 72.0046 64.1471 72.0342 64.1465 cv
73.0237 64.1266 74.0006 63.8626 74.987 63.8626 cv
75.071 63.8626 75.1552 63.8645 75.2393 63.8687 cv
75.7056 63.8916 76.1909 63.9937 76.5449 64.2978 cv
76.9956 64.6851 77.1504 65.3218 77.5566 65.7554 cv
77.9176 66.1405 78.4011 66.299 78.9166 66.299 cv
79.641 66.299 80.4285 65.986 81.0279 65.5493 cv
82.0537 64.8012 82.9077 63.7465 84.1197 63.3682 cv
84.4704 63.2588 84.8221 63.2128 85.1751 63.2128 cv
86.7046 63.2128 88.2554 64.0756 89.8184 64.3755 cv
90.3358 64.4748 90.857 64.5113 91.3809 64.5113 cv
92.1098 64.5113 92.8437 64.4406 93.5782 64.3699 cv
94.3128 64.2992 95.048 64.2285 95.7802 64.2285 cv
96.1315 64.2285 96.4822 64.2448 96.8316 64.2851 cv
97.5635 64.3696 98.2888 64.5597 99.0221 64.5597 cv
99.0979 64.5597 99.174 64.5576 99.25 64.5532 cv
100.715 64.4688 101.975 63.5361 103.138 62.6416 cv
103.437 62.4111 103.748 62.1661 103.899 61.8198 cv
104.369 60.7504 103.085 59.7183 102.939 58.5595 cv
104.47 57.545 106.305 56.9981 108.141 56.9981 cv
108.359 56.9981 108.578 57.0059 108.796 57.0215 cv
109.318 57.0591 109.966 57.2662 110.015 57.7876 cv
110.083 58.5151 108.993 58.7007 108.554 59.2852 cv
108.156 59.8149 108.431 60.6426 108.93 61.0112 cv
109.132 61.1604 109.317 61.1971 109.495 61.1971 cv
109.582 61.1971 109.667 61.1885 109.751 61.1799 cv
109.835 61.1712 109.919 61.1625 110.004 61.1625 cv
110.127 61.1625 110.252 61.1808 110.382 61.2437 cv
111.462 61.7661 110.663 63.1059 111.587 63.8042 cv
111.92 64.0555 112.287 64.1571 112.668 64.1571 cv
113.773 64.157 114.987 63.3028 115.771 62.768 cv
116.898 61.9995 118.14 61.2803 119.502 61.2256 cv
119.545 61.2239 119.588 61.2231 119.631 61.2231 cv
120.957 61.2231 122.361 62.0391 122.605 63.3379 cv
122.839 64.5796 121.938 65.811 120.81 66.3784 cv
119.681 66.9453 118.373 67.001 117.109 67.0459 cv
114.155 67.1499 111.201 67.2544 108.246 67.3584 cv
107.371 67.3891 106.437 67.4404 105.734 67.9619 cv
104.598 68.8062 105.81 69.8364 104.871 70.6601 cv
104.523 70.9653 104.058 71.1031 103.6 71.1665 cv
103.295 71.2088 102.986 71.2217 102.674 71.2217 cv
102.431 71.2217 102.185 71.2138 101.94 71.2059 cv
101.695 71.198 101.449 71.1902 101.204 71.1902 cv
100.652 71.1902 100.103 71.2303 99.5717 71.4014 cv
99.0737 71.562 98.628 72.0092 98.646 72.5317 cv
98.7182 74.5971 95.1812 74.457 93.6601 74.8579 cv
91.2402 75.4956 89.3614 77.3506 87.6045 79.1333 cv
86.9942 79.7529 86.3667 80.3979 86.061 81.2124 cv
85.4629 82.8047 86.2627 84.6128 87.418 85.8608 cv
89.8857 88.5278 93.6645 89.4121 96.9624 90.938 cv
97.2954 91.0923 97.6372 91.2632 97.8638 91.5518 cv
98.3867 92.2168 98.1054 93.1792 97.8135 93.9731 cv
97.4043 95.0845 97.0113 96.2549 97.1645 97.4292 cv
97.3174 98.6035 98.1885 99.771 99.3691 99.8588 cv
99.4184 99.8625 99.4674 99.8643 99.5161 99.8643 cv
100.604 99.8642 101.532 98.9731 102.077 98.0132 cv
102.647 97.0102 102.972 95.8648 103.678 94.9516 cv
105.305 92.8476 108.377 92.602 110.58 91.1109 cv
113.178 89.3511 114.248 86.1265 115.43 83.2197 cv
116.611 80.313 118.429 77.2109 121.486 76.5053 cv
122.579 76.2529 123.643 76.1096 124.7 76.1096 cv
125.824 76.1096 126.94 76.2718 128.076 76.6372 cv
128.535 76.7851 128.999 76.9721 129.338 77.315 cv
130.62 78.6074 129.372 81.0254 130.39 82.5341 cv
130.835 83.194 131.624 83.4938 132.432 83.4938 cv
132.876 83.4938 133.326 83.4035 133.728 83.2329 cv
134.863 82.752 135.713 81.7944 136.546 80.8853 cv
137.378 79.9755 138.284 79.0517 139.459 78.6777 cv
139.602 78.6321 139.754 78.5955 139.903 78.5955 cv
139.987 78.5955 140.07 78.6071 140.15 78.6353 cv
140.408 78.7271 140.58 78.9736 140.689 79.2251 cv
141.409 80.896 140.04 82.646 139.118 84.2144 cv
138.884 84.6123 138.671 85.0961 138.855 85.5196 cv
139.153 86.209 140.145 86.1313 140.82 86.4599 cv
142.026 87.0473 141.974 88.8462 141.303 90.0083 cv
140.632 91.1709 139.543 92.1006 139.13 93.3774 cv
139.022 93.71 138.991 94.1352 139.266 94.3515 cv
139.394 94.4527 139.564 94.4834 139.727 94.5044 cv
140.05 94.5466 140.372 94.5652 140.695 94.5652 cv
142.693 94.5652 144.673 93.8479 146.676 93.5738 cv
146.792 93.5579 146.911 93.5438 147.028 93.5438 cv
147.146 93.5438 147.262 93.5582 147.373 93.5996 cv
148.072 93.8613 147.997 94.8852 147.679 95.561 cv
146.555 97.9575 144.118 99.5254 141.572 100.25 cv
139.026 100.976 136.34 100.976 133.693 101.015 cv
128.31 101.094 122.718 101.409 117.978 103.963 cv
117.156 104.405 116.266 105.105 116.347 106.035 cv
116.42 106.879 117.321 107.409 118.182 107.409 cv
118.303 107.409 118.422 107.399 118.539 107.377 cv
119.489 107.203 120.261 106.54 121.01 105.931 cv
121.759 105.321 122.604 104.716 123.568 104.696 cv
123.579 104.696 123.59 104.696 123.601 104.696 cv
124.557 104.696 125.557 105.549 125.334 106.477 cv
125.147 107.263 124.215 107.738 124.127 108.541 cv
124.061 109.138 124.52 109.693 125.069 109.937 cv
125.577 110.162 126.147 110.181 126.705 110.181 cv
126.75 110.181 126.795 110.181 126.84 110.181 cv
127.818 110.178 128.796 110.175 129.775 110.171 cv
129.83 110.171 129.884 110.171 129.939 110.171 cv
130.543 110.171 131.159 110.192 131.713 110.426 cv
132.318 110.682 132.836 111.26 132.812 111.915 cv
132.773 112.939 131.589 113.457 130.604 113.736 cv
129.044 114.179 127.483 114.622 125.923 115.064 cv
124.752 115.397 123.518 115.727 122.317 115.727 cv
121.707 115.727 121.106 115.642 120.526 115.428 cv
120.175 114.441 118.999 114.104 117.916 114.104 cv
117.779 114.104 117.643 114.109 117.51 114.119 cv
114.931 114.318 112.44 115.508 110.665 117.39 cv
110.172 117.913 109.73 118.489 109.174 118.945 cv
108.305 119.66 107.216 120.036 106.19 120.499 cv
103.674 121.636 101.431 123.371 99.6983 125.521 cv
98.0717 127.539 95.4516 127.534 93.2421 128.889 cv
92.9136 129.091 92.5683 129.314 92.4082 129.666 cv
92.2485 130.014 92.3037 130.418 92.3305 130.8 cv
92.5078 133.313 91.3266 135.713 90.0278 137.873 cv
89.4307 138.866 88.7861 139.857 87.8921 140.594 cv
86.9301 141.387 85.7392 141.837 84.5723 142.274 cv
83.2104 142.784 81.8486 143.293 80.4868 143.803 cv
80.0498 143.966 79.5977 144.14 79.2705 144.473 cv
78.8208 144.93 78.6865 145.606 78.6216 146.245 cv
78.2246 150.132 79.5747 154.281 77.9902 157.853 cv
77.7356 158.427 77.2801 159.042 76.6664 159.042 cv
76.6421 159.042 76.6175 159.042 76.5928 159.04 cv
75.9941 158.992 75.6138 158.378 75.4238 157.809 cv
74.8628 156.128 75.0835 154.25 74.4463 152.597 cv
73.4663 150.055 70.7691 148.686 68.2945 147.546 cv
67.1987 147.041 65.9554 146.541 64.7882 146.541 cv
64.2109 146.541 63.652 146.663 63.1391 146.968 cv
62.3848 147.417 61.8804 148.194 61.1641 148.701 cv
60.4204 149.228 59.548 149.413 58.6371 149.413 cv
57.6336 149.413 56.5833 149.189 55.6074 148.952 cv
54.2768 148.629 52.9462 148.307 51.6157 147.984 cv
48.8169 148.292 46.2739 149.847 44.3623 151.915 cv
42.4507 153.982 41.205 156.61 40.5425 159.347 cv
40.0859 161.23 39.895 163.168 39.7984 165.103 cv
39.7148 166.772 39.7094 168.498 40.3355 170.047 cv
40.8437 171.306 41.748 172.38 42.8115 173.225 cv
44.4547 174.529 46.5727 175.271 48.6573 175.271 cv
49.9865 175.271 51.3022 174.969 52.4721 174.32 cv
53.3594 173.829 54.1787 173.111 54.5083 172.151 cv
54.6724 171.675 54.7104 171.153 54.9448 170.707 cv
55.4544 169.735 56.6434 169.47 57.788 169.47 cv
58.0275 169.47 58.2652 169.482 58.4942 169.501 cv
59.7158 169.602 61.2593 170.142 61.249 171.367 cv
61.2446 171.872 60.9497 172.324 60.6538 172.733 cv
59.7188 174.026 58.6446 175.269 58.1446 176.785 cv
57.644 178.3 57.8951 180.214 59.2124 181.115 cv
60.0361 181.679 61.0789 181.745 62.1357 181.745 cv
62.2998 181.745 62.4642 181.744 62.6281 181.742 cv
62.7918 181.741 62.955 181.739 63.1171 181.739 cv
64.3619 181.739 65.5367 181.833 66.2954 182.747 cv
66.9609 183.548 66.9882 184.712 66.749 185.726 cv
66.5093 186.739 66.042 187.689 65.8174 188.706 cv
65.3305 190.91 66.1035 193.347 67.771 194.867 cv
68.9589 195.949 70.5682 196.537 72.1724 196.537 cv
72.8206 196.537 73.468 196.441 74.0864 196.243 cv
74.7077 196.044 75.4643 195.722 76.1361 195.722 cv
76.3889 195.722 76.6297 195.768 76.8467 195.883 cv
77.8242 196.401 78.3706 197.644 79.4531 197.872 cv
79.5696 197.897 79.6863 197.908 79.8028 197.908 cv
80.3713 197.908 80.9342 197.641 81.44 197.354 cv
83.3589 196.267 85.0693 194.812 86.4516 193.094 cv
87.521 191.763 88.5796 190.154 90.2607 189.858 cv
90.3728 189.839 90.4875 189.826 90.6014 189.826 cv
90.7345 189.826 90.8664 189.844 90.9912 189.889 cv
91.5093 190.078 91.7573 190.701 91.7055 191.25 cv
91.6543 191.799 91.3755 192.296 91.1235 192.786 cv
90.5386 193.926 90.061 195.249 90.46 196.466 cv
90.745 197.335 91.6724 197.995 92.5302 197.995 cv
92.8745 197.995 93.2077 197.889 93.4834 197.646 cv
94.1684 197.045 94.1656 195.981 93.9785 195.09 cv
93.7915 194.197 93.4751 193.275 93.7217 192.397 cv
94.0563 191.206 95.3578 190.547 96.6152 190.547 cv
96.8073 190.547 96.9986 190.563 97.1851 190.594 cv
98.5918 190.83 99.7862 191.723 100.925 192.581 cv
102.064 193.439 103.274 194.319 104.687 194.52 cv
104.929 194.554 105.173 194.568 105.42 194.568 cv
105.931 194.568 106.45 194.508 106.965 194.448 cv
107.481 194.388 107.994 194.327 108.496 194.327 cv
109.042 194.327 109.574 194.398 110.081 194.617 cv
110.654 194.865 111.134 195.281 111.605 195.691 cv
112.97 196.881 114.335 198.07 115.701 199.26 cv
117.195 200.561 119.612 201.262 121.27 202.348 cv
122.05 202.857 122.811 203.409 123.661 203.791 cv
124.303 204.079 124.986 204.265 125.65 204.499 cv
129.541 205.873 132.765 209.023 134.227 212.883 cv
134.696 214.12 134.98 215.543 134.418 216.74 cv
134.12 217.371 133.617 217.875 133.188 218.425 cv
132.759 218.974 132.387 219.628 132.432 220.323 cv
132.474 220.966 133.009 221.601 133.631 221.6 cv
133.682 221.6 133.735 221.596 133.788 221.587 cv
134.032 221.545 134.25 221.411 134.449 221.265 cv
135.076 220.8 135.571 220.179 136.19 219.703 cv
136.657 219.343 137.242 219.068 137.817 219.068 cv
138.003 219.068 138.187 219.097 138.367 219.16 cv
139.103 219.419 139.528 220.47 138.981 221.026 cv
138.613 221.401 137.983 221.419 137.626 221.805 cv
137.242 222.221 137.353 222.94 137.763 223.331 cv
138.096 223.649 138.566 223.779 139.032 223.779 cv
139.139 223.779 139.246 223.772 139.351 223.759 cv
139.4 223.753 139.446 223.75 139.491 223.75 cv
139.66 223.75 139.796 223.79 139.918 223.829 cv
140.04 223.869 140.149 223.909 140.264 223.909 cv
140.379 223.909 140.5 223.87 140.648 223.753 cv
141.134 223.368 141.509 222.861 141.977 222.456 cv
142.729 221.804 143.725 221.46 144.719 221.46 cv
145.267 221.46 145.813 221.564 146.317 221.78 cv
146.758 221.969 147.196 222.274 147.328 222.735 cv
147.412 223.026 147.361 223.337 147.34 223.641 cv
147.293 224.317 147.443 225.073 147.981 225.487 cv
148.259 225.701 148.587 225.789 148.931 225.788 cv
149.46 225.788 150.025 225.581 150.494 225.313 cv
151.267 224.869 152.004 224.266 152.892 224.186 cv
152.959 224.181 153.025 224.178 153.091 224.178 cv
153.773 224.178 154.43 224.475 155.054 224.766 cv
158.237 226.246 161.624 227.911 163.328 230.979 cv
163.626 231.517 163.922 232.139 164.502 232.34 cv
164.647 232.39 164.797 232.409 164.949 232.409 cv
165.18 232.409 165.416 232.365 165.644 232.321 cv
167.194 232.02 168.745 231.72 170.295 231.419 cv
170.473 231.384 170.66 231.351 170.84 231.351 cv
171.002 231.351 171.159 231.378 171.301 231.454 cv
171.494 231.559 171.631 231.74 171.749 231.925 cv
172.995 233.867 172.545 236.712 170.762 238.175 cv
170.124 238.697 169.358 239.051 168.753 239.61 cv
167.804 240.489 167.359 241.771 166.944 242.996 cv
166.409 244.582 165.841 246.212 164.732 247.467 cv
164.248 248.016 163.665 248.486 163.283 249.112 cv
162.361 250.625 162.804 252.533 162.737 254.197 cv
162.65 256.406 162.307 258.637 162.093 260.838 cv
161.871 263.124 161.639 265.451 160.737 267.563 cv
159.835 269.676 158.142 271.578 155.915 272.141 cv
155.063 272.355 154.176 272.368 153.303 272.474 cv
151.171 272.732 149.147 273.548 147.212 274.48 cv
146.778 274.689 146.336 274.913 146.014 275.27 cv
145.15 276.229 145.435 277.71 145.674 278.977 cv
145.946 280.417 146.089 281.882 146.102 283.348 cv
146.117 285.119 145.855 287.071 144.539 288.256 cv
144.066 288.681 143.492 288.972 142.947 289.298 cv
140.913 290.515 139.21 292.28 138.068 294.358 cv
137.552 295.299 136.539 295.767 135.842 296.583 cv
135.379 297.124 134.894 297.683 134.241 297.968 cv
133.88 298.125 133.501 298.186 133.114 298.186 cv
132.322 298.186 131.496 297.93 130.714 297.723 cv
130.396 297.638 130.036 297.585 129.686 297.585 cv
128.941 297.585 128.238 297.824 128.07 298.503 cv
127.938 299.036 128.243 299.569 128.536 300.034 cv
129.196 301.083 129.856 302.132 130.517 303.18 cv
130.828 303.675 131.146 304.185 131.264 304.757 cv
131.43 305.561 131.18 306.403 130.766 307.111 cv
130.246 308 129.433 308.75 128.441 309.027 cv
127.987 309.154 127.517 309.178 127.043 309.178 cv
126.897 309.178 126.75 309.176 126.603 309.174 cv
126.456 309.171 126.309 309.169 126.163 309.169 cv
126.006 309.169 125.849 309.172 125.693 309.18 cv
124.774 309.228 123.76 309.552 123.35 310.376 cv
122.847 311.389 123.42 312.821 122.616 313.615 cv
122.301 313.927 121.877 314.03 121.428 314.03 cv
121.045 314.03 120.644 313.955 120.276 313.868 cv
120.129 313.833 119.977 313.798 119.827 313.798 cv
119.764 313.798 119.701 313.804 119.639 313.819 cv
119.21 313.925 118.989 314.417 118.979 314.858 cv
118.948 316.271 120.373 317.363 120.476 318.772 cv
120.576 320.161 119.387 321.294 119.025 322.639 cv
118.748 323.672 119.001 324.834 119.685 325.657 cv
119.538 327.67 121.99 328.973 121.901 330.989 cv
121.844 332.307 120.735 333.294 120.065 334.431 cv
119.451 335.474 119.195 336.724 119.349 337.924 cv
119.539 339.396 120.204 341.204 119.051 342.139 cv
118.699 342.424 118.239 342.544 117.787 342.58 cv
117.678 342.589 117.57 342.593 117.463 342.593 cv
f
87.2568 171.58 mo
87.2151 171.58 87.1738 171.58 87.1333 171.579 cv
86.2593 171.556 85.3857 171.533 84.5117 171.51 cv
83.3115 171.478 82.0952 171.444 80.9443 171.102 cv
79.7935 170.76 78.6963 170.067 78.1275 169.009 cv
77.8393 168.473 77.6865 167.851 77.27 167.407 cv
76.7142 166.815 75.8357 166.689 75.0165 166.689 cv
74.9742 166.689 74.932 166.69 74.8901 166.69 cv
73.0655 166.717 71.542 167.447 69.8003 167.712 cv
69.701 167.727 69.5997 167.734 69.4979 167.734 cv
68.4759 167.734 67.4107 166.985 67.9756 165.742 cv
68.3496 164.919 69.2681 164.507 70.1279 164.226 cv
71.6579 163.726 73.2978 163.429 74.9141 163.429 cv
76.9106 163.429 78.871 163.882 80.541 164.961 cv
81.834 165.797 82.897 166.967 84.2442 167.712 cv
85.5737 168.447 87.189 168.779 88.1899 169.922 cv
88.4599 170.231 88.6812 170.661 88.5235 171.041 cv
88.3349 171.492 87.7608 171.58 87.2568 171.58 cv
f
92.2788 176.18 mo
90.3714 176.18 86.9043 176.016 87.8296 174.258 cv
88.292 173.38 90.3823 173.236 91.2524 173.03 cv
92.6914 172.69 94.148 172.415 95.623 172.29 cv
96.1006 172.249 96.5812 172.225 97.0612 172.225 cv
97.9014 172.225 98.7394 172.3 99.5542 172.5 cv
100.473 172.725 101.512 173.341 101.451 174.285 cv
101.419 174.791 101.051 175.227 100.608 175.473 cv
100.166 175.719 99.6543 175.806 99.1523 175.874 cv
97.3876 176.114 95.6034 176.173 93.8215 176.173 cv
93.6495 176.173 93.4776 176.173 93.3057 176.172 cv
93.2953 176.172 93.2843 176.172 93.2729 176.172 cv
93.1724 176.172 93.0336 176.174 92.8655 176.176 cv
92.6965 176.178 92.4981 176.18 92.2788 176.18 cv
f
220.235 69.3579 mo
221.03 68.9629 221.778 68.4487 222.633 68.2095 cv
223.365 68.0044 224.151 68.0088 224.861 67.7363 cv
225.572 67.4644 226.222 66.7637 226.06 66.0205 cv
225.892 65.2515 224.993 64.9028 224.212 64.8086 cv
222.738 64.6313 221.215 64.9063 219.893 65.5815 cv
219.444 65.8105 219.002 66.0898 218.502 66.1436 cv
217.687 66.2319 216.929 65.7061 216.112 65.623 cv
214.392 65.4487 210.088 67.2319 212.15 69.2466 cv
214.022 71.0747 218.188 70.375 220.235 69.3579 cv
cp
.615686 .909804 .329412 rgb
f
173.101 75.7026 mo
170.183 77.5918 165.657 75.9375 164.645 72.6118 cv
164.334 71.5923 164.315 70.4922 163.918 69.5034 cv
163.501 68.4639 162.673 67.5605 162.583 66.4438 cv
162.448 64.7549 163.988 63.4839 165.171 62.2705 cv
167.153 60.2354 168.46 57.5083 168.606 54.6714 cv
168.751 51.834 167.683 48.917 165.604 46.9819 cv
164.624 46.0698 163.353 45.3599 162.017 45.4336 cv
161.195 45.479 160.422 45.8135 159.644 46.082 cv
157.027 46.9854 154.164 47.1641 151.455 46.5923 cv
150.868 46.4688 150.246 46.2837 149.877 45.812 cv
149.192 44.938 149.806 43.5659 150.775 43.0244 cv
151.744 42.4829 152.912 42.5015 154.019 42.4165 cv
157.81 42.126 161.34 40.4795 164.883 39.0981 cv
170.461 36.9243 176.533 35.3462 182.408 36.4985 cv
185.259 37.0576 188.212 38.2461 190.967 37.3232 cv
192.445 36.8276 193.669 35.771 195.097 35.1431 cv
197.661 34.0151 200.594 34.3672 203.395 34.4038 cv
205.97 34.4375 208.548 34.1846 211.067 33.6509 cv
212.52 33.3433 213.978 32.9404 215.46 33.0146 cv
218.909 33.1875 221.861 35.8916 225.313 35.9927 cv
227.268 36.0503 229.682 35.4326 230.84 37.0088 cv
231.003 37.23 231.127 37.5103 231.055 37.7749 cv
230.977 38.0645 230.696 38.2441 230.438 38.395 cv
228.848 39.3223 227.232 40.207 225.596 41.0479 cv
224.853 41.4292 224.09 41.8135 223.518 42.4214 cv
222.861 43.1201 222.52 44.0469 222.151 44.9326 cv
221.416 46.7056 220.481 48.4561 219.02 49.6997 cv
217.557 50.9438 215.472 51.5962 213.666 50.9453 cv
212.892 50.666 212.181 50.1611 211.36 50.0947 cv
210.54 50.0288 209.579 50.7231 209.817 51.5107 cv
209.986 52.0669 210.622 52.3105 211.177 52.481 cv
213.891 53.313 219.399 56.6035 213.932 58.1567 cv
210.08 59.2505 205.957 59.1323 202.026 59.7832 cv
199.941 60.1284 197.78 60.5039 196.046 61.7095 cv
195.243 62.2681 194.563 62.9849 193.774 63.564 cv
189.202 66.9263 181.795 65.2285 178.164 69.5903 cv
177.023 70.959 176.481 72.7183 175.565 74.2466 cv
174.65 75.7744 173.084 77.1724 171.313 76.9761 cv
173.101 75.7026 li
cp
f
153.925 38.8472 mo
151.535 39.6577 149.415 41.0894 147.189 42.2803 cv
143.622 44.1885 139.388 45.9111 135.313 46.0469 cv
134.339 46.0791 132.447 45.8325 132.306 44.5464 cv
132.172 43.3262 133.476 42.5947 133.011 41.3125 cv
132.679 40.3955 130.716 39.7319 132.586 39.2007 cv
133.813 38.8521 135.041 38.5034 136.268 38.1553 cv
136.64 38.0493 137.032 37.9312 137.29 37.6436 cv
137.827 37.043 137.465 36.0313 136.82 35.5479 cv
136.176 35.064 135.347 34.9194 134.599 34.6211 cv
133.85 34.3232 133.096 33.7456 133.044 32.9414 cv
132.984 32.0215 133.874 31.3101 134.751 31.0283 cv
136.9 30.3389 139.199 31.1807 141.359 31.834 cv
145.379 33.0503 149.592 33.6289 153.791 33.542 cv
157.576 33.4634 161.531 32.8755 165.021 34.3423 cv
165.206 34.4194 165.415 34.5371 165.434 34.7363 cv
165.454 34.9346 165.274 35.0894 165.113 35.2061 cv
161.712 37.6802 157.782 37.541 153.925 38.8472 cv
cp
f
121.862 38.8423 mo
121.633 38.7065 121.379 38.4756 121.465 38.2241 cv
121.503 38.1128 121.601 38.0347 121.696 37.9648 cv
122.827 37.1304 124.195 36.6436 125.595 36.5215 cv
127.002 36.3989 128.441 36.646 129.706 37.2793 cv
129.967 37.4102 130.236 37.5718 130.362 37.8359 cv
131.047 39.2749 127.548 40.2686 126.579 40.3008 cv
125.055 40.3511 123.142 39.6006 121.862 38.8423 cv
cp
f
117.602 46.0776 mo
117.751 46.9414 118.719 47.3608 119.552 47.6333 cv
120.517 47.9482 121.482 48.2637 122.447 48.5791 cv
123.245 48.8398 124.05 49.1025 124.885 49.1895 cv
125.876 49.2925 130.632 48.8174 130.896 47.5996 cv
131.149 46.4297 127.414 46.1099 126.641 45.999 cv
124.946 45.7563 124.025 44.854 122.503 44.2603 cv
121.245 43.7686 117.21 43.8149 117.602 46.0776 cv
cp
f
116.086 55.8354 mo
117.033 55.9995 117.98 55.5786 118.81 55.0928 cv
119.568 54.6494 120.526 54.1382 121.253 54.6309 cv
121.629 54.8857 121.806 55.3398 122.085 55.6982 cv
123.21 57.1455 125.559 56.6392 127.05 55.5718 cv
127.347 55.3594 127.642 55.1255 127.994 55.0303 cv
128.816 54.8071 129.646 55.4131 130.127 56.1172 cv
130.608 56.8213 130.896 57.6567 131.47 58.2876 cv
132.199 59.0884 133.279 59.4453 134.244 59.937 cv
135.208 60.4287 136.174 61.2183 136.263 62.2974 cv
136.344 63.2881 135.603 64.2178 134.681 64.5889 cv
133.759 64.9595 132.708 64.8604 131.756 64.5723 cv
131.129 64.3823 130.51 64.1113 129.855 64.103 cv
129.277 64.0957 128.718 64.2949 128.174 64.4912 cv
126.953 64.9312 125.733 65.3711 124.513 65.811 cv
124.067 65.9717 123.578 66.1704 123.377 66.5996 cv
123.146 67.0908 123.413 67.6992 123.839 68.0347 cv
124.265 68.3706 124.813 68.5 125.34 68.6294 cv
127.066 69.0527 128.919 69.6724 129.873 71.1724 cv
130.197 71.6812 130.394 72.2612 130.704 72.7788 cv
131.496 74.0986 133.061 74.9136 134.596 74.8057 cv
134.844 73.8389 134.634 72.7651 134.039 71.9639 cv
133.764 71.5933 133.389 71.1641 133.563 70.7363 cv
133.743 70.2905 134.364 70.2612 134.831 70.376 cv
135.672 70.5825 136.455 71.0078 137.311 71.1426 cv
138.166 71.2773 139.188 71.0127 139.545 70.2231 cv
139.898 69.4434 139.465 68.5571 139.119 67.7734 cv
138.773 66.9902 138.56 65.9497 139.198 65.3789 cv
139.887 64.7627 140.954 65.1924 141.817 65.522 cv
142.991 65.9702 144.35 66.1636 145.481 65.6172 cv
146.613 65.0703 147.333 63.5864 146.722 62.4888 cv
145.852 60.9243 142.948 60.8101 142.916 59.02 cv
142.901 58.2695 143.491 57.5498 143.287 56.8271 cv
142.986 55.7666 141.504 55.8389 140.415 55.6729 cv
137.848 55.2817 135.999 52.4106 133.406 52.5591 cv
132.224 52.6265 131.132 53.3423 129.948 53.3027 cv
128.388 53.2539 127.409 51.8662 125.97 51.5933 cv
124.734 51.3589 123.314 52.0029 122.055 52.2197 cv
120.234 52.5332 118.357 51.2642 116.579 51.8486 cv
114.712 52.4619 113.126 55.3218 116.086 55.8354 cv
cp
f
101.744 53.1909 mo
102.955 53.0479 104.168 52.3853 104.67 51.2734 cv
104.732 51.1343 104.784 50.9863 104.786 50.8335 cv
104.791 50.4624 104.493 50.1421 104.15 50.001 cv
103.807 49.8599 103.424 49.8613 103.053 49.8643 cv
102.697 49.8672 102.326 49.874 102.012 50.041 cv
101.708 50.2026 101.496 50.4946 101.209 50.686 cv
100.149 51.3955 97.3389 49.8203 97.1763 51.4414 cv
97.0005 53.1953 100.746 53.3086 101.744 53.1909 cv
cp
f
114.006 70.4595 mo
114.277 70.002 114.179 69.3911 113.874 68.9541 cv
113.569 68.5176 113.093 68.23 112.604 68.0181 cv
110.99 67.3174 109.014 67.1099 107.273 67.1343 cv
106.56 67.144 105.755 67.0479 105.186 67.6353 cv
104.895 67.9341 104.254 69.1147 104.959 69.4014 cv
106.772 70.1372 108.783 68.7217 110.543 69.4229 cv
111.59 69.8403 112.885 72.3481 114.006 70.4595 cv
cp
f
142.304 106.461 mo
143.303 106.21 144.16 105.535 145.167 105.317 cv
145.42 105.262 145.695 105.23 145.888 105.057 cv
146.246 104.733 146.084 104.101 145.71 103.796 cv
145.336 103.491 144.836 103.408 144.372 103.278 cv
142.443 102.738 142.54 100.031 140.996 99.77 cv
139.75 99.5591 137.586 101.526 136.849 102.37 cv
133.786 105.875 139.558 107.148 142.304 106.461 cv
cp
f
75.2495 59.668 mo
75.8389 59.3755 76.3481 58.9414 76.9326 58.6401 cv
79.0288 57.5601 81.5396 58.3696 83.8804 58.6592 cv
85.5508 58.8657 87.4277 58.8076 89.0762 58.4863 cv
89.6748 58.3701 91.0591 58.186 91.3315 57.4941 cv
91.7949 56.3169 89.8423 55.9966 90.0557 54.6958 cv
90.2119 53.7446 91.4375 52.9639 90.0034 52.2866 cv
89.0137 51.8193 88.1733 52.2964 87.1924 52.3975 cv
85.8853 52.5322 86.6021 52.1167 85.7207 51.6836 cv
84.1768 50.9258 83.5142 51.645 81.8911 51.6797 cv
81.1484 51.6958 80.4419 51.3838 79.7681 51.0713 cv
77.293 49.9238 74.7661 48.6592 72.0396 48.5601 cv
68.9331 48.4478 65.9985 49.8599 63.2124 51.2383 cv
62.4292 51.626 61.5542 52.1304 61.3989 52.9902 cv
61.1743 54.2354 62.7065 55.1597 63.9624 55.0044 cv
65.2183 54.8496 66.2969 54.062 67.4917 53.646 cv
69.9209 52.7998 73.5703 53.7622 74.7046 56.2437 cv
73.5415 57.0283 70.2061 56.6592 70.2314 58.4458 cv
70.2617 60.5137 74.0356 60.27 75.2495 59.668 cv
cp
f
8.2749 152.352 mo
8.52588 152.237 8.7832 152.1 8.93164 151.867 cv
9.05566 151.673 9.08789 151.435 9.10156 151.205 cv
9.19678 149.547 8.45068 147.973 7.79346 146.448 cv
7.32129 145.352 6.92383 143.968 7.7002 143.062 cv
8.24268 142.428 9.22803 142.298 9.99805 142.619 cv
10.7681 142.939 11.3335 143.633 11.6772 144.394 cv
12.5952 146.423 12.085 148.819 12.6636 150.97 cv
12.9551 152.055 13.5166 153.046 14.1099 154 cv
15.7935 156.707 18.6465 158.721 19.9331 161.637 cv
20.8711 163.764 21.5557 166.002 21.9673 168.29 cv
22.085 168.945 22.1836 169.614 22.4653 170.217 cv
23.021 171.403 24.1895 172.154 25.2383 172.94 cv
26.8916 174.179 28.3711 175.646 30.0928 176.788 cv
31.8145 177.93 33.8755 178.744 35.9204 178.449 cv
37.2813 178.252 38.5654 177.577 39.9404 177.582 cv
41.8447 177.589 43.5034 178.904 44.6968 180.388 cv
45.2573 181.085 45.7959 181.868 46.6201 182.215 cv
47.2998 182.501 48.0664 182.443 48.8032 182.476 cv
51.9287 182.615 54.3247 185.173 56.3623 187.547 cv
57.1841 188.504 57.853 189.592 58.3354 190.758 cv
58.519 191.201 58.6792 191.661 58.959 192.051 cv
59.2642 192.476 59.6948 192.793 60.1177 193.102 cv
61.2324 193.917 62.3477 194.731 63.4624 195.547 cv
63.9814 195.927 64.5068 196.31 65.1011 196.555 cv
65.7759 196.833 66.5156 196.923 67.2451 196.921 cv
68.4312 196.918 69.6162 196.678 70.7095 196.219 cv
71.5044 195.886 72.3057 195.428 73.1641 195.505 cv
74.4658 195.622 75.3325 196.909 75.7646 198.142 cv
77.4268 202.884 75.4097 208.261 72.1099 212.051 cv
71.2007 213.095 70.1816 214.079 69.5742 215.323 cv
69.0117 216.476 69.6704 217.619 69.3638 218.864 cv
69.0205 220.261 70.3203 221.584 70.2656 223.021 cv
70.2275 224.015 69.5522 224.862 69.2842 225.82 cv
68.7773 227.634 69.7764 229.494 70.7588 231.101 cv
73.999 236.402 77.4595 241.569 81.127 246.585 cv
82.4868 248.444 83.8989 250.307 85.7266 251.709 cv
87.6748 253.204 90.0601 254.147 91.7222 255.955 cv
93.7207 258.129 94.3623 261.215 94.5957 264.158 cv
94.8291 267.103 94.1177 270.241 95.6372 272.772 cv
97.4883 275.855 96.7959 279.757 97.2217 283.327 cv
97.4443 285.197 97.9868 287.014 98.2925 288.871 cv
99.2676 294.791 97.8154 300.95 99.0864 306.814 cv
99.6318 309.333 100.678 311.741 102.146 313.859 cv
102.563 314.46 103.025 315.067 103.147 315.787 cv
103.297 316.675 102.9 317.565 102.91 318.465 cv
102.927 320.019 104.143 321.507 103.701 322.996 cv
103.331 324.239 101.863 325.185 102.137 326.451 cv
102.292 327.166 102.959 327.629 103.547 328.063 cv
105.088 329.203 106.414 330.634 107.433 332.257 cv
108.498 333.953 109.231 335.854 110.424 337.462 cv
111.617 339.07 113.459 340.408 115.456 340.249 cv
115.907 340.213 116.368 340.093 116.72 339.808 cv
117.873 338.873 117.208 337.065 117.018 335.593 cv
116.863 334.393 117.12 333.143 117.734 332.099 cv
118.403 330.963 119.513 329.976 119.57 328.658 cv
119.659 326.642 117.207 325.339 117.354 323.326 cv
116.67 322.502 116.416 321.341 116.694 320.308 cv
117.056 318.963 118.245 317.83 118.144 316.441 cv
118.042 315.031 116.617 313.94 116.648 312.527 cv
116.657 312.086 116.879 311.594 117.308 311.488 cv
117.517 311.438 117.735 311.487 117.945 311.537 cv
118.744 311.725 119.701 311.861 120.285 311.284 cv
121.089 310.489 120.515 309.057 121.019 308.045 cv
121.428 307.221 122.443 306.896 123.362 306.849 cv
124.281 306.801 125.224 306.943 126.11 306.695 cv
127.102 306.419 127.915 305.668 128.434 304.78 cv
128.848 304.071 129.098 303.229 128.933 302.426 cv
128.814 301.853 128.497 301.344 128.185 300.849 cv
127.525 299.8 126.865 298.751 126.205 297.703 cv
125.912 297.238 125.607 296.704 125.739 296.171 cv
125.985 295.173 127.389 295.128 128.383 295.392 cv
129.546 295.7 130.807 296.116 131.91 295.636 cv
132.563 295.352 133.048 294.793 133.51 294.251 cv
134.207 293.436 135.221 292.968 135.737 292.027 cv
136.878 289.949 138.581 288.184 140.616 286.967 cv
141.161 286.641 141.735 286.35 142.207 285.925 cv
143.524 284.739 143.785 282.788 143.771 281.017 cv
143.758 279.551 143.615 278.086 143.343 276.646 cv
143.104 275.378 142.818 273.897 143.682 272.939 cv
144.005 272.582 144.447 272.358 144.88 272.149 cv
146.815 271.217 148.84 270.401 150.972 270.143 cv
151.844 270.037 152.732 270.024 153.584 269.81 cv
155.811 269.246 157.504 267.345 158.406 265.232 cv
159.308 263.12 159.54 260.792 159.761 258.506 cv
159.975 256.305 160.318 254.075 160.406 251.865 cv
160.472 250.202 160.03 248.294 160.952 246.781 cv
161.333 246.155 161.917 245.685 162.401 245.136 cv
163.509 243.88 164.077 242.251 164.613 240.665 cv
165.028 239.439 165.472 238.158 166.422 237.279 cv
167.026 236.72 167.793 236.366 168.43 235.844 cv
170.214 234.38 170.664 231.535 169.418 229.593 cv
169.3 229.409 169.163 229.227 168.97 229.123 cv
168.668 228.961 168.301 229.021 167.964 229.087 cv
166.414 229.388 164.863 229.688 163.313 229.99 cv
162.934 230.063 162.535 230.136 162.171 230.009 cv
161.591 229.807 161.295 229.186 160.997 228.648 cv
159.292 225.58 155.906 223.915 152.723 222.434 cv
152.039 222.115 151.313 221.789 150.561 221.855 cv
149.672 221.934 148.936 222.538 148.163 222.98 cv
147.389 223.424 146.356 223.699 145.65 223.156 cv
145.111 222.741 144.962 221.986 145.009 221.309 cv
145.03 221.006 145.081 220.695 144.997 220.403 cv
144.865 219.942 144.427 219.638 143.986 219.449 cv
142.567 218.841 140.813 219.114 139.646 220.124 cv
139.177 220.529 138.803 221.037 138.317 221.421 cv
137.831 221.805 137.634 221.352 137.019 221.427 cv
136.457 221.496 135.842 221.391 135.432 221 cv
135.022 220.608 134.911 219.89 135.295 219.474 cv
135.652 219.088 136.282 219.069 136.65 218.695 cv
137.197 218.139 136.771 217.088 136.035 216.828 cv
135.3 216.569 134.477 216.896 133.858 217.371 cv
133.24 217.848 132.744 218.469 132.117 218.933 cv
131.918 219.08 131.7 219.214 131.457 219.256 cv
130.77 219.375 130.146 218.688 130.101 217.992 cv
130.056 217.297 130.428 216.643 130.856 216.094 cv
131.285 215.544 131.789 215.04 132.086 214.409 cv
132.649 213.212 132.364 211.789 131.896 210.552 cv
130.434 206.692 127.209 203.542 123.318 202.168 cv
122.654 201.934 121.972 201.748 121.329 201.459 cv
120.479 201.078 119.719 200.526 118.939 200.016 cv
117.28 198.931 114.864 198.23 113.37 196.929 cv
112.004 195.738 110.639 194.549 109.274 193.359 cv
108.803 192.95 108.323 192.533 107.75 192.286 cv
106.083 191.566 104.153 192.444 102.355 192.188 cv
100.943 191.987 99.7334 191.108 98.5942 190.25 cv
97.4551 189.392 96.2607 188.499 94.854 188.263 cv
93.4473 188.026 91.7764 188.693 91.3906 190.066 cv
91.144 190.944 91.46 191.866 91.647 192.758 cv
91.8345 193.65 91.8374 194.714 91.1519 195.315 cv
90.1895 196.16 88.5283 195.352 88.1289 194.135 cv
87.7295 192.918 88.207 191.594 88.7925 190.455 cv
89.0444 189.964 89.3228 189.467 89.3745 188.918 cv
89.4258 188.369 89.1782 187.747 88.6602 187.558 cv
88.4282 187.473 88.1724 187.484 87.9297 187.527 cv
86.248 187.822 85.1899 189.432 84.1201 190.762 cv
82.7383 192.481 81.0278 193.936 79.1084 195.022 cv
78.499 195.368 77.8071 195.686 77.1221 195.541 cv
76.0391 195.312 75.4932 194.07 74.5151 193.552 cv
73.7222 193.131 72.6104 193.638 71.7549 193.912 cv
69.606 194.601 67.1074 194.056 65.4399 192.536 cv
63.772 191.016 62.999 188.578 63.4858 186.375 cv
63.7104 185.357 64.1782 184.408 64.4175 183.394 cv
64.6572 182.38 64.6294 181.217 63.9644 180.416 cv
62.3701 178.496 58.9404 180.192 56.8809 178.784 cv
55.5635 177.883 55.3125 175.969 55.813 174.454 cv
56.3135 172.938 57.3872 171.695 58.3223 170.401 cv
58.6182 169.992 58.9131 169.541 58.9175 169.036 cv
58.9277 167.811 57.3843 167.271 56.1631 167.169 cv
54.8398 167.059 53.23 167.2 52.6133 168.375 cv
52.3794 168.822 52.3408 169.343 52.1772 169.82 cv
51.8477 170.779 51.0283 171.497 50.1411 171.989 cv
47.1357 173.656 43.1714 173.03 40.48 170.893 cv
39.417 170.049 38.5122 168.975 38.0039 167.716 cv
37.3784 166.166 37.3833 164.441 37.4668 162.772 cv
37.5635 160.836 37.7549 158.898 38.2109 157.015 cv
38.874 154.279 40.1191 151.65 42.0313 149.583 cv
43.9429 147.516 46.4858 145.961 49.2842 145.653 cv
50.6152 145.976 51.9458 146.298 53.2764 146.621 cv
55.1377 147.072 57.27 147.477 58.833 146.37 cv
59.5493 145.862 60.0532 145.085 60.8081 144.637 cv
62.3579 143.715 64.3252 144.46 65.9634 145.215 cv
68.4375 146.354 71.1348 147.723 72.1147 150.266 cv
72.7524 151.919 72.5313 153.796 73.0923 155.478 cv
73.2822 156.047 73.6626 156.66 74.2612 156.708 cv
74.9121 156.76 75.394 156.119 75.6587 155.522 cv
77.2437 151.95 75.8931 147.801 76.29 143.913 cv
76.3555 143.275 76.4897 142.599 76.939 142.141 cv
77.2661 141.808 77.7183 141.635 78.1558 141.472 cv
79.5171 140.962 80.8789 140.452 82.2407 139.943 cv
83.4082 139.506 84.5991 139.056 85.5605 138.263 cv
86.4551 137.526 87.0991 136.535 87.6968 135.542 cv
88.9951 133.382 90.1763 130.982 89.9995 128.469 cv
89.9727 128.086 89.9175 127.683 90.0767 127.334 cv
90.2373 126.983 90.582 126.759 90.9111 126.558 cv
93.1201 125.203 95.7407 125.208 97.3667 123.189 cv
99.0991 121.04 101.343 119.304 103.859 118.168 cv
104.885 117.705 105.974 117.328 106.843 116.614 cv
107.398 116.158 107.84 115.582 108.334 115.059 cv
110.109 113.177 112.6 111.987 115.179 111.788 cv
116.356 111.697 117.799 111.984 118.194 113.097 cv
119.917 113.732 121.826 113.234 123.592 112.733 cv
125.152 112.291 126.713 111.848 128.273 111.405 cv
129.258 111.125 130.442 110.607 130.48 109.584 cv
130.505 108.928 129.986 108.351 129.382 108.095 cv
128.777 107.84 128.1 107.838 127.443 107.84 cv
126.465 107.843 125.487 107.846 124.509 107.85 cv
123.908 107.852 123.287 107.85 122.738 107.606 cv
122.188 107.362 121.729 106.807 121.795 106.21 cv
121.884 105.407 122.815 104.932 123.003 104.146 cv
123.228 103.207 122.202 102.345 121.237 102.365 cv
120.272 102.385 119.428 102.99 118.679 103.6 cv
117.93 104.208 117.157 104.872 116.208 105.046 cv
115.258 105.22 114.099 104.666 114.016 103.704 cv
113.934 102.774 114.825 102.074 115.647 101.631 cv
120.386 99.0776 125.979 98.7622 131.362 98.6836 cv
134.008 98.6445 136.695 98.6445 139.241 97.9194 cv
141.787 97.1943 144.224 95.626 145.348 93.23 cv
145.666 92.5537 145.741 91.5298 145.042 91.2681 cv
144.821 91.1855 144.578 91.2104 144.345 91.2427 cv
142.019 91.5605 139.724 92.4771 137.395 92.1733 cv
137.232 92.1519 137.063 92.1216 136.934 92.02 cv
136.66 91.8037 136.691 91.3789 136.799 91.0464 cv
137.212 89.7695 138.301 88.8394 138.972 87.6772 cv
139.643 86.5151 139.695 84.7163 138.488 84.1289 cv
137.813 83.8003 136.822 83.8779 136.523 83.1885 cv
136.34 82.7651 136.553 82.2808 136.787 81.8828 cv
137.709 80.3149 139.077 78.5649 138.357 76.894 cv
138.249 76.6421 138.077 76.3955 137.818 76.3042 cv
137.597 76.2256 137.352 76.2749 137.127 76.3467 cv
135.953 76.7207 135.047 77.6445 134.214 78.5537 cv
133.382 79.4634 132.532 80.4204 131.396 80.9019 cv
130.261 81.3828 128.748 81.2251 128.058 80.2031 cv
127.04 78.6938 128.289 76.2759 127.007 74.9834 cv
126.667 74.6411 126.204 74.4536 125.745 74.3062 cv
123.542 73.5967 121.411 73.6528 119.155 74.1738 cv
116.098 74.8799 114.279 77.9814 113.098 80.8882 cv
111.917 83.7949 110.847 87.02 108.249 88.7793 cv
106.046 90.271 102.974 90.5161 101.346 92.6206 cv
100.641 93.5332 100.316 94.6787 99.7461 95.6821 cv
99.1763 96.6851 98.1885 97.6128 97.0381 97.5273 cv
95.8569 97.4395 94.9863 96.2725 94.833 95.0981 cv
94.6802 93.9238 95.0728 92.7534 95.4819 91.6421 cv
95.7744 90.8481 96.0557 89.8853 95.5327 89.2202 cv
95.3057 88.9321 94.9644 88.7612 94.6313 88.6069 cv
91.3335 87.0811 87.5547 86.1968 85.0869 83.5298 cv
83.9316 82.2813 83.1313 80.4736 83.7295 78.8813 cv
84.0352 78.0669 84.6626 77.4214 85.2734 76.8018 cv
87.0303 75.0195 88.9087 73.1641 91.3291 72.5264 cv
92.8501 72.126 96.3872 72.2656 96.3149 70.2007 cv
96.2964 69.6777 96.7427 69.2305 97.2402 69.0698 cv
98.543 68.6504 99.9502 69.0186 101.269 68.8354 cv
101.727 68.7715 102.192 68.6343 102.54 68.3286 cv
103.478 67.5054 102.267 66.4746 103.403 65.6309 cv
104.105 65.1089 105.04 65.0581 105.915 65.0273 cv
108.869 64.9229 111.824 64.8188 114.778 64.7144 cv
116.041 64.6699 117.349 64.6143 118.478 64.0469 cv
119.607 63.4795 120.507 62.2485 120.274 61.0063 cv
120.022 59.6655 118.535 58.8398 117.171 58.8945 cv
115.808 58.9492 114.567 59.668 113.439 60.437 cv
112.385 61.1563 110.553 62.4526 109.255 61.4727 cv
108.331 60.7744 109.131 59.4351 108.051 58.9121 cv
107.558 58.6738 107.139 59.0786 106.599 58.6797 cv
106.1 58.311 105.825 57.4839 106.223 56.9536 cv
106.661 56.3696 107.751 56.1836 107.683 55.4561 cv
107.635 54.9346 106.987 54.7275 106.464 54.6904 cv
104.415 54.5435 102.321 55.0933 100.608 56.228 cv
100.754 57.3872 102.037 58.4189 101.568 59.4888 cv
101.417 59.8345 101.105 60.0796 100.806 60.3101 cv
99.6436 61.2051 98.3838 62.1372 96.9189 62.2222 cv
96.1079 62.2686 95.3076 62.0469 94.5005 61.9541 cv
92.1709 61.6851 89.79 62.4863 87.4868 62.0444 cv
85.563 61.6753 83.6582 60.4536 81.7881 61.0371 cv
80.5762 61.415 79.7227 62.4702 78.6968 63.2178 cv
77.6704 63.9653 76.0933 64.3501 75.2251 63.4238 cv
74.8188 62.9907 74.6641 62.354 74.2134 61.9668 cv
73.8594 61.6626 73.3745 61.5605 72.9082 61.5376 cv
71.8354 61.4849 70.7764 61.7939 69.7031 61.8154 cv
68.6299 61.8369 67.4233 61.4639 66.9575 60.4966 cv
66.7847 60.1382 66.7266 59.7212 66.4858 59.4038 cv
66.1689 58.9863 65.6167 58.8398 65.1055 58.7256 cv
61.4922 57.9189 57.8115 57.4199 54.1147 57.2217 cv
28.8154 83.1089 10.8555 116.191 3.59033 153.117 cv
5.18408 153.272 6.81885 153.021 8.2749 152.352 cv
cp
f
72.5591 164.359 mo
73.4126 164.347 74.3545 164.453 74.939 165.075 cv
75.3555 165.519 75.5078 166.142 75.7964 166.678 cv
76.3652 167.735 77.4619 168.428 78.6128 168.771 cv
79.7637 169.113 80.9805 169.147 82.1807 169.178 cv
83.0542 169.201 83.9282 169.224 84.8022 169.247 cv
85.332 169.261 85.9883 169.198 86.1919 168.709 cv
86.3496 168.33 86.1289 167.899 85.8584 167.591 cv
84.8574 166.448 83.2427 166.116 81.9126 165.381 cv
80.5654 164.636 79.5029 163.465 78.21 162.63 cv
75.1875 160.677 71.2168 160.776 67.7964 161.895 cv
66.937 162.176 66.0186 162.587 65.6445 163.411 cv
65.0229 164.777 66.373 165.547 67.4692 165.381 cv
69.2109 165.116 70.7344 164.386 72.5591 164.359 cv
cp
f
90.9741 173.841 mo
92.9272 173.852 94.8862 173.806 96.8213 173.542 cv
97.3232 173.474 97.8345 173.388 98.2773 173.142 cv
98.7197 172.896 99.0874 172.459 99.1201 171.954 cv
99.1807 171.01 98.1416 170.394 97.2231 170.168 cv
95.9424 169.855 94.605 169.847 93.2915 169.958 cv
91.8169 170.084 90.3604 170.359 88.9209 170.699 cv
88.0508 170.904 85.9609 171.048 85.498 171.927 cv
84.3486 174.11 89.9771 173.835 90.9741 173.841 cv
cp
f
190 380 mo
189.975 380 189.949 380 189.923 380 cv
189.949 380 189.974 380 190 380 cv
294.934 380 380 294.934 380 190 cv
380 190 li
380 294.934 294.934 380 190 380 cv
189.91 380 mo
189.888 380 189.869 380 189.847 380 cv
189.866 380 189.891 380 189.91 380 cv
189.833 380 mo
189.814 380 189.789 380 189.77 380 cv
189.79 380 189.814 380 189.833 380 cv
189.743 380 mo
189.728 380 189.71 380 189.694 380 cv
189.713 380 189.724 380 189.743 380 cv
189.655 380 mo
189.642 380 189.631 380 189.618 380 cv
189.631 380 189.642 380 189.655 380 cv
189.568 379.999 mo
189.558 379.999 189.552 379.999 189.543 379.999 cv
189.555 379.999 189.555 379.999 189.568 379.999 cv
189.489 379.999 mo
189.482 379.999 189.473 379.999 189.466 379.999 cv
189.473 379.999 189.482 379.999 189.489 379.999 cv
189.422 379.999 mo
189.412 379.999 189.398 379.999 189.389 379.999 cv
189.402 379.999 189.409 379.999 189.422 379.999 cv
189.344 379.999 mo
189.334 379.999 189.323 379.999 189.313 379.999 cv
189.326 379.999 189.331 379.999 189.344 379.999 cv
189.27 379.999 mo
189.261 379.999 189.246 379.998 189.236 379.998 cv
189.249 379.998 189.258 379.999 189.27 379.999 cv
189.19 379.998 mo
189.18 379.998 189.171 379.998 189.161 379.998 cv
189.174 379.998 189.177 379.998 189.19 379.998 cv
189.108 379.998 mo
189.102 379.998 189.092 379.998 189.086 379.998 cv
189.098 379.998 189.095 379.998 189.108 379.998 cv
189.026 379.997 mo
189.023 379.997 189.013 379.997 189.01 379.997 cv
189.016 379.997 189.019 379.997 189.026 379.997 cv
188.95 379.997 mo
188.947 379.997 188.937 379.997 188.934 379.997 cv
188.94 379.997 188.944 379.997 188.95 379.997 cv
188.873 379.997 mo
188.87 379.997 188.861 379.997 188.858 379.997 cv
188.873 379.997 li
188.796 379.996 mo
188.793 379.996 188.785 379.996 188.782 379.996 cv
188.796 379.996 li
188.716 379.996 mo
188.713 379.996 188.71 379.996 188.707 379.996 cv
188.716 379.996 li
188.636 379.995 mo
188.632 379.995 li
188.636 379.995 li
188.56 379.995 mo
188.555 379.995 li
188.56 379.995 li
188.488 379.994 mo
188.485 379.994 188.482 379.994 188.479 379.994 cv
188.488 379.994 li
188.406 379.993 mo
188.404 379.993 li
188.406 379.993 li
380 189.908 mo
380 189.902 380 189.886 380 189.879 cv
380 189.888 380 189.899 380 189.908 cv
380 189.813 mo
380 189.806 380 189.79 380 189.784 cv
380 189.792 380 189.804 380 189.813 cv
380 189.6 mo
380 189.594 379.999 189.577 379.999 189.571 cv
379.999 189.579 380 189.592 380 189.6 cv
379.999 189.502 mo
379.999 189.496 379.999 189.483 379.999 189.477 cv
379.999 189.485 379.999 189.494 379.999 189.502 cv
379.999 189.383 mo
379.999 189.381 li
379.999 189.383 li
379.999 189.292 mo
379.999 189.285 379.999 189.269 379.999 189.263 cv
379.999 189.271 379.999 189.283 379.999 189.292 cv
379.998 189.197 mo
379.998 189.191 379.998 189.173 379.998 189.167 cv
379.998 189.18 379.998 189.184 379.998 189.197 cv
379.998 189.075 mo
379.998 189.074 li
379.998 189.075 li
379.997 188.983 mo
379.997 188.977 379.997 188.963 379.997 188.957 cv
379.997 188.966 379.997 188.974 379.997 188.983 cv
379.997 188.883 mo
379.997 188.876 379.997 188.869 379.997 188.862 cv
379.997 188.871 379.997 188.874 379.997 188.883 cv
379.996 188.767 mo
379.996 188.763 li
379.996 188.767 li
379.995 188.674 mo
379.995 188.667 379.995 188.657 379.995 188.651 cv
379.995 188.659 379.995 188.665 379.995 188.674 cv
379.995 188.576 mo
379.995 188.57 379.995 188.56 379.995 188.554 cv
379.995 188.562 379.995 188.567 379.995 188.576 cv
379.994 188.46 mo
379.994 188.453 379.994 188.458 379.994 188.451 cv
379.994 188.456 379.994 188.456 379.994 188.46 cv
379.993 188.368 mo
379.993 188.362 379.993 188.347 379.993 188.34 cv
379.993 188.349 379.993 188.36 379.993 188.368 cv
379.992 188.266 mo
379.992 188.259 379.992 188.254 379.992 188.248 cv
379.992 188.252 379.992 188.261 379.992 188.266 cv
379.991 188.151 mo
379.991 188.149 li
379.991 188.151 li
379.99 188.057 mo
379.99 188.05 379.99 188.043 379.99 188.037 cv
379.99 188.045 379.99 188.048 379.99 188.057 cv
379.989 187.957 mo
379.989 187.951 379.989 187.946 379.989 187.94 cv
379.989 187.944 379.989 187.953 379.989 187.957 cv
379.988 187.843 mo
379.988 187.842 li
379.988 187.843 li
379.987 187.749 mo
379.987 187.743 379.987 187.736 379.987 187.73 cv
379.987 187.738 379.987 187.74 379.987 187.749 cv
379.986 187.643 mo
379.986 187.635 li
379.986 187.643 li
379.983 187.438 mo
379.983 187.426 li
379.983 187.438 li
379.982 187.332 mo
379.982 187.329 li
379.982 187.332 li
379.979 187.133 mo
379.979 187.126 379.979 187.123 379.978 187.116 cv
379.979 187.125 379.979 187.124 379.979 187.133 cv
379.977 187.023 mo
379.977 187.022 li
379.977 187.023 li
379.974 186.822 mo
379.974 186.812 li
379.974 186.822 li
379.972 186.718 mo
379.972 186.714 li
379.972 186.718 li
379.969 186.514 mo
379.968 186.506 li
379.969 186.514 li
.898039 .898039 .898039 rgb
f
190 380 mo
189.974 380 189.949 380 189.923 380 cv
189.92 380 189.913 380 189.91 380 cv
189.891 380 189.866 380 189.847 380 cv
189.84 380 189.84 380 189.833 380 cv
189.814 380 189.79 380 189.77 380 cv
189.761 380 189.753 380 189.743 380 cv
189.724 380 189.713 380 189.694 380 cv
189.681 380 189.667 380 189.655 380 cv
189.642 380 189.631 380 189.618 380 cv
189.603 380 189.584 379.999 189.568 379.999 cv
189.555 379.999 189.555 379.999 189.543 379.999 cv
189.524 379.999 189.508 379.999 189.489 379.999 cv
189.482 379.999 189.473 379.999 189.466 379.999 cv
189.451 379.999 189.438 379.999 189.422 379.999 cv
189.409 379.999 189.402 379.999 189.389 379.999 cv
189.373 379.999 189.359 379.999 189.344 379.999 cv
189.331 379.999 189.326 379.999 189.313 379.999 cv
189.297 379.999 189.286 379.999 189.27 379.999 cv
189.258 379.999 189.249 379.998 189.236 379.998 cv
189.22 379.998 189.206 379.998 189.19 379.998 cv
189.177 379.998 189.174 379.998 189.161 379.998 cv
189.142 379.998 189.127 379.998 189.108 379.998 cv
189.095 379.998 189.098 379.998 189.086 379.998 cv
189.063 379.998 189.048 379.998 189.026 379.997 cv
189.019 379.997 189.016 379.997 189.01 379.997 cv
188.988 379.997 188.972 379.997 188.95 379.997 cv
188.944 379.997 188.94 379.997 188.934 379.997 cv
188.912 379.997 188.895 379.997 188.873 379.997 cv
188.858 379.997 li
188.836 379.996 188.818 379.996 188.796 379.996 cv
188.782 379.996 li
188.76 379.996 188.738 379.996 188.716 379.996 cv
188.707 379.996 li
188.681 379.995 188.662 379.995 188.636 379.995 cv
188.632 379.995 li
188.606 379.995 188.586 379.995 188.56 379.995 cv
188.555 379.995 li
188.533 379.994 188.511 379.994 188.488 379.994 cv
188.479 379.994 li
188.453 379.994 188.432 379.994 188.406 379.993 cv
188.404 379.993 li
137.126 379.571 90.6982 358.828 56.7568 325.432 cv
84.7593 341.687 117.29 351 152 351 cv
201.719 351 246.982 331.899 280.846 300.639 cv
280.906 300.642 280.967 300.643 281.028 300.643 cv
282.155 300.643 283.305 300.17 284.18 299.433 cv
284.519 299.147 284.836 298.818 285.245 298.647 cv
285.471 298.553 285.696 298.512 285.921 298.512 cv
286.589 298.512 287.257 298.87 287.938 299.229 cv
288.619 299.587 289.313 299.945 290.034 299.945 cv
290.091 299.945 290.147 299.943 290.204 299.938 cv
290.687 299.899 291.138 299.688 291.569 299.467 cv
295.713 297.336 299.095 294.009 302.407 290.733 cv
304.245 288.915 306.083 287.098 307.921 285.28 cv
308.133 285.07 308.348 284.856 308.542 284.627 cv
309.501 283.679 310.459 282.731 311.418 281.783 cv
311.853 281.353 312.297 280.909 312.547 280.351 cv
313 279.339 312.738 278.135 313.097 277.085 cv
313.111 277.044 313.126 277.003 313.142 276.963 cv
313.46 276.704 313.77 276.435 314.062 276.146 cv
314.528 275.684 314.95 275.143 315.25 274.556 cv
316.031 273.933 316.849 273.352 317.559 272.649 cv
318.546 271.67 319.333 270.345 319.19 268.96 cv
319.115 268.228 318.788 267.548 318.605 266.835 cv
317.967 264.349 319.132 261.755 320.59 259.643 cv
321.026 259.01 321.492 258.398 321.984 257.808 cv
322.753 257.107 323.499 256.387 324.114 255.553 cv
325.341 254.403 326.678 253.348 327.662 251.986 cv
329.145 249.933 329.709 247.238 329.172 244.762 cv
328.171 240.148 328.794 235.438 328.801 230.719 cv
330.366 226.753 331.803 222.716 333.104 218.625 cv
333.804 217.999 334.506 217.382 335.188 216.767 cv
336.777 215.335 338.305 213.836 339.767 212.276 cv
345.658 206.754 350.672 200.299 354.563 193.225 cv
355.313 191.86 355.976 190.027 354.922 188.881 cv
354.472 188.392 353.889 188.207 353.252 188.207 cv
352.223 188.207 351.053 188.691 350.083 189.153 cv
346.761 190.738 343.148 191.712 339.48 192.02 cv
339.658 190.937 339.828 189.843 339.987 188.753 cv
340.637 188.486 341.257 188.149 341.833 187.746 cv
345.991 184.835 349.603 182.287 354.354 180.501 cv
355.537 180.057 356.777 179.637 357.694 178.769 cv
358.359 178.14 358.788 177.343 359.159 176.501 cv
359.901 176.191 360.611 175.822 361.191 175.272 cv
362.467 174.065 362.874 172.24 363.667 170.666 cv
363.972 170.447 364.274 170.224 364.563 169.986 cv
365.267 169.404 365.914 168.644 366.26 167.81 cv
366.863 167.375 367.488 166.96 368.06 166.489 cv
369.281 165.48 370.328 163.936 369.939 162.4 cv
368.161 162.13 366.415 161.639 364.757 160.941 cv
364.092 160.662 363.407 160.303 362.85 159.84 cv
363.692 160.084 364.6 160.18 365.477 160.228 cv
366.121 160.264 366.767 160.282 367.412 160.282 cv
369.429 160.282 371.446 160.108 373.434 159.763 cv
373.513 159.747 li
373.332 158.736 373.143 157.731 372.946 156.726 cv
374.281 156.649 375.613 156.495 376.931 156.266 cv
377.01 156.25 li
370.397 119.367 353.135 86.1831 328.526 59.9766 cv
327.006 61.2409 325.041 61.9898 323.072 61.9898 cv
322.492 61.9898 321.913 61.9249 321.344 61.7891 cv
320.831 60.9971 320.264 60.1689 319.399 59.791 cv
319.158 59.6853 318.888 59.6336 318.619 59.6336 cv
317.923 59.6336 317.232 59.979 317.051 60.6348 cv
316.834 61.4136 317.393 62.1743 317.582 62.96 cv
317.722 63.539 317.645 64.1173 317.415 64.6473 cv
317.007 64.0804 316.534 63.5642 315.902 63.2881 cv
315.661 63.1825 315.391 63.1307 315.121 63.1307 cv
315.042 63.1307 314.964 63.1351 314.886 63.1439 cv
306.602 49.3893 296.624 36.766 285.243 25.5684 cv
340.957 57.9091 378.73 117.744 379.968 186.506 cv
379.969 186.514 li
379.97 186.582 379.971 186.645 379.972 186.714 cv
379.972 186.718 li
379.973 186.752 379.973 186.778 379.974 186.812 cv
379.974 186.822 li
379.975 186.89 379.976 186.954 379.977 187.022 cv
379.977 187.023 li
379.978 187.053 379.978 187.086 379.978 187.116 cv
379.979 187.123 379.979 187.126 379.979 187.133 cv
379.98 187.197 379.981 187.265 379.982 187.329 cv
379.982 187.332 li
379.982 187.366 379.982 187.392 379.983 187.426 cv
379.983 187.438 li
379.984 187.506 379.985 187.567 379.986 187.635 cv
379.986 187.643 li
379.986 187.673 379.986 187.7 379.987 187.73 cv
379.987 187.736 379.987 187.743 379.987 187.749 cv
379.987 187.779 379.988 187.812 379.988 187.842 cv
379.988 187.843 li
379.988 187.877 379.989 187.906 379.989 187.94 cv
379.989 187.946 379.989 187.951 379.989 187.957 cv
379.989 187.983 379.99 188.011 379.99 188.037 cv
379.99 188.043 379.99 188.05 379.99 188.057 cv
379.991 188.087 379.991 188.119 379.991 188.149 cv
379.991 188.151 li
379.991 188.185 379.992 188.213 379.992 188.248 cv
379.992 188.254 379.992 188.259 379.992 188.266 cv
379.992 188.291 379.993 188.314 379.993 188.34 cv
379.993 188.347 379.993 188.362 379.993 188.368 cv
379.993 188.394 379.994 188.426 379.994 188.451 cv
379.994 188.458 379.994 188.453 379.994 188.46 cv
379.994 188.49 379.994 188.524 379.995 188.554 cv
379.995 188.56 379.995 188.57 379.995 188.576 cv
379.995 188.602 379.995 188.625 379.995 188.651 cv
379.995 188.657 379.995 188.667 379.995 188.674 cv
379.996 188.704 379.996 188.733 379.996 188.763 cv
379.996 188.767 li
379.996 188.797 379.996 188.832 379.997 188.862 cv
379.997 188.869 379.997 188.876 379.997 188.883 cv
379.997 188.909 379.997 188.931 379.997 188.957 cv
379.997 188.963 379.997 188.977 379.997 188.983 cv
379.997 189.013 379.998 189.044 379.998 189.074 cv
379.998 189.075 li
379.998 189.105 379.998 189.137 379.998 189.167 cv
379.998 189.173 379.998 189.191 379.998 189.197 cv
379.998 189.218 379.998 189.241 379.999 189.263 cv
379.999 189.269 379.999 189.285 379.999 189.292 cv
379.999 189.322 379.999 189.351 379.999 189.381 cv
379.999 189.383 li
379.999 189.413 379.999 189.447 379.999 189.477 cv
379.999 189.483 379.999 189.496 379.999 189.502 cv
379.999 189.528 379.999 189.545 379.999 189.571 cv
379.999 189.577 380 189.594 380 189.6 cv
380 189.66 380 189.724 380 189.784 cv
380 189.79 380 189.806 380 189.813 cv
380 189.838 380 189.854 380 189.879 cv
380 189.886 380 189.902 380 189.908 cv
380 189.938 380 189.97 380 190 cv
380 294.934 294.934 380 190 380 cv
350.205 244.684 mo
349.846 244.684 349.479 244.762 349.143 244.891 cv
346.207 246.013 345.437 250.163 342.568 251.449 cv
341.888 251.754 341.136 251.871 340.451 252.167 cv
339.06 252.769 338.076 254.056 337.401 255.414 cv
336.968 256.287 336.628 257.269 336.816 258.226 cv
336.937 258.838 337.264 259.389 337.469 259.978 cv
338.084 261.745 337.48 263.66 336.158 264.921 cv
333.365 267.584 334.522 272.38 337.937 273.967 cv
338.705 274.324 339.513 274.632 340.357 274.693 cv
340.453 274.7 340.549 274.704 340.645 274.704 cv
341.401 274.704 342.167 274.483 342.725 273.979 cv
343.398 273.369 343.68 272.448 343.933 271.574 cv
344.445 269.8 344.417 268.017 344.827 266.254 cv
345.271 264.343 346.589 262.685 347.312 260.877 cv
347.745 259.794 348.021 258.645 348.57 257.615 cv
349.453 255.959 350.984 254.729 351.925 253.104 cv
353.135 251.013 353.237 248.32 352.189 246.144 cv
351.974 245.694 351.698 245.252 351.28 244.98 cv
350.961 244.772 350.587 244.684 350.205 244.684 cv
353.929 158.838 mo
353.839 158.838 353.75 158.836 353.66 158.832 cv
351.359 158.741 349.201 157.635 347.395 156.207 cv
346.922 155.834 346.449 155.412 346.236 154.847 cv
346.029 154.3 346.095 153.693 346.021 153.113 cv
345.814 151.477 344.532 150.185 343.174 149.251 cv
342.604 148.859 341.979 148.471 341.613 147.9 cv
341.848 147.939 342.081 147.994 342.308 148.061 cv
343.173 148.319 343.985 148.753 344.68 149.33 cv
346.173 150.57 347.05 152.378 348.163 153.967 cv
349.277 155.556 350.872 157.056 352.811 157.103 cv
352.844 157.104 352.876 157.104 352.908 157.104 cv
353.649 157.104 354.4 156.902 355.141 156.699 cv
355.882 156.497 356.614 156.294 357.318 156.294 cv
357.762 156.294 358.194 156.375 358.61 156.587 cv
358.684 156.625 358.756 156.666 358.825 156.711 cv
357.658 158.09 355.77 158.838 353.929 158.838 cv
.0470588 .501961 .67451 rgb
f
340.645 274.704 mo
340.549 274.704 340.453 274.7 340.357 274.693 cv
339.513 274.632 338.705 274.324 337.937 273.967 cv
334.522 272.38 333.365 267.584 336.158 264.921 cv
337.48 263.66 338.084 261.745 337.469 259.978 cv
337.264 259.389 336.937 258.838 336.816 258.226 cv
336.628 257.269 336.968 256.287 337.401 255.414 cv
338.076 254.056 339.06 252.769 340.451 252.167 cv
341.136 251.871 341.888 251.754 342.568 251.449 cv
345.437 250.163 346.207 246.013 349.143 244.891 cv
349.479 244.762 349.846 244.684 350.205 244.684 cv
350.587 244.684 350.961 244.772 351.28 244.98 cv
351.698 245.252 351.974 245.694 352.189 246.144 cv
353.237 248.32 353.135 251.013 351.925 253.104 cv
350.984 254.729 349.453 255.959 348.57 257.615 cv
348.021 258.645 347.745 259.794 347.312 260.877 cv
346.589 262.685 345.271 264.343 344.827 266.254 cv
344.417 268.017 344.445 269.8 343.933 271.574 cv
343.68 272.448 343.398 273.369 342.725 273.979 cv
342.167 274.483 341.401 274.704 340.645 274.704 cv
.552941 .815686 .294118 rgb
f
281.028 300.643 mo
280.967 300.643 280.906 300.642 280.846 300.639 cv
282.089 299.491 283.317 298.326 284.53 297.146 cv
285.655 297.145 286.803 296.672 287.677 295.936 cv
288.016 295.65 288.333 295.321 288.742 295.15 cv
288.968 295.056 289.193 295.015 289.418 295.015 cv
290.087 295.015 290.754 295.373 291.435 295.732 cv
292.116 296.09 292.81 296.448 293.531 296.448 cv
293.588 296.448 293.644 296.446 293.701 296.441 cv
294.185 296.402 294.635 296.191 295.066 295.97 cv
299.209 293.839 302.592 290.512 305.904 287.236 cv
306.784 286.366 307.663 285.497 308.542 284.627 cv
308.348 284.856 308.133 285.07 307.921 285.28 cv
306.083 287.098 304.245 288.915 302.407 290.733 cv
299.095 294.009 295.713 297.336 291.569 299.467 cv
291.138 299.688 290.687 299.899 290.204 299.938 cv
290.147 299.943 290.091 299.945 290.034 299.945 cv
289.313 299.945 288.619 299.587 287.938 299.229 cv
287.257 298.87 286.589 298.512 285.921 298.512 cv
285.696 298.512 285.471 298.553 285.245 298.647 cv
284.836 298.818 284.519 299.147 284.18 299.433 cv
283.305 300.17 282.155 300.643 281.028 300.643 cv
313.142 276.963 mo
313.393 276.326 313.855 275.791 314.355 275.321 cv
314.642 275.053 314.943 274.801 315.25 274.556 cv
314.95 275.143 314.528 275.684 314.062 276.146 cv
313.77 276.435 313.46 276.704 313.142 276.963 cv
321.984 257.808 mo
322.606 257.063 323.27 256.354 323.973 255.686 cv
324.02 255.642 324.067 255.597 324.114 255.553 cv
323.499 256.387 322.753 257.107 321.984 257.808 cv
333.104 218.625 mo
333.126 218.555 333.144 218.5 333.166 218.43 cv
334.866 216.597 336.847 214.929 338.685 213.271 cv
339.049 212.943 339.41 212.611 339.767 212.276 cv
338.305 213.836 336.777 215.335 335.188 216.767 cv
334.506 217.382 333.804 217.999 333.104 218.625 cv
339.987 188.753 mo
340.123 187.83 340.25 186.91 340.372 185.983 cv
342.14 185.861 343.877 185.266 345.33 184.249 cv
349.488 181.338 353.101 178.79 357.852 177.004 cv
358.286 176.841 358.728 176.681 359.159 176.501 cv
358.788 177.343 358.359 178.14 357.694 178.769 cv
356.777 179.637 355.537 180.057 354.354 180.501 cv
349.603 182.287 345.991 184.835 341.833 187.746 cv
341.257 188.149 340.637 188.486 339.987 188.753 cv
363.667 170.666 mo
363.875 170.252 364.109 169.856 364.394 169.493 cv
364.914 168.828 365.573 168.305 366.26 167.81 cv
365.914 168.644 365.267 169.404 364.563 169.986 cv
364.274 170.224 363.972 170.447 363.667 170.666 cv
367.412 160.282 mo
366.767 160.282 366.121 160.264 365.477 160.228 cv
364.6 160.18 363.692 160.084 362.85 159.84 cv
362.275 159.361 361.839 158.769 361.707 158.035 cv
361.582 157.341 361.759 156.615 361.604 155.927 cv
361.48 155.366 360.963 154.826 360.44 154.826 cv
360.321 154.826 360.201 154.854 360.086 154.916 cv
359.765 155.09 359.612 155.457 359.446 155.782 cv
359.274 156.117 359.065 156.427 358.825 156.711 cv
358.756 156.666 358.684 156.625 358.61 156.587 cv
358.194 156.375 357.762 156.294 357.318 156.294 cv
356.614 156.294 355.882 156.497 355.141 156.699 cv
354.4 156.902 353.649 157.104 352.908 157.104 cv
352.876 157.104 352.844 157.104 352.811 157.103 cv
350.872 157.056 349.277 155.556 348.163 153.967 cv
347.05 152.378 346.173 150.57 344.68 149.33 cv
343.985 148.753 343.173 148.319 342.308 148.061 cv
342.081 147.994 341.848 147.939 341.613 147.9 cv
341.59 147.865 341.568 147.829 341.548 147.793 cv
341.511 147.252 341.471 146.711 341.43 146.171 cv
341.625 145.596 342.043 145.077 342.573 144.77 cv
343.102 144.464 343.706 144.337 344.319 144.337 cv
344.819 144.337 345.326 144.422 345.804 144.564 cv
346.67 144.822 347.482 145.256 348.177 145.833 cv
349.67 147.073 350.547 148.881 351.66 150.47 cv
352.774 152.059 354.368 153.559 356.309 153.606 cv
356.341 153.607 356.373 153.607 356.405 153.607 cv
357.146 153.607 357.897 153.405 358.638 153.202 cv
359.38 153 360.112 152.797 360.815 152.797 cv
361.259 152.797 361.691 152.878 362.107 153.09 cv
363.034 153.564 363.551 154.566 364.321 155.266 cv
365.551 156.38 367.316 156.64 368.973 156.731 cv
369.618 156.767 370.265 156.785 370.911 156.785 cv
371.59 156.785 372.268 156.765 372.946 156.726 cv
373.143 157.731 373.332 158.736 373.513 159.747 cv
373.434 159.763 li
371.446 160.108 369.429 160.282 367.412 160.282 cv
316.51 65.893 mo
315.975 64.971 315.435 64.0561 314.886 63.1439 cv
314.964 63.1351 315.042 63.1307 315.121 63.1307 cv
315.391 63.1307 315.661 63.1825 315.902 63.2881 cv
316.534 63.5642 317.007 64.0804 317.415 64.6473 cv
317.215 65.1101 316.899 65.536 316.51 65.893 cv
.0431373 .45098 .603922 rgb
f
284.53 297.146 mo
303.639 278.543 318.841 255.955 328.801 230.719 cv
328.794 235.438 328.171 240.148 329.172 244.762 cv
329.709 247.238 329.145 249.933 327.662 251.986 cv
326.678 253.348 325.341 254.403 324.114 255.553 cv
324.067 255.597 324.02 255.642 323.973 255.686 cv
323.27 256.354 322.606 257.063 321.984 257.808 cv
321.492 258.398 321.026 259.01 320.59 259.643 cv
319.132 261.755 317.967 264.349 318.605 266.835 cv
318.788 267.548 319.115 268.228 319.19 268.96 cv
319.333 270.345 318.546 271.67 317.559 272.649 cv
316.849 273.352 316.031 273.933 315.25 274.556 cv
314.943 274.801 314.642 275.053 314.355 275.321 cv
313.855 275.791 313.393 276.326 313.142 276.963 cv
313.126 277.003 313.111 277.044 313.097 277.085 cv
312.738 278.135 313 279.339 312.547 280.351 cv
312.297 280.909 311.853 281.353 311.418 281.783 cv
310.459 282.731 309.501 283.679 308.542 284.627 cv
307.663 285.497 306.784 286.366 305.904 287.236 cv
302.592 290.512 299.209 293.839 295.066 295.97 cv
294.635 296.191 294.185 296.402 293.701 296.441 cv
293.644 296.446 293.588 296.448 293.531 296.448 cv
292.81 296.448 292.116 296.09 291.435 295.732 cv
290.754 295.373 290.087 295.015 289.418 295.015 cv
289.193 295.015 288.968 295.056 288.742 295.15 cv
288.333 295.321 288.016 295.65 287.677 295.936 cv
286.803 296.672 285.655 297.145 284.53 297.146 cv
333.166 218.43 mo
335.876 209.873 337.997 201.054 339.48 192.02 cv
343.148 191.712 346.761 190.738 350.083 189.153 cv
351.053 188.691 352.223 188.207 353.252 188.207 cv
353.889 188.207 354.472 188.392 354.922 188.881 cv
355.976 190.027 355.313 191.86 354.563 193.225 cv
350.672 200.299 345.658 206.754 339.767 212.276 cv
339.41 212.611 339.049 212.943 338.685 213.271 cv
336.847 214.929 334.866 216.597 333.166 218.43 cv
340.372 185.983 mo
341.446 177.809 342 169.467 342 161 cv
342 156.56 341.848 152.157 341.548 147.793 cv
341.568 147.829 341.59 147.865 341.613 147.9 cv
341.979 148.471 342.604 148.859 343.174 149.251 cv
344.532 150.185 345.814 151.477 346.021 153.113 cv
346.095 153.693 346.029 154.3 346.236 154.847 cv
346.449 155.412 346.922 155.834 347.395 156.207 cv
349.201 157.635 351.359 158.741 353.66 158.832 cv
353.75 158.836 353.839 158.838 353.929 158.838 cv
355.77 158.838 357.658 158.09 358.825 156.711 cv
359.065 156.427 359.274 156.117 359.446 155.782 cv
359.612 155.457 359.765 155.09 360.086 154.916 cv
360.201 154.854 360.321 154.826 360.44 154.826 cv
360.963 154.826 361.48 155.366 361.604 155.927 cv
361.759 156.615 361.582 157.341 361.707 158.035 cv
361.839 158.769 362.275 159.361 362.85 159.84 cv
363.407 160.303 364.092 160.662 364.757 160.941 cv
366.415 161.639 368.161 162.13 369.939 162.4 cv
370.328 163.936 369.281 165.48 368.06 166.489 cv
367.488 166.96 366.863 167.375 366.26 167.81 cv
365.573 168.305 364.914 168.828 364.394 169.493 cv
364.109 169.856 363.875 170.252 363.667 170.666 cv
362.874 172.24 362.467 174.065 361.191 175.272 cv
360.611 175.822 359.901 176.191 359.159 176.501 cv
358.728 176.681 358.286 176.841 357.852 177.004 cv
353.101 178.79 349.488 181.338 345.33 184.249 cv
343.877 185.266 342.14 185.861 340.372 185.983 cv
370.911 156.785 mo
370.265 156.785 369.618 156.767 368.973 156.731 cv
367.316 156.64 365.551 156.38 364.321 155.266 cv
363.551 154.566 363.034 153.564 362.107 153.09 cv
361.691 152.878 361.259 152.797 360.815 152.797 cv
360.112 152.797 359.38 153 358.638 153.202 cv
357.897 153.405 357.146 153.607 356.405 153.607 cv
356.373 153.607 356.341 153.607 356.309 153.606 cv
354.368 153.559 352.774 152.059 351.66 150.47 cv
350.547 148.881 349.67 147.073 348.177 145.833 cv
347.482 145.256 346.67 144.822 345.804 144.564 cv
345.326 144.422 344.819 144.337 344.319 144.337 cv
343.706 144.337 343.102 144.464 342.573 144.77 cv
342.043 145.077 341.625 145.596 341.43 146.171 cv
339.183 117.084 330.385 89.8349 316.51 65.893 cv
316.899 65.536 317.215 65.1101 317.415 64.6473 cv
317.645 64.1173 317.722 63.539 317.582 62.96 cv
317.393 62.1743 316.834 61.4136 317.051 60.6348 cv
317.232 59.979 317.923 59.6336 318.619 59.6336 cv
318.888 59.6336 319.158 59.6853 319.399 59.791 cv
320.264 60.1689 320.831 60.9971 321.344 61.7891 cv
321.913 61.9249 322.492 61.9898 323.072 61.9898 cv
325.041 61.9898 327.006 61.2409 328.526 59.9766 cv
353.135 86.1831 370.397 119.367 377.01 156.25 cv
376.931 156.266 li
375.613 156.495 374.281 156.649 372.946 156.726 cv
372.268 156.765 371.59 156.785 370.911 156.785 cv
.552941 .815686 .294118 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 23.0.0
%%For: (Alody) ()
%%Title: (EarthGlobe.eps)
%%CreationDate: 4/25/2019 10:15 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBH,FsZpS!<5E6&^W\A9%htSH3XO?6q1j9+fQDdXVj!L6%NLA8fY+W!fL'l]t]$b3VSuQH"81g<QlNJ_6dejC$BO'DNAT-
%EUL*Hpl!&E+5VDDlHM8C\,Yp#G/`j_8BL8gkDS>k5PpARq!YD8GPD'V0"QK.nqV/PhRrmU]=0H^^An3-p@[0ahu@G8r6pQ_]>&da
%NVqqXmLONF?bcR"mdU(lbC>e(p:nm[SR9(E4264<m>L_NEoU7>^Z*Lfs1R26%H-]VY@%8)>H.JimeqKX%r%NZrS:g&k!r#qb:ikb
%GB_rWqYpH*([k_EIIk4&M+dTX0&#raGMg*\?V"\Ag3G-^OC.Enn,E.%&$OmV1O&.bo%3WNgnBT)C\O=e;"Hj=.e4_.iiM@Yr%]aJ
%q820AlXfhjL;/LLga.BoDh!+lB*>n53]q!LFg)h_]a(4m(OSgHi:$-KrU0?:pNIUZOPNXfIA-\/s3WKc1#Ram`9#"X]#^9$Eg(;4
%],^-2.m]aW25R*\pT28\pZ&<d5Q5ElhsXm!IJ;#VFoUn.Q`pBQ)85AVr`Jj^IX$;8mdK&GH8")U=P%X[rq>a2GH^+LfA"WT?Z:h!
%YN>f='u,7gm[Li_1+hCtrW2'LX5,P&nom<Gq_p2-FGJQ4m307?mdA?ghu4/#kSL(]S!Zh&-2H?[MR7_/(70*)&Zor[/?+\<hYGM?
%c=+.OTKT[5T2RIV^Qlq:Rs2'MH1g<$^'*]ES8@']ot+:4YLBq7h4jqiVJhdb:[<Ms`MFO1^V>-E^Vko2Ndj,B!-rQHq=Nh8j4eK,
%*8feK#FYC+A5U!gqi1Ptr<Ig"/c>+/I0qL=qRa4W_lG_0p\D/1e))`arV#mpo#ndsp\'C2If8E$h`cP`MuD7Gs64Fq2m;)nmIZ`,
%rq;\j?a/t;]D$f&qsIhQT>1C%m_ucGDdL*Qm[##0oZM`tHiNYD/t99&:MKTRgqA+8p74mtYBRbWVuJ@K5V%pA]ALAMnP[)'r]RE0
%9S5)Kn+ue%^&2OCmpkc%0dA?d2P@IU2a?04If%sNY[7'k(4Z5X`L@\47]5oVqGD_56:Q*7&f9E<s+a+P.5Ui_kn^_5*L)Uk0`C96
%O*^?q?Y!6JHh6q)UNQOuqW@PkXa<a"`ttpd^\[*KMspZ,e]Ze-h%/ECbO5+ChnC/6?hsYFdel3+$?n[K#63rBIsV"geb@s]a36EU
%Pr\d-jm0N3s7H9e]>om\f)E9?^NlUQF8mcWK$+Z9nYu9\Upp@gqm:@p[3s'Ls#iO,bEqR`CX:Z4C-9P:rs_/g&+\uN=!A1t=SNuN
%k0$!'&;g?EYQ!c2$PhLqc`c2]d]iW>LKEs5f!Y>Ig[CeOm_8Uc(Z4%gjn((<>arrEahB\%>@2dJi>p2+h;QV+a^;f0nb"Ec1Og^F
%>BC\GdbRe"Gm??UGP=QJF1km<mC56*rVY>55(D^4;@Y!!r6<9J_h,Y2k3BfE(NS*ak(k,WXlO%"qV1A*glQ]/n^ZUS'/qh_go`TF
%l`KQ#A%UUKXuEbpQ:09IU@sEB-LH41rV"bT20\ip8_u!_l&4XNH`nfF/Ua\;m5j;)UjZVps7V4lhn?c$bM@*n]m0.n*N&<pc$&Zh
%:g0mo>BI8(S5IN9k6le*U<A+198]=IX=PN,?K[dKXfN3(^HR.UUa8Y'Md'FL90(PWHE;n5Qa0/]<Kus@CQ]=,K^,DDEgCa/Ea'#O
%p8(>`MTk3\`"L0<PpdqLnbF`tP]*B<V<i8eZA>V\1O`dCfk6XH;N=ZKWMN$)Q_hVG0:mPR9=^&&G[T4F-3Z'J=-<e[,B>5^6M+0O
%)o=V*pug5N0c]t$s86$PZa?r-W@W;Eb`[Q7&d&)h/J/t[5>+$4>F)%KK9SMloCCF\na%*"Uh$*nn3t]SpYKV(B6TMZbArhf@+i`=
%i(nD%M[]'(j65ijqh#U\1b"=s%#f<&54.r*b5^Khn/>uu/EPB!V&Z<OUboW!OoJda'F[.9^.AR)".OBt_s<q]PPhtVEg1U+Jk+cH
%r*WW<\2[:2@@f::,ir-hc_&<aR:coi99l3iSCu2V:`X/nB("U'D)k3Kn;kd=R6ga9SPLf(K)J4&<gL;HB:-q!(0;Jg)s5nsk+!tk
%Rs>7a^4Z@JF0NtX1n4:gA(o%H&ja=$M7G($2eK#4dBf'9+!(*o5LQ9mW>8c[plL39iZPSgjN]N-]Z_X(dPAFlbVL+@)>8^,`fnVB
%069"mb8(tg-?K)CS7E(b"Y)#H8N0Wem_,]o;fX=_,bJ1M&fbGiS`RJ8Hu3;1*2KLXno,1mdaqL=i.+[f;%#.B\]W-t9ud$3:GPe\
%b_RMH[)bp$aQtq/'_X;cP0C>V\Ta:KGa>lXA?KM^e1.eL0=1LuJ!Pp5A2.^/Q:7ZIPDO`Jg`B4GZRi;!N&"d0-J0M@H%.prDiZ8K
%1gUr<Os)D4=ki?&p3:qq4j0"OcP>sn07%A_`mN0U5F&H%EDr[6A]b^B.DKhEn%%/5>lF6Adc/qLel,2B5Al`(PO)DpBp;V`Lbt50
%]0t>A6tqii1$LGc)'rKYRj)2_/T/<Q4L/5+^6LlCourcmPUM[c#Vr8BLf!@nb+Jh_&gS,9e=#pO;f5#rYmdTYF%tdCjW*D&jPH"T
%mj.#=Y(22D*/p,OR0'6`Si02B86O0Zg\ki9k1l3k((hWJ7qJA6A8-"S<Y:CPZPE(3-77n,AhAbQgY@doO_)gGS\pu:c_#2(+-&jZ
%bqboPkMquJkIElIRG!DuX5(iEbSf:,8t>(bgKU*31>=hHALkWfJ,YDu5)H3gSGgl1pup0JYB2hbL(f$]S2U?t)^;^g&RuB8"WRH/
%*IHp]pX'T;+9R3*QJHeHcf`T4(W>@ZPT#X?Se<eV?=lgV6@$.=RP[W?kr=g@kRMt[V"0p/`eh><Pi%SaM3>PKl;UB($nV\K^qJ^J
%S`5=9"&i95OQW2J\A':]VbCA"5F=p"P%lX;-:<:njdpT91N/k31AaHUb1pn2r9H.XSqDG,cLW`1*fcZ0]p:HOk2\WDD*Est)9.W*
%k@C3Mo=VGufgePE_GTI6?CG-[Z\ij?P1^LZ*]]We-^cMUR:U_jllr'.V!F5ga<5QQ*R6DpDIjG%V!03J<tD#?a:KYck<W^mPDO7A
%V]Da\1hn"!hCcp>6ITnN@mIf];mWFnh3f/bZj?tS6Mg8=R`(dY7&:*MW'>CkTkg(@FNdEQ+dd.mU/l4e/O4K/d0`jN`(obpT0.-I
%f0-cckO,pWm*[XjO"tXc2HaS:9;52d;9bU^!I72a./24;<JsPJ5s!I7W@q.FXOIcEBnaj>_'?A'#47JHZSCQ@<SqpnIFf5,?.[PL
%>ts4!/Uc69oP:nje$Q#Be#0[?^!u6;V!lpie9;Tq-Y/TP7?eOo8)LrVeO;IQ6Ub5K_Gb4)\)i(qrBJ\Wqti<j?@7+op$Nd"66F+$
%]3<PUKUHk\U')rm:_+&A':`XgO!7T)9W<Y</uWrnfN">kH^To',/9[Bd3tPeA_K&1^nTD:6l3g;k$Kt,DP?!CaG-p"0qB_c+e2O`
%+"<5r-AWm8YR9<BU/qK$/A!'MWP86QE*%%[_KKk7p+V0efnA`^e5FMn>CAA+]*d;F$/6V@LVO@"U2BlZFu,,H/pq:4ge8kf+ahpu
%inGW<HT;Va/=VRs=7*VJQqF`K/kWi+AJB<GZrf7uH(_N=q7r&ufJeW,QK&4.9R1M3:KS[oip!^:>(#tMs-[&\N#kdD,7akhk/M,&
%O(pd8P:pB-MGEC!lqm;YdX^-%<?aono4O:HSe<E-bUJc;$PrghO6@T2IGj]&PWt6p"WA7YaAmeengH8.<?G4d9HR(PWBQdAGe-]m
%9mm]nF\RQpQ,mQ1;:W`?cVCK6G(ii-2sLb`j`4?OB@X9r"g]_I9-%JS>2BLJK;1tq[o5;0<HKh154]R:gaa?EOeZ3)]jL>0ap1RF
%MmQS.-pR/j9Q?9`O!tTs`48EsO1OcLj`?=j>qnp80P!eHgetTl32RT7;^Pd<^;)`d,`G9Y=iMH!M6<jY`iN(8d:oFTk&_bXU.LaS
%?hc<U]::T3FYZkT<B8N%c5]Ls;?QSCk3@6U7DX)@<PI7T/r+eZAX+g2.l:>F'rd?<O=234,q;9X`HtMD6@rI-)jALegL?W)<S?l8
%<W;JKrkL'H4A_%[0%/`LY*dB!@gYr\a->%_MmW9CC]?2upef)u6]T^MTrLjf/Oc52dUM=V<u:1Oj(>-HU6Oq\el>`c0$Qk2[:_bf
%<b7T<-tc<J<A1r1N$c4dDIh=IP$)F]=_a@!12Al$Na4:nC"4N[<^s2Pd&h"Hd\=:t]$@Y)UFqO$FPM)r7Up#1-DLrQA^"1F;-BVK
%6mY<h&R?=I[GFu%?R+`?kT1D:a8a.Vnl-sTBl!@f7[qS3V+HU7DRq>E5#<j`ZYd6kR=2"rlGkH^O8jU[*h*K=JPTJKA$jl7b5$G!
%4WhUiYHi#cZTk!V\#4jPPUZl)4Sdb'mHs:lma<<%6(j_>p3<6_[*Uhukno+YZlLV`;K.H/*=?F->bQ+iWZ+p.TQ#I*#H53uc2"ni
%I%&egUgnUr5/utM3Bl^$S/n6aq@jt30\i;V!NIbKFb9H2Y,"7'Ui*OuGN_?sUsLQjDUCum'rYJ"3_7TH\SbQ1(4+kBk^=CtfC4-a
%m\W9p3)QM7J#4r>M]=JJ!.Ac!Ph0r[Z6,cc/Z\_7onhCt#4'GHZL<AA[DYeMr:+Qb(.XJd,(ardTU\2J7&)H'^gkOW0h#8ne90Qa
%*`]#T7pl.cVoA9'ZUFU?;*IX;cP#?=>5TpK5"h-d''6GfH+FbcU9"?:GYT/"^\o7)rQ.9Os50ICdXP5PYnnhhBJc#&iqtg'&fKl9
%=i:^KeIH9W.t>*]FEj8J&BRGVSrWje30AgQ&Js!rb2R?t,hg4Z;uD;c\G!O`:R*hY.(eDT@VBn*cfOWl4WC'2W;(JqJU[ZFi&;eL
%s%6so=/96]T4C_7*`9'(nDH2iHa<B&F[u0EoD)JfpmMM:0$bVV_o"O,lnS2"RIr9#HtagTnF,+'fj(Srlf[1VVG&V#@SWpVJ\Nu0
%ao/tZS!6^sSjHXRb:0_Gi+6GON=NG86'j@p)X*QH^W?&-2`3/02Oi]?g?\5$WSdNY^%MR:_l)f.6g?<?"sH"SAQLI.NmN%_NM@&'
%]nPMIBamS:-QK$</:J.1jLh4g)4Z;JpV]mmiZo7j"0D1;TJtQNepGA?1N4$:AlBQW63ue.&.d<u@#3KF86H,@S.$P[%2i@t4KK`8
%!G:S06\&"kD`uIpVBCih@E#lGGH:B).Q71NOflX6.ag1[_7=HGY54o<f,=,40s>SLHS#?s\etEH&[9]X.*%3t<@mL=iF.S!,plZN
%2f.ih6n;t'c_$33k>BCP;BIHZ#`#d3/ah#h'Lck$<'Q8IG_u&PHs2XJJ*t"jlU>!)i&<m0r5W^F8mo>FHSgJZNh"1'$WfdZ&sXoQ
%^8Dn*6gGsfAS+FC;DAE0),TKH@B.:5l^,H\?kAoGJb9N3l0t6J$WO7T*JG2n&ZS`:iF)_02G!<"cY+XPRZ'&NH].JZXZ5d1TtI!^
%US6C2)!dL/imS#pSC-30o%d>[9YLdPGL4KDT_^FBI(%#M'.b]q2/qMXQt[iRc2I-5R7b.@QTtAj+tXi`:h)/f&!j7_BG*BWjRFtD
%5Ggu0O1NWZ*3ot(MmW8pDglU"O58ebdWAWU[_["mSR3o%/0V]b4q_R,o6[oSq[_dSc!gK3"n:ntdc-dF1hRa&kt)tO$s_j2?)`63
%=6j?BfN6tVDYf$YT9uDIi4"0rX$<S2DXhe+O1Fl03L>eDoB33:8,RaPnT0V\>Q"6Mih%Ba[blhgR/_EdK[[fp>LoS34DMlGcZ_KS
%Y2bu8a?2tt,N_\?a5f7`_))Or9pq#3B$jomV("oc)d/6R!blEe9lhF/LaEno2N2es7-c#'1.#[/nCbM%R96.uk\M1t;l+RT1oh;e
%`Z-ItJn3<hr=IX#*.'(NFqO54$\MfI$VW]oY-`&.(,'DTZT(-FlErsVp<P8NHBAsbps%,:s,gNu#i$NJqt"h\.Vm>tF?1EkD3e*\
%--2R>]00$Nm$X'>);3*Oenj]dadmfQc_">eG0e(7/F5a\A75Fjr9NOlmU]duLK)t\Et3B>_X;^%>s<DNT;F.lc_#&VJ&2rOT+qJ_
%\:4]Y9-/V6_9MQKR@02.S)nh_!?DRoYd1Pc`lb$g/1TnKQR*Mo+G/[q,bLAt?u`X'S\)@3Nh[R`=n=T:W"EaBH)5R7<Llam./BUm
%q_?atAI/k_s,fX)rRaHYrmC<7g#K6AEr($C(*@PH:FZ=+>MMaf;.D"k&7jHM,C,D?=t"YMXWoc-:C7qDHt!BB886Qu$4A'lZ:LTP
%@n\+E6=F*<<X?hb6qg@?=1=-c**DoFP\>/W<q8isE_BqI6D>M`IqG&bCnjTbF(RF0cJ;CL*Q^Kb+9TTSP-7aZC!g/fc'FO30@DP<
%T0`o#OKLK8Rr]se3EoY('"=Xg6Q)bmJ*%a7fj2264K=lKk!IlX?^,Z/`2b3>0@F=&XT)+:O"'t4QKQTjh]>r"r+XA>599[d'?i\M
%.-9VZLPVjAZ9:5+CeCc=Ctiu'$C,!#kIdJq8uM_0KHt_,-!l?X)cuMC:Xe/'nk&Wih]k".B#m\kJF#Yg8IdsNDH>Gqb*I@WPef+t
%9f>^'KZ;LHgVL:EMq]aTeVN(c;KPH/8lBa7Y;Ag3R'"4/VcC-,IkT(-H5Sh4-F*U;>\noX(B"ptkV8$*Z'-4VR?J*k(;Z9A17ai!
%Xa9]tig%Ze$+5r-2)X^f$\0i=%2ugaUUCR_)-X</_P6cks+R>NQ9Ork6?P)G.J(Jp#IZ^M8jPagVC`:I]26`T/'gck$$Ikn;e2s$
%ZCEPX.9@S$*YHh&:lj&KEM-$Er\k/s:l4"7.E;\:eU;Qe>*0RReFnf@T+7RO.iU?P>.g`VhcJu*Y/Zs"4qp'N7<HhhZ`.c@[+uWC
%i*`Qh=5J].-=p37W5+6VpE:7]14E6]B&tT_4d[<@Rjr508PN@B%je=rAQUjE9GOh8I%?"lFYJNL$Rf#;d_P@SJaGaZ7PN7_L3?.B
%VE?o1"AS]13rR`''c\>##u=HLdRqS>POY1k,/,mI,Wh.L;5s;-AU57'.2o%Y;XQ!ihX*_=VrX#o#kjKfmmpp$Z]XN%TjG9j6*.Aj
%E]2dR=r*],E>&@j"7oJb,S"uV!3Se](6Y`r(-pJcU\od7'[^!gk<El)BQ]4F@>13ipYX[*[&kTVi7I\fTA.5\n#m6EpVK)S*XCeG
%nc/K#8_"-j[2@J0Mf@D!T9IeZP8;'Cf_U33/:I?]D>C<B;k@g'DEYs5$'R7.=.<r,<O5tRHX)'?##1WDIUd#mJ(r[_bKM);p=HOc
%efl]c9aOad/?t0lG%m.WCbof@\+cu3HZknC.$o'tYod]Mrm-@eYHC-%[RFAIOHJNp\Ya4L'[t>k>fmeno"hWZ+J5HCMaLksWfc4*
%V"[^!L<A8LhEpE[)TO8+[@"r8ru_/f(:EB*4XU3ql,ckaDtVB"3f>b@#>ldB(44[ihOm`#5g9K0hGN;;c_$U0UTje`EH3/G-boFC
%GG)6[P='P5DBJ[e_iH=bnWG!gOr\a8X)-04f@Y$aMP:&11t0c&rYoSAPAD4gO"%Y]7I/aa=r(jY>e5GH5<)9J6H"!06qjC6;7(!\
%JpfA\.*AYXV73fYarOdn[E67n"mAY*][88">;gek6?_lll8S=YF"pfUSnZp3aA/OeeEC]n.ndoVJ$O[6Q,:$9Cc[c!1c51+H2d.3
%B=]1,E/27j5Jt1\F!2$C/aNhLl/F+q-d%]ps(AlqH*0P2A6%O84q1\]T26kl\I69bR<EIPcAsPhaZa.\(+3=KiQsJ"H1pA,<?L_4
%Z1FK-1)'ZRN2O]8a-cFV`BM7P_C#^>pAf7lOS!"G?]-Ofm[`bA:=mg<(4h4LPs`1P!-ZN&PfVO-<^UlNp,H[J3e*_cMh@C4--Fn;
%fW;gJ=YlO)aicrf-=jFh$=*k#[eB%c:fS$9XZuRIjErU7<fI(KIPI>I38:n'RPj!G4i5am+t[-q*F(6.HQYe?(-d8u2=JP;jT0;@
%-PWqt#*9%qPQLP[W;[.R?Nrpu)Y`^Cr(A0HLsF<CgQRa\j)7^b18\ERnrG"IBdN<<o]bH-'fApXI,daq.`4X#;jFf0rEJ0p-#N\0
%P*[NTrfP(IPF0MO5&pUV;fj5P%qYm>Mr^`a]nrS`2r3=`DHbMY/AXmd^RjFA-TPI(F#*W*:3,'a3V>cf0i$Oi[lfo9F=jWZ>3Za4
%>?\\*K(S"9T_nHPoHPrj5NdgFffcbPO4od4[Q)ja`^IKo3[YU414XU6CcEA9pOe*6+Ri"-msu&+*;Z'`Y\#t@rgC)]B&^e3L*>kS
%>$Q3E/N;Ba^g?T3?)AQG9Dl;d3he1[(ZegmasMO*UdkC],raU_5%NPX9;'th4RVA7oX-f3jF4Y>o0'8',eknl;i5j3T<P!-Mm+B8
%W2RUpH5ahhp`ZEDD!LS):6M-Cc3U*,DR8aj<*Mj*m/?n&R,`%Uaa+rSdtXSDV=ji@&Ka5#ir8`crUoU;5$%fNIS/.Dq:m)V-a[N)
%NOZ@%Gq#qg)"O'c6Cu&rIF"Vb1L!\2G*@A]a:H[-aB9b-2$Ptu>4N(LLRKt:X3$Cb]:(e\l##ZH/Le+4+*]8.9AMrfhrA[*m,q\+
%4n&@o:]>"_ri,>Y&?^?2V>;B\^#=)t)Jf6s6`M1jG0,cUj[QY2e$0gPj#F.3"]&p@eCQfJRFR<\l[5h@<N+L,RYZ"+"Zm4M]&85.
%N3I;h7![dHm1A)hLPe5INTL#q=MoM+$ahbZTKoUi/_W]9nh\u_NZ^m#LuS)?4FEOCk"2=RKq9;<g<]NI^\itI-hM>fEd/),c]&O7
%/B._i+qr)g0+RnUO:if)KLcgV)_76D]uBXINThVt&-k<=1t4jp%G,@VjYEH!Dc(jTCb/^*>I[:Ho+\<TWX+F4!A'@geYGb>(fNd[
%o;,-@V/fGuADUR[2Vkl'OO7Kk-QOc-\t8)oL0T)PFcOkoPDhq64IO(F9\Du2>0t(PX\I\9-gl0+Sk!<e](L6cEE'q@,&ttUmcg=1
%B16QKgd=jrXk]bj^hE*%4OY%=EK'JeG4&<NZ&W$#T1oH&(86WL`\"TN70HMQmIEBY0=E8+NDi2';2^3MBn&H3!WqiJ4bi.;5PN.i
%77Q?=eQXqZE]k:PP6s)_jE_0W2Yj2I]bI&ld$%bd";a9:`:HN*=VFd.,LEhla3EaqjK.^trQ*Y5r&RUY7F&-/):VSDPGV+m2D@pX
%.pet).itFeIq\NcXh$PNFgChHZo)89Y3Gp.o`guSpr5-&fBhnG`m]SJ8[Q"N"r"9d6FM-#$T,pl8.ZcM2t/pGNn"A-r]lmG$e"$'
%[,Jj,I%X01['[>#Xrg+5+$NM]CQTBnQhHsr],X=m*I%-!.)SJeKKjl&kt7Cd`(<<9o.5qX3L#<eE>i..^E.*7miD-)8X247Gi(Yt
%`]Fs57$oh<VB9.b[dQ@S9^8)8`JI1"e]k';Vs-#M4fN)th$ql;Yl:l$`B$o`^0\12jI7&_cAA:DO0u;]lu9huC,*-X7^Rn*Ri+HR
%Fu+)hoLPd3;H(a49U$;TFdSJI=A@L9$)12j35<6VZsrK$X!9!"9(Fh[Mr\YFe['thW&ce!VHmEq2o&\Dn*p^dQk:f$8n'T,PZr(A
%6Yf'lVRX#bddi:/pN,d%A6nZ8\JO_&HQQY.HC+s'g:nEB?]c5,_]*5QhrVVa6i%^^f&hgYGJ)5T<N&.EO-FXl[!7T!CWkZo]>_B7
%3Pb]NY4P:J%+k7hIY*,rT6Y"e/U+pq'jYcm*hT,_:jE=G-'B8e\!k84Id[!l#)E\r(-AHm6`P<3jkub'j2fC==JsG+`F.`i^W.Y8
%>iHk10Q$D7@^5<=lWMoM=%ZPY:2=cAs)5%BrHCK<>Q7CB$TIaOZ[V8DL47FWp2%caW5Bc7;mhWLef]3]\TDK)C"e*mFKj=U>jL:D
%Y5ZmO`"f0Wq0B,_pM<pI\e<-hq[kPA7O\,\7*J.;=p7mK+()lT$ds);rjg`o&&cs%EME*_p.Y:m*&#IJ1c-d/OS7Xs8FK&^*l:ub
%bJ;kee)ipL)F.MZAo!d8LW()7j0:g3jOM.P)TM&NWm_55*@sUcfP/r#gH$6=mX"$gLN9QLPHQ&jqg+e%r;eB,"8Lb,>HlH=N=cV!
%>25j7do?PA(4CQ^VfNu?T0Jg."j/0#+Kei*27LYIh&f0+^dp4.dZ=>#PE"C,N*76s'eS4Nk/(=\r-`^u\PehSk$4iISD#::^qI>T
%*J4g(*s>lCE^K.sbfO3\iKGG=.W/&3U+)3Kqfs#9GcaPH/N/e6R19/ts!t[!Tq^7>i3$\@I9K"1W`k^hRUq$`EE4Wg;qbj&j*(":
%YI'WHN,`p5j;`B:#Gk*da2)_!h7B+d&0F$.Xe/i[TkHKIju@$-[qM4'd`Vl4^#:hOW@m@4[G@Lc9H/pb5?7Sgi4bEN;B2giNj\+!
%BeMq[\XoIBZEpn9KXeRR\KU6mKT_lSEf7T`@W+=(VQH*!k'pNjK@:tg?Un.BUBHg1PeIVOhbHAY3%qQPqoQ+1VhDWF2i`'qkimYc
%clAf`kK)KsoXhEYj$KfH'FjomZ%1$5ruD=+mpl^=Np@A+1iRi]^p*,ed[;pe68lKI+*b@3(0_$dXeXFDe,M&G7#k?p.c':`XO<MC
%'a,I+#^/B<q3#-.S5?ebGuma_-ai757!G,M7]/;n5kXEmE?](gLWAX!GJIGa[<3[SWq;[FhKRD4Qgq5QW(h?MHn(]0p./!ED$MI.
%rmFSub8"Ym#0#sd7P]Q#6VX.!_HWAh'4p@Sb0tTX7,<E&p<>VK"(=,%icaRj0PoW:D*s1B@IM4'R@IB9ESC\W2gJW*Z&9R30md8M
%"M<HVrNN=UG4s#.$*Q9"MJp/6Su2XgQaYWJWt_!#[H=l^KcELH,aird:HPX#)jgRkB(WFs6&t90#6:qE@Zf%JZBg-Es*>h9*rGPR
%KAg6rdPB6uB9Lcip3SCM=*?<4ESAV(7@Ae-pXeHLD8>gk>[-9UaKhrG8n!&fl$O]>rM]V,\@^2&9KQRQkC_c>lu@n!D1ec.ZW3uo
%Q)Gb1nVfIVZRkW/d3b%9erVnKeF\)!-'OESPLfN%ZU.:HCll1M+.Qm:S#D)iq=#Y6h1:u^jn9f;R:SasQ*-)/,!,N#!6Fd-Jhfb$
%;tbhp,o]^=V]Sn@IG61CK5l'DQgVo056?p$j`Wjc3MfL5`4T)MAfjb2FH=^]-$'^*K'0M-.qZb1:2S^Vfjlp\4R]l!NE38\LDm9[
%UD7B?.3k*OcBE!6;n*;_Ng"\""@[_I&p4M:@Ve[N\_o5_FL[hl"M/74W`gm`VP13CJ=ek=/l3?Pmlo-8d()EcnqUkq:RDZ[%6V9"
%alW\;K?T0"SIs(fpo-(/al\89i&lbc.*gj4O5rEho4T>n\;odc^@t]'<OZ,mo=0gC[Bl%nkg&5#9^@*JiH^CF;'+#96.jc/H62J>
%1m8Hd%8!foS`aP]%I:O-,<q7f4Simr8^?A"FHLt]bd64NYiIn[k.0D%dIYpo^$C'5B>chYAg[V304%""=%qrG^K0s^`?6Bm]M;*f
%o&QWj&0WH<#\G(/*SB1L@R6X7asS.rf+[LD\nAUXk>c3(@Q2mKAu_j#IVHBsLAP\E'd-8eo.$%<.JPT-n1n$0`T;^/hOFQ>)Ga"-
%gCEu5%`=4>WbJ2L"[<(j0*-mP-:.%?WHl*&VM2.p\uMCSH"8PXbPfucUf+0hLQUsaX-Tf,WVsS$(?W)U$5iD2NDMb@K"Qn@4h40t
%>IXt=:K6O1hJ@VLp$L?)>MjCJa/e]#5S1)s*%M<d*_=_lYg\n\KfO,LDY)V"hf"6fXt1IaNmF=8jc#fcEAQ(_Q=OTU=5W7RmX&D1
%bqU^#1&IWaI`]`2Z0)bIhNdVTr2%Hm(V3MJJg[1d4VQic6th=4!"Bhm^>J`:ZMJ'tI]>Z9=64H#J2kh$k1V'!nO&nt@[XL-9t>RR
%XrSVVJ.GXs9%'^,Vo+/4=,mboEt\52?Y_e].$!(NYreRBUIV+cpp/2"5k>M3ZL7OncK5N)5M;5=bl<gl&>*\YOHI4i\OmBD0]n?2
%<HAuf,D5MC1)O)Y,A;fZ=m]$7V'i+KUSr\j;;9AOhQ)FMh;<3)GFLY\L0%mbpRSFFKl102PH/hK<-/->`mL61UNK_1'f+1JX7\;D
%0Y_VgQ"cu;-WSEo]A^80HL_duleig<(TTPurG]!<.h5Uk=2jsF]l<+LP&/j^kGD53HdaYX0P'!!;nFR[4PXpb1];V<dm`9_B(BBi
%aiK;+/T2kW_,7Soqui%d&+&cV5/'#`kOL0p/Hp-CS4d_Y]""p?>]ZgFpk^MBPK2n\ff:F\`!Zh(rp_Ef<ukq5V`XSPOUANLe5W)L
%#5'bn0l&IQ:7*KkOiVX8m5Z]T3f?+_X>,]OFe.o>JtmE_UuMm/e2&+XQ&[XS1hN.X3$lt?j"/<$I[hBja3TdPc]5>m36j_6M9g8&
%o:5S<-U'@7T#u'HDoq"MIVa?'RhRj6s6$;p%kd5[r=XWIe^l`pR42qA9&8VjgV>c&[ggPnWBR?M_o$[O?f9m93/mT]I1PiIn0JUQ
%E!b'Ep_',i?Bh6SP:*''o.RDdG038mLrTk.bhA>sgm`+Ud+D-aNrS]X?G4,NbMD.MMjOI$H+<\EB;>L5dJqn`s(q=W2YoWWrL])K
%ccZ/u"7PiOpcKofc\]t;s$s.AWVPiJhS/gQ]2rq-^O#Lr(LPD;fDM-$ci3>or\!L)If&.'qn%&j`%X:NnBHl@HM\I9=o[g5LO<#h
%'A,lHhPB/Z0'.9*A5;Kc=J[;E$%ZF8l[SomO8//SqN'J`s6qE7p\uIfs5-`O8*Qc(hsUL6J%=Cec[".2GXtha<c<9X/ZS8&E;);\
%lLAJ9ZYAKOl>7ban:,qqJ+rs9e][]jhS+:*mSCH%l%)ueFa3fWp$NXn?X!b`Fo(sbqmZ%.3f'1Rh>#Oh?bO2Nl?@G*hu@`kQal)U
%`rD$Zs"?TM/%>B:^Tec+bVuCI3Fq(nQLA"YFgi7gO[E\Gr-rsbD/Hm@`T8GX>'<*LRg_VDmB'K/!qQ5"Z.p$rQoeGU2kmWY)9[3`
%;jIc?j($P24QrJFlCHi]&CV`O.>m@C92\r:=_d$C>j<rMj[L#m[$Ad.D)(L>\/!QN8^l,cNTc:'0!%";CkL65)u5F82<AG,V+FCo
%&a_gHXg7Y=6C,*!ksj`"fSMGp8a)$IDj'=q]-$^OHkYJ!B]1:qFg+6P''$-G,&R_b[qOO.V;95!q^4sH?G,/Ioqj``$]Qe`lZPp`
%mmsr?b.MD-\)>DtqL&D2G]Hru.04jaUruXeW.6'EIFrFpa;%[-V3Khj$\%J?.j>4ba[\Gg[5@?#W_t"DSK(uZa;adKj>gVcPP6W<
%9\r<H8*4sr%^%@p5A2t\l'e^(5nn=L:>X/GM'H!h`_ec^-BO6j"NcshOS"a'musfg!.dXJK&ISBhGJG)m:]Oq6bLV50XTKj-'BmH
%&\`6o47F+_"Kp5WGs-)Z*RW'`U"\N[ndKUr::NYcEYUJ-"pTn7UbH[\2^5An<pQkC;@\nT2)5B7WQpr.-)?!jQRO<*"P$N/E>NBm
%a.h`)LWFsX&0-!t1#M@^WKk2Xm#`dP%j.IN(gSL2BYD.$7ons'N-0bC2VD#2dsR9t=EqL9_N@E!#?e6CP<(JnSSWF1Z(#XLOt2pe
%TpFQu3Sm".aRI?(Q.E62,I/ZWM]=3E)\oYopFf;tPQc1=E\8\AEWH[Y2kf2==JN^=h'L7G[(BjR`Ic,+WXetWCSG4baud"bs-*\Q
%n]pKF]1_ui\m1PD'D%8dam,&^f6!mb=kN,orGEa-lo(73n=F*dkQIgl38UI+jAUYd'^]D0L!;*tiC6cU$mM9B(=nSV"Z8<j`Ysu$
%c2+s"Rj_Hr$jLU7!>T2+`eb,p?@&05mU[;E8p_-o;b&CeRIY*!H9]T[^aDNB.&dfl"aqQ/8n$,EA4Pm.HF/</jg?TDaK%93/OO,<
%c0QQlg.>#')E7?LK$fb,Pee+9.f,,q>70^HEZ3-%b,c3*MUF?>(%jqj\g4K0WQFU+P9'N+_CoY`a992R"aQ-b)O`7]+9G$>_-IHW
%3br/`#K*Fa7/<2;!MM4;="]_/'_u;a-A(kYPc_<DWeNBhLi!#F&;9>&(&>Z91''c/Uu19B\WsrKfnC?RQs/QPFt8T`N/J2)Ju'kQ
%<KpI#DYdpbX)&"XAkJ0=Dj<EF2.[,P["G`Kf8.h"G,Ga'g(LpsL-sHAZ4lpnMb+4kUqF)^ne"LWM%"5V@;Ki(!6WhR;.)hI0"=`$
%0Z_\$jbPY0,mBJs@qrIOEi<:unRR3om&p2@LkeSs%a?&P/IFB+I=5/>pPA5gcR?kAQ51_=L]stZLlLi.,=:\Sd075.DO81G,&U,"
%ETr$F)BsGr_*09Brj(E2ZWp\8nr10L&Y]EOb,H55N&uq\ZpLRH&@=N1LfMEG]5ECR8!t$l=g7.`7\qjQ^dYp.)b&t2!`Z6mcO&o*
%6^Q->4H-&]ZV@=0Lm7&[aI<l;@Hr9BOl;PX^b9n7Sn1&41BsTg7+t/(+iSPb.?UI$+br4_*@HbNoP;e.EV>RZB0e#C?Q*O:>iMEp
%";(oW)0-Pi'*MotI^I2>UBYGI;NjD>KNf[meYED]CKF'R__T6A:gUkD29Bs+LD?e>#V=\Po!$-&i*;mJ1/7B"4KBJXo$NlrYenCJ
%3J%fsN[`B]:CUfT'mU[_*:/(ih'&bOp``oPUp]T3:>3PJLeMhQ"Pq\>V+XO)c#`>P`D1/gPqOiMPd&jq;.T-[h*l-Hl%"@o^rjT>
%+c7Qm.0mkP),VL_j:*e(12S!!'H*[Z0$U(AOb9;O`Wu8bNa!=&I<<%Q98ofB]MW8Y^,&"Z$63R/<Ora-lJb-B[I]dK:^/-9>5::C
%lHhbiDOss!r:4?!<!niu<9jU?jqs!,5RiLsPH*(njhG(kQL"<h^<,/r:"8ULEg'e:i3Rn!(Y2#cUPum.%7aiX^mFM61+kQll@$3D
%e-+=>ott;J0,a+^;Cu*EV:OJ@6C2?+ONZ?dNL9Zh.O9B._OqXo*]t-V),A`ZWb_NmO@l,jo&q2W1adfiph3OV(FmiG)R\2\d$k;h
%]#Abffs5N-;rCIW=:$Eaa`58'dUZ+RZ7eOMA3S";#-*Nm9%ZO#QJ'X-DCXo_W,,U&Ki&S!Cg4HT<YdVHX4X2I/n(0';Blfci>N;n
%AEgB<7ZhN-8Z)o+2/3onV3nI_]!.O^&Q1uEI6;W!h%dUUR['sA).HTYMH=ri&&"#S!iHUgYf'oqM+q)#k&SK4&kbhE@[:fqA0_md
%DKqT?\WfR)7lmcWB$"VlP%q1;&Eub#YTWO1CIFu(`[8.D6l3GV,@_@V<`^rT/jX>@;[$\QT)Yrrf7V.M]+)=e21,fie/VfW6aL^/
%`rL4.c0K!q_=q.O86-VS9iLDA)sS\H+fZ2*.b*Oth-lF;YaT\l`569>%:s]]MIK4RZ?>gM7lB?I^;]2C(IFm\Vot*327*iK%&,Z2
%6aL?pajq8QU!*mE%n^-7-@0K7$'r!nI@_7f6_j%lbmX4c"dn"bSe].L&C"kPP>FG!WhiR#R)@.$mu7)PFPlsr5B$J_L\r"(p]>!Q
%o'#_hh-YU+rnXV6hs>f33:("dr8HDf]m]n^(LK3WS9cb@M&R0TkrdW8ZT8pWM7":5LAF5@?WJU@";kKC*[*XW>d@^YCMlMc'2'ei
%Ri3/r%8))g>a0f@<!P+MJU19e?)gJmVp'jK6h.WnT7aj$$U[nk7Th5;@\e!?TLZZ]_Fc)Xg(cn1GV2]jXIp^qV`!5tI/5Jo07X"t
%X_jS$0MH^Zm0tgRR7/JBJt4PJ[T@'!SL)ZDo-Rlo(?m2(Y@)L#gGOLdkfCS`JF.rsY-&o';l-CYLA`>arqA!E2SI(N\VOZr+?i2R
%B%amt;*\'IoJ/M$r'>uEi?g>uSfG#(bXj#o@Ko2dW%_3pM?DMQ1URT$P4E*AAUT16&OecA#87TeU0fEm8!QLYq/YLV=[jRM`0+16
%/(6?2Cp,"n;4g+X2C`l3]Sk+(8ogSPK3Q1.V)W5JM?q*lA2S0P;'fD#%E$1.#T*7<GUo?m-NlRsXfT+*^>:'kg\>4J$+-O>=/N:(
%T@tf]ah#NdTN2L4Qh4Q8=CX+*78-SoNTao>+WBn3<7pN5"OC_<cD4?2e6G*;3a\thZVP`Pm)@=9]t3pu]4FVEk*c%M$P8*8'EX""
%Sg:XbJs^'Xl3fEPlB_N`BIcIF7\*8J_b.,M^i"*[6=lq>P4bMDAuF/"FHM\kob`f4Ojt%J#&43#!&^JX-.]lhJr3f'VaJ1NKf!16
%?mI,Qjtg+:;'QjABE4b6+KiRc=0"NA6A&>IUiWB^QB!Cnll%])mIDNl&3Xp5WO;mnUSuOB[Bi;.((SKKnOQOVA.akS"UuU]<cm*u
%rs3AL\3ksq.pD"pIIE"pf-6o"]iMb,qT]/oEkoh^XWAf\J.RNBi'A6=T]Zh@?c?93mg(V#6l?<*ouaEdYD86nX@*NJ$+j2L*QW("
%<*C.el<P!j%;N*m;J<ad\577<e1N05$`7G*S?=V:dK-Y@\2#KCTU>p8IQr4^E,-h#Rr]%m!kV_@4a.G&F\sVV)eH/(:[$h.+i+N^
%Nb+-H56j&?#.&)NclH[Z$NUlt:1kH8!+SIk^(T8!B#0la_sr\#&Rh@ucC-3b>b.s2=bT\9kgiof9II]Ui_B8\L!76]:7Ea.]WSq`
%D792U2eKW^1Z,lBQP.+c_dE5%eTVg@b5$c]0DZ)0IT4\#`u5IK+>o'u$Yse,k)U/J;NqlU991pN!*(G:U(E4H+9Gm4jPoO$+De:h
%UBZ,m1;aeh=I"I/)nSaeMaMI#cRPtb5#s]pM6N^kKc6t0Z=77k2GSKX9D-k*"X8#2LhSK")(o"COR`P%aCWji4OMuC[hW2[58<C5
%Lghto%kjU,Lh.KtCH(J(\.pW9%+>iE)kZ[q4p!2h/CFY9\6E<L1mnXr,#W8a%oM%17MXds74![@+L-2TpESs-j6`X'dF/4YLSK/l
%;\:[W?+HVPje\K9EcQ0f#&&aQK"2c_16N6p@Wg))79PHRcLK$uc5-mYbj$h'_;*e>Y&ehU^oA%cD7QLqgZ;i:#K1o,pS%ju&:!;)
%eB5OY]('<"X6OR]"riI#UJj?\j:A?Vb[!]&ZHAVd%n2JFWj^DF8BUDca+8;)(2op="Jm!`OV10f2cEu"S>Hp*S[hO-4"ergW$moM
%3Sa4aq)1"8HTH@^B8#')mDg3cW#.7h%-Kg&=hQlZY#JdNLF&%eCh^I3e9#Q=MX:Y0j2+O%($YT(?+N9OKf"P1?Y_F)%+,r/j_J`*
%<(Fk>%D0#"=V:4naW?<F#!L/_pP7bq&5JC2#oN/Lr;p+7;3m5j.VtMZo5\pZQBtVsY_CA5A8jj,0Qo;UY!mZGnTkSoK[`gTq?i].
%>D!?CH;CeY`M"*jC/Q-]FZ*S=gLQ7/5)>pqdi<+;5UZ?-mI`fTnjG9r'tDEm6UF4m*m9O)dr^+]2H?$1Ft3tlpg`:[LY\HYMP\mY
%r>UWKW6=`Q:mL*%,)lEca'Q1s/;BN=\$!`9VLCEQ4IDTD;khIs]kiFs<[1BO7?CEH<(,Uf?*W\(.+$$iX/f/(W3,?X/jI!AieP(?
%ILF/i&:DmYl'<C`X_P>ML&hI&3Yli,\.qc%fNnBBq^J*K(gb"56-XrRaVp%)&buEgl`I;$'sIhSBFYG@6\CPn85LqsMl&;G(8nX'
%U3pR'dgYdFm-0U^'[)2WRLH2WegQlFI=%)Z>W%Tj@Z7pUBPN)Q9G-s&mmF;[.q;G^qda"L&IfN?9M>FE0VBa)k/tS;J^"F+)gKHb
%>NDe.b?KW`">7-fKK+pl>#^=+1[]nfOej;ofN4K]*'nffTJ#iMP0LR^E)1TM,W:8e^PiZo-mtMHfI,U"e4tY&@tC9h'8sa3ALGr3
%PF;Y@%E?MRh$SjQ\1!k`MsLgD3lLkpB6?>7WOq0J1.I3&mLXb%.U822g7n#hjInu"AV.THO)ONp68Q2@,b_T+-o2Q'W=WQ91_^bV
%T.PICj4"fXbVToP!#17+.p!nB/WXTWW<gUSX>74`H#oBhBiX"qJVf/L0.dRZ2aut?GWR-lLSfSYdLc3MVGM"Ep$k#1&+`JJMHJs%
%$EMuh>.WbGFq9=e0Zc_10kePi5M)+K,e-!m;^^&BWe>Z5O'",oOYs/A6,l;PTb&#k>'K>Hhf/E,I4^@<(4@e"2c@[$eJaEA_oT:C
%!*o`g3$]j3$*8<0P;.rF)"sd.i+$)SJ2"$B5M_G)]19d#:^aPh^[:<o.!:Z8?ic[6b)!?4-'&rV$Y$*Coi>9?V+6lVLS+`P!tUmf
%X"l3*h25SE<P]aMf4Vl=Q79h80&L04Bg$5#_Unt![pkF3\,H:7emKATpUKt":Z&8rE[LaDf!`jL0tjjoP%<1JA9&0RB\&4PHDk)R
%ZRUr="T(4NJ^h)l&\mjde0*NrrVCB_E"[g_gd`Dh$Db67EM*NX'NE%P1aQ9H>skkF)F>%A=`Z6N($0/H-7GTD'H%:1^I`%,jA6E:
%;nm$K)ALR%`G/iZQr+U^YVfk68I\reH7Lm'L-;b87'U>Z_l$<2&<IKPbViG=$Rlo56>cL1_I"45ER<<NnQ#gC$trM(m4f/f_&*_i
%[+H]K\nfgiXJ-iG3'f^sY&kZa[#q#J5s:7"YUQ4fWM3<gg[%4/qME]U0Hus-/$rm)__B[e'Qg<^87'#_S#>'Ia)':sM;C\$f`Vl6
%">Hg2l_p#B<ch+4+>FoSj?]u,!1&(Gcjkp`b_]bg5eWrg#Q[ZT%TE_rTOHU;^@u+rj_3Uu#A4Y89R(]ZhB<qp!,TNR!GDmo[UNNM
%0%OG"PCg#FK'/-1(q1:Iq2"5lBYf3XXUm1t4Ko,Oo2hT>;)iGJM.S<315g$2U1SLu05AH-"\lHIBFI^.,.bQOeY6L+V@$-@i_lr6
%6$t/+#*5VhFgRGDC./*f+1a5J1L%*pjG$u1[$r4E5Z*[QBL]bbb(Q*qh,?'mP:.60=dT8LfJ'$IUIid^"d>D69fum@MhPYsX[KtX
%5^6+fdF;'Lm7fhX9G/1W11Km=39mZNq?#\Y&T=Y!R9Y'f"k=*/1/Kd$qBfP4fbbKZ@eba$/B"0VmXXFe"5Y>3l5%^4'.kpgmL^!H
%]RP+/+/DAlpip-_9N=q==jOV&C4%3r+A->6]q.q%:Beha`X?qG0rbGWK":3lXH3UR\rmD#!aQ$R'l;<On>YDC+Rr^0C2<rC,ff2:
%bD;GgX[_(c>F5V,1"=]8i1\PC860$WAbYSJ2N%t%We":R99<6m#4l<`2Q>mW7e299$O?_;!)=$hFMep5(,a#G?ps!QK7YpJA1h0[
%U6ZE0&[imuAkfPg>_ptG)T@jXA2\Rk;Ur91e/^T=TNSm32:<k<AbRTQp#Vj4+MoD9D5R=9JO2gV.nm:H[USSe?5T:AKISsg+KO<*
%#IE%-f*_A(@!DB(4D]N]0*L>M`T\YB#Stqr7K1F,JfW)r#T[neU\KWHIl$`6!hB<5W`T8r,cKqBT1+iMZ(:8n[r&(U0CU2;>gkIf
%ps,tqSP@=c9a)ULA2/dhH9a5bRc5bdFM27D%);.LA1><;@Zgb)"YZ",U=c\Ya.ih>2,k:BNAagV`o<[$q^#8Z*,pSa!N,.o2i5OO
%`^_kcTUGM;8qY\o8&El!Fhkmcbg$cq51:5Qr)?T4/>cf`%:'_\kgX*^lP]tXjS+1h_2h>B.U@g+A5K%m:@&IJ'Z/_[_i<;A*+R(j
%4!T!<JJ:WuEKY:UZ-?(?=pg.?+L$ZnZ__>pbRG-q+t;&f:l$"T8d>"jYA`eVk^c(;L5mo[ALJE]`AG5Lem/R5ARZll:jMg`]N7*6
%YUQq;[f2p`<X^'TG4N)[,<5qXi*C'9U5$;If_LC!6?S1\Jqbl#.mO?')QH9#pCdaT>CCajqEbr!02\C=_5gWUf]O6+1/?YTM`-mN
%W#t;ao,Ld:Ttj1^H7jq4r^20'T\^4<=WrFe:o\[)hb`s=<&[G!B\^r?AHo+u9pYu-@'L=q7?NNIqNk%-#/XK\UfuYp:(j9)8(:F/
%?t;nV)LOn8"?)?Cn2dOi3WMPjK:3BR-#BEVcTD<R$&fu,.\R;/&bqBf#aii8($.(`_)O!'=s@7QZM8NB&t?A1^6s.Y:k0='AFGC^
%W+n0_8@WRULkeQJ*54*&9`TXZmJoc269u(Q&mSa-p:#+]<QM&QYRMV)eD7?'@%M"G'ubcq_l""]U\]Juf>P$`9nh%"/j_V'iH/&#
%-R8Yb$S00Yf``*cE-),BGg>e7KE_=J45pr9%"&<p&GD[s6"Clb*,4ji+Lr0Y8HP6<_B"gH5=CGjD%JTZVar-I(L&%M:GQNb"IL]:
%4fl_la?\B<R'P?Xr,>=^0_h=[1(oR(JhU7`bU)j$:h-UPHBA$U1K]ud[t0LY49u9U"8TSl&k4\EBhm^V=sccW)a$9%1.Ca'$4mB`
%![+L-oP(HQP5to2kV^iirKl^L97!Yi+T10/'9`55p'?1%AQ7c&SAE=Ob!PPUNs!KCEPD'qTgmF_&^V(;$ahYO(hU)\h$ENV*DNV0
%495`i^*B$(pkBDH6Qm`"m]]oh#rpHaFlhY_HD/rdP7/6a(Bg%BkokG%Qg-[EH&0@N`8uk+ZG>pA-j`2ifG.)GJV9e9#PfL*G,N(5
%U'Mkr'pj'?Wlk\<I@q'`<C1Oo:59_,-hVcgQ#kQ^e_3]#/RK'&DMgt9W[:3hM"%&AFnug9E6%Ad7uRP`6-Fh`4kVf'\,s^+MM?rf
%UgRND8bNO.JhTIu/9mgC4m_jq0]Oh2rf9''$@:L(nrs#DOBrjq!nIU?nCufdqRN>Gj-USIbH0@]K%'c+7ickiNaloLr)Do`L@fZ#
%40#:kHn#jU%n0WD;l3X/m$a:73j@O8$.Q=[UM6%)'4<'9`<#Kir/TEC'g*6@rJ=h,VS3(\msjTNGNssr8O&uX$YY^i%3?Rb7ANBs
%6`hb76*X#&Es#ODVn7dS[5\fS-8@34\W`[*C91EXLLT+-LgK@4!O-%OF!4F9'Y'78>gUj.T)ik.lA2,8h%#W(?jB+GNT!sUC#LWS
%N-RA<>S1W3So;X?U-SI'=9RI;fOA6F#=@(c6M%8k8Xc[ad)W8Q$&GUY!,"H0YY?:@.Za$@:-=0O"]/!^UNcth(o",@I%\I_KUO>T
%lK$am_"Iu#q,*gp=d<.>aJo@]dq0J5b(Sf>h5.C-,;4aW!@gHULadqk>F.iQXgD<'qPK'ukl?VF@ZteC329:p$Sh-Lo?`O&";H9i
%5jubJd8Rp-"8)<urUlQRL2%:On7?D]i6_mhi^j!O%(.p9b8[*)fH1,SI(?",3C&H0lR@R=#=Um)i(L!&"s6eP/*Lds=p5[&CBj![
%\6t)9M0-3qU0V$PlTh(.eF@c1""jeJ=k'(i=%VU;e3K.*%<_g&+@V\U`%TfG7:W_K=Wdi),3CV<PPGC/=MoF,J,q<@4B:5JJO.\[
%<?[$.7$W.qa27:SfU63RFU31^2q7'da<lHb:dLTQ.b:[P+JKRjKTUmI"6`]5>2bTBWLXOB?m0urUN:sfVBLW>1Q2?&MO:@Z3&sG>
%!%)+#>+"O\r`\=D7A278bJNQM)`9n(/&M\On1h-VZ[lk^Go1\C@Z%tZFM&9;lQ0+n24^Ck_+@(OeO#dee)W<QV6E<LCC"4P4"K.C
%W3$JX-1d=T@X(9+nZ6UZ+A:5F9bptZ,`"uSet@d*19Fa#j1n>kZ<kUW4$^Of'Rr5tmt/&VKso*lFU<Dp]7ncQ>%Rj,*c>CKK,?Vu
%&A0'A,sBtaJQ[(=cr<G%>?[.G<rm4_`ag=>VQIak1mS:1)qe1UKAltM_]eRt#484?Ahq%D9?/TW\cf-9P^><>!tPcZ;ouB]e?F;m
%:?K;+`>R'AMF@UK!Wn(C$uIF!8E@V"XI/K^9/+kQ?HA'PU>Fh<#4uR9:2q69pF_ae%h)LVbD?#@KKaZ;&cFsed8rHWo^Hi%WQ=!;
%`$#+<#il".a/D&UQYFsbd1,S/loE.-<"e-3,u-r:I+/i]&GH<7'&H\Z:s3Wpe.PK7d`Dkg"ofA!V+o16fGG$`/k[o+FQm7>3P,:!
%K*),)dkICk9B9;OL*qVU#U>/P7Jbe;dtA=_/@>r7*>B5')KFb&"YdTSTf()nqlpN:#KUt>'.>SibCgrj2>C?k(pH$iml]u`0e#::
%64@:uR-t5Q]0jUD"l)J.7qY(q]?t"KW-0I+0HXV84to9%,1J+B@SHl&bAP9u7W$I^LC^`l)-Hug.!aY>p][TK0_i2"HN7"G5Yqn6
%gLa=-7;o1q<9#Ja7c&790A)uf0#TsOfIqnO``FSd1c*e#cYiib)>]!G-$Y=Klc=f1LlcCL6ar$KULGAh#d-ZcjAA8KJDncH89JQ&
%0FtrO1-ISEMb0Rp;qH8)mTAlE_!\4_oYWII*7TAQ#OjV7T[PN#I9O,m4"4bH2/T?hn0Ds),CRSCgbOiAjkNeu5KtY^2":cB)^8c+
%%'K7U7j;6Ygg:hNWtB6(N4A).bV/T>;p.Q<4fQ?*9H\D0.!;E/14:ACW+iPZ+iC9:Y'J\@jtunQOK_;H:F^]3?<`*&GYQ_.n1?<Z
%Xn7Eg?lNNq7I;Ib:hk8c**g='a2a6:F^5Vjc*0Y:P/@=D(UPh6<G3ifQD"uA@&bup7KM=L.Fec@5ZtG)N#D:!!-]'o:B(ZS;R9Xd
%0k1``T\R]OZ+>lCi"o'X`<*Sd(hVTsWl8NmAJl4c@6WIpJDu?f%P\ONH'(QUJFfu[kVe)1JOiLgl8U$<-\)ObH+6eUX0R$D+p5kZ
%H3".2W?pP.J2FZYB2Z9kC:,c-6,m"1K'4>B>#eZ>p)'OR$uJurR1t9Kj:ESLl?cJS:^^UhU:=pk+a3/Q?]a^1G%!8Q%S=?Ql/Bl(
%/I9S-*;WWm)H0*_%<(k=4\S,b3p77.F]mBIW6,[T<,BIiD\OFM%1N#.piG9D[ujT\"bhe!%,4,<&G#0Fo)*"lq_QtMd!T88Gd3eN
%E].&0/T9-l]M>#pA0D!9$PsJ()k#E*[@G$d&@4cYg8E?e$\ISrjs0Jp2>dHA2E\d+o2*H2@`4F,5E(,2UKWTfBnY9[p5DFllQT"-
%-j06@:^>pdefZd,7tD.\JrPDZ,o<JI%g-Y7.+BAPK48S!"L8e(/"?sF;73hdB.0rmPJ1c38eG2lKr8e=/B8""F6#?UL+d<T_RLQ3
%Dfj,P17Z/<VGTh4.*NUj!,I)pb;D!FUStL%+gBml+qb?5IEs/-0s=,:=AEJW:PUPGfpkMnH4f34D=:C\aKa5,#_oFR-Q6dW.3]'A
%N3''HPeUX?pV)4L"-o0!0,G"JSH/E#OtF8V&U90X3"?J:U1u?_I#Vc+)kqeBIYL/EP3*-+\3I'AL$CIKLKb?d%;Nt?L$X$X^\$bP
%og>mZTAJ:SNEtL\qXsSirU0*c],0r)^A^amYbnR1ppVn_^%psgp:EP;p%G"LqXiD.hZ!$#jjVuP(Vec(_uIY^Y7NnrXIME6YuBGR
%WcnBN=rV09AjT%U!l%!F0gsl_2kVc/_(:dp!(L9!;[,*GSX/Mq'jGl+O4alu`JCbJVElT4>DVBuZnnLZHHg?s:hl*$$0VP0eYrC8
%DBsf6r'j(GV-MR?$u@<gpQ'V4Ot>0W]LL$U77JaY_VQ/m'P)sZ%L4:e"nG"s;?A7#OJ+3</0PKe.`qlrelqle-t>NYC-s1,Ra\LO
%4g0DULM?[4?[jXmG+D\K?N@]-9+&koDZ`6>'hdof/Xg:og8"p3U%M5ii(Eiup+MA&OT]nW<!RM!61`<<Me['<5m+8I+Pq(H.18j@
%C+M]/daJ:(%%/3ia2kh73Y"aM:s:%MATS:\0=7u]UY)AUYs=j4@!V91EREHrQ=Tu@br[Os]HPCfpgBb"6]]DeSngm;6:@b\d%7m"
%?q3MBL:F$k%?f(D#WE0#/9J>=Wgc4f#ht-XX"_O"9Q'&(/@`>L/d()F(o*1W$PLPe!,FarJBCRYL)ipo3OAR8JCu+LO.$[03rnD/
%#)2b3ZIThbCnUV,15d'VSsYR)q]'nQKY&ds\CE2VUW[-1F1T"&'1bfXd'(O<Eql>._"NNGMSW]]M_OK:M!T,M$+_ZNY8M4,g'g5R
%0GM[cI6f+f=@lf3Tf:jCl_:kSA>pN@lbY8LV[o<>Lt$H&EoE3$M[S@%>A7XQk'/Qq"c%hTHdT2om<4.:&JZOtc`=(JBcs@jY"*sD
%!P?-%jISHZ,XpilKLH>M%M.gETT1;,WJRWml.`JSBk@D9DL=P:1f]/G+WF95i4VTu7C$aR@Cd"I0$[TXL-3/W-B`8bmY$9`TRpmE
%ChkcRUVO@;*S+>Whoia@7uj+-QEXmVf>\PJP1-jR8NGKAY2ZRfp;"jCBuCQIbX+?C<>O2XJP4FLXP#PV(.1fIG)mfB%2Rq"$^g,@
%/_BC^#i6JZr($F<JWiZH5*2(c-j7&GA3)!]rA&u[+Gc2_a_O's.&<kTLZ/V6mY\q)khE6XS`$;I16[TQ3`WPaC>q.r?IUBN],EBR
%DM=`6.bE?p/SR>4n4dF+keq:?)%%JskT^NZ8:g%oL,,nW(eBK_H!X3Y)sKdifMG;)UJr72):+BtN1'tA$.R=?Tu4jnS>=$/+FBY1
%?ia1-;KK?X^dqM#e)2l6As&lc`p^saOjUfBPIdK&>A#"9!'iO9*V*k5]r7'UdTdhfEJG@cZ?Xg?jcksh7EB5DOeWDe$bTVu[%kLY
%V#([f7D$r_67INAOEZgh@?B4Y,q)Y$%_Cbk!h,T[NuWS4a=>MXX[QLq8<R1<!S.=Y-#r)o>9ks@!qLS50p!ekRLioi7kM4W$.9'O
%)JUfP'"r+0/^/Tc5k]gkTK19T,3'lA/<IgY;_=_U^&Xj5d`AMG$:'5J($Nrj&<_t@nU-o6rP`/aH5ka6KLR9!DDtl@:'Yb-kh!pS
%l4ksB-X\7*QCb:YCg_eRUqr?#D\o@e'T]>^H*@STAIPsm&f*'_(RnC(K,+qWid&Qr&^q@p8=5i2:-i]K;(7$R(@4i2%-BtLKGR9L
%N6F/GU!6"bBjB&9[:>B++$:U[;:3=I#mnX#h=iV(MlII6H=HdbQHmnf]8.K.+qD3Jp&miDH8A2oXbMj!BFs[7^pU;:#O!6l"->9?
%W2QAt95c7qY\*M/a?&_i6a/BIZ,_qC4pFtuT[-55;]T_WP-G9&H"4Hr"c*JB7N][!?l;LXOG>,/T-HUZE#70\(arkt,oh`#5V*YJ
%"Bg,XEtF12pK:%m#^%6bJZTmgfT$mFL8rkDl9NKg&_bba)^r-BfjA=[g.XF1,9meH^e@jH$@G"0%?[5jgIYEj\&-`'8hXQZ/%jc\
%E!#WplpE%U`HL^j^j?9bGMiRT1(E+d^&3BiB7:R]'+T:8d4mLNDkqS?m_0fY2t?R1c=kO.$Y:sB*As-DKQYg5`<Os84>TO]iCmRB
%[*&$*UlIpk.ODY/%HYdWYGa/q@^6BXn6J[YL=SfKB5&8TV&fb)!?r;V)cfC,,pnq'HAtI*"]7go*5\\rHAR<gp9t:D*FW#i!CQU;
%+E_8iGj#6dN"cS4,(Tl/>oVtfg;+N?E$eD!BGIhX0Kr:T!MHN\Taq3'+OV-"UK8(d!%3Enl5eC0E9%DF$(?c"0`g'B`Nd8&61cg8
%\c?K7rp:G??VU<j6IpVAO_Z\N/!8#P>0aeFE_`BME%$'SX#+YZd!2L$'r+0.fWJFNA8I>\,OH'4R4ukC5Ym7R--liJ@.9NVg];Yc
%kYhs@-ciMnR&Hphnt'Fl1#L'ucBVl>$u-UN3%XB6]2n:WEj%bPXn7q^feP$J-l^0C[L-j!EZ9NINXA/d)[mA?oCKE3Ua>Sml$[A2
%CQ9\C:&4obC$@L&d8Vde`2I'QNsD<ZTSi7HQQQ"p?28-XO*^pr'?$U9"<1BQi)B%iB7+MLl3l-QL;0C`_AieV6tG;1f:3US:R[dV
%`eF8bV1hgLXkm1)+uSAQqAnOgZ)=/ud.t)J#nTAd1;ZqJd1,D)J.F%Z$6Z0J12\AGLX8I$#-nHD^<gU`"grRZT7H=#r2XdmJmu;F
%cc&d2n-DnJ)J`AY9q^GP6R$+Os3kXrKJZ"L5lMAq:OM6I8-;6*BX"g`m6K6h7J19!bHP&+j,U74Jd']K4C[_p2dSol0rA'k,T*.d
%EcJH3$+i&KRR'h1@diF?@YFE7^3$pS3rBn-"^"#Aak2h$GPQ'f6nDY[Wp?67pkN%-op1ir(_t!g.+kbm<X_?d.3"@h_5feXa@Ls.
%dg6"u)/FsK.hp19A2R&6^gI30$IV7VL$*8[XJ>ZR+E3I^jV>8-f/[A:TdG)`@0oY>,F<bt-dr0gac0@Z,uMK99O)??dU6QX;\h.Z
%@?%1JZ'DjmSoW5$(.1&u6LSoI+)%[=Wo-Uki,iKF>rno-NK>nFL9]86o+#?Tl\&%`GKO)*3sL8gYK@QTmdrd(GK>)GTXPs;_B>(P
%;UXJZ6oEF8aD1h/*q4-kLlB'hMkUF?R/e?e%%9L^1LD.$LBotunA6LDj[oM[dG9leSTQnTU?,Yn5ot8deK?bJT0Q!r22bpL:d`R%
%.4?<4$<f$I>G@^RX!P=*JSQ:@?msR1icA&X*jTV0eP_U]0XD+;P,1[u0srl%*5P+*!*493XFOr^Rh@0-jMaO3\qE/6NPrh-HUX$T
%IA&(dVDVm&!'l%%^+;'pbKPSO<3mfb/US:mT$Zgb=iW:[;PKV9,?38qF`DH2eMI<<)SrPDPl;o;SkI%;EZ1#VNr`9`TuKmKIRO\H
%R_JBA=YDe[;1`_?CiicBZqQl9!d+I'h.'!%BN-c@QcN3>aMD)9#WfYVb`?#GX@C",bOj[[m:Fe/%0A.Wk/[Q`LL\Bg6`bPm9`We`
%ihtt'+q]imU*MiXD\uc=9$/sB8-tJY4rdI:WZ5L-_:#oF!Mp.CT&.pW1_;?Z/c#I2V+s<1(fM!bs.QJmF?3g>FE&MsW)S8)c3V!9
%4/['-@tX8#+%QC1DRuLT1qJDBR6ll<6*04UZm!2hCO+0G=r+;@;)0:-';@TkpIp)VoN*iH#TSdq9$O04U9PQg<L)-]gA!pg+(6s%
%bFn?@o]I?jMs(s*f9GO0P6U^'Y,g#KJgW7)QHK&Ujl:0/U'=-*Ym(W.G%]/1De7)1/qNd+P:4PNghHaZ%u632FTu[s[r:ENTNA*]
%+C=LroNmYajt85Xlq6tb`Jd'L18/X64G=mSKo1e2boHYsZXdSB-JoioLsA)P7rAq\9k+]:=#"])DOk#>A,o1E.?(hAbpY874(prA
%X't;1&1=#/C?XXch>`1AY0:b0^e$8Sq0&$X4ajb4guD$MWl4FHMe8*246c=Q*6AZ9Jf7XPFr`C.rm8@5.=%0a@XHcu0Pq^$/qNK<
%h5WF(!%%'crM:Clm,@-)1Q^ZX6#@g9DoeB%F<T/pg1/Ft6'30C0WQ2#Mqs4!qhcYR:jE@"*S6[n_!/Uq--(99Q!*i!Dn5Ug%<bn#
%5h:6/n^co7P$QLEJ?22$JMlZ<(b?_q6'9h]h,L$L0WQ9Xi:%J'0UF%#0oiAH%>!&o#d*Cu:qp"ADFSa4M@sNI%f/.h"li[LW@b*=
%`Mo<fRr,?JTTI45o)tF9H6ar#0"tf2Uk$L?fHO4O@AguEe5o3nf#B]TSu;OcA1l4D"3D[Y,ZV(dN9DOd_C<H]VA-k)&t6;22Bk4S
%N)Xp%>8J[";j!O_'NpGRn["00-10:VI#.j:Al0a4q"#FRN9Im4H<:22?(Ql%Q&$/Z3G'JBE@_0_C(N8tT]]o@h8ec]VF=s<arG=X
%B]DEL+rA,rP(kBL,S_0?Pm!PdPYa'mcpVOY*C,*/'T(E#Lat$F!DKVMStsq]^?ROf=F2hOA(Vi8F7fB6-7`]<77lV"2:[NTl.1((
%kh;\;P05h,G('GE1Mb'Qm>[XHK=#Vj7Ud>S\X$JsaHFfnEW@nVog$a(.LU9'O6451Jf.0k$+u\B=V`=oV#`>4H>5p-dU7:QUW=)Y
%aP)T3F1@(3R`YK)lu>,^'/b$#R_I@?lkM].4Hob\b!bee_iDi%4b82>oi1n2q3b4!;hGN/4"2M(hg1(E"SS.OrIMkOFH7QX3?]&t
%Gb1?]"/`+pR4`CL>6XO(6Z3BN7q+RpU7%:?40<.H@(da5hFC4YB5e>i)Z^idDV]@Br7QTp&:tg%7SFVnphcAl`9IsWTjD?ZCjM[l
%ijE!TnY-pLmYIP$=YETrT\7ceeWnS4jU.cKhHgg.k-=/3"`dMG/Qn&m%_M$%6.MsC/;iKGkuGXBf/P/gA#SPGVBO#h9`0Lc&,hH&
%qEKpS6<'/CAj\GIMOgHjRDrZKWTZ+7EVu0FfJCo7;jQCFl9++W#`f583.nCl?a,L,o1<\Wc8#md-D$+H8]KLo>X9<hEU;&1b:@]p
%dK(.2U!FG580:Y.J^oplT[]67*(W8!2`&3.:.E;e"JPFF]9QLR>qh/"JuckU:`O\;>1?S>nN]gp?gro5Qg&VOGhm+B&[I5qGlW`Z
%/Xn^`Sj'JU-4WKRKJBr@iXMc!D1bG#.T^@nAJ40fO=4h\,S!a)_Q)ffip^&(05\TO?4=g#BuG'K'QRguVZdC@g'rluTT7=U7h"r#
%(<\[n;2Fh^U`;!(`9Hf$)P@[u'0lqIHfkneco1\-rc#I$aI6o:i?10uWNGOGbYM"Ngu4N2I/0$j*&&YdP&/gh4\s=RqU!p5_.-#h
%l!P#,]bH+]>P<$?3KROCPD;Mq&l$'u%Yr;t%4]XtOU'cP3')+?%e$0+T6\<T)?TJ;d"]^p^ko?ICH+]HYXCFGiNPVhf%i@(>;XR2
%;21:,3Tgdin5_Cl4rD2R3sjg7+:Ld?OL9MS(QL[Oa;=&^iF(LtqNm$k*5l&!^A:,3c;Wc?1@^'N&Bj+LM_/9qO,ZMsHLQW04?V$T
%`YUhhb^AAQ*BMMj<F.@RL,1/qSi+R,YF.'afF)_oNlssAQi+uC^=I*K_mPp^NlDs^[K*$>SDg:0Jh=^u$qE/cF;^n5UeLi:@??5-
%f*d?sCe;P/ObUVrOG8s.bE;XJ-4SQ/ln"Q`UuC)W^k=dO_b%,pal#=eL/XL^5-1jE4FW:3W1>dcl7oPi)q&\g#a5e2PD58JMMDU^
%eo9.&WB_ERE4B8?dG.:1=i'&Qc>XiZ`Y@PEB/gmD"%pi=.$VIX8b"s-L(d@[VRVbC'@c:)fBoBm#lej-DFq`/ZfZXA8]+CmVR&Q,
%:(CZA&RRQ9Z!!3fCN,#<T2L^D%;.X@3_27MSDePm'(Tt2iUko*b?814_m(M<Y&7'jH_/mlM:bD;iQ<BrfTn?6gPl\3-OogGLPP>o
%PD5i%'BM0KiL\)7Q*?F+,CIGJOtCB-U.'0mFjb4A8i@Th8fFi<=dLa3_ZT^VQTRgV",RfB"_TeDKm7K=YJr38&F/0^a$/\-KY67P
%#CA``O^I8[\"&;31L+^I^E=!;C-(=51jj/APD8C%l%5Ku_tE\9ko+:2q?`]:>X*A2Ge*OhW(n+Q9/0alL9lfCh$hSJL'9a)EK)cE
%/=rB[)pWD03cA!\$kGrBkuZ/LGZpL8[H.gPF%tKLSMM6,3K6CKc>[$pn>t"HB6[frh%Ec6E;4Y!i@m7/8M7%pi\P4,QEIKS)eV.d
%!7'R_<,[.`r5]%U3:'<7rs!0sC8ftudVti[A+r<kUuCBu>DsJ`Uu>i.-3MDF1n8/"R?TaH\CN3R,n44"h2mB?<$UJ5PD59M8e4KN
%dVtAs3AZ4fdVt.qdMWs;3$F6ceI0fE*^IkuF!hFk4Dph#Pr'I;2b(VIPD3R'@9W:G%EFPCZEPVa8%"q3g0)==+afEC2&og84XMt#
%3&Wf&ZuTdg<u0*.#&?2q7Ke5/L9Xa(Cc0%Z)0$W_"LpO/\0pBno,"Le,Xts8?!5(M:$Y4)Y_IeC;ot^pCH0F*ldAhbE"D\WZs*cN
%pql&d=3g<SRA.9d%#=KcW)dO>L\#U:FV'9@UBauXR>&6g%FB:0n/@P^TsKH>VI\F;=Z@d2/;#Gma'L#UR)2LOH>eVV$iH<p+,qY<
%Sg3.'>#A-2B"DO[7oY2@gJ/CL8Q,XYB-IXpf9;0N8A^3Ijsa#q,b0\s8n(#KKVLTVL?^&C9OuL;X,J;D20oJVL*V0*Z#t&*KL=)D
%BaUCTS2uT@NNO8[R7N7A;M=3ST'mBPp[%T<)sYO$(YjcRL2_1nP172:JWm<rG3W70eMu1oDI_5X8;Oo5F)+LK.snb^MUC/)I,c)j
%p2K0sfCseGCXeI*&/'J>.s(R9oE\L9kq2=Ol+]%Pe#2ei"-]W3>;JK''G-k%B)LTJ;2"ns$,WCO@@GL>i66URfthqN.W\3C4h,-Z
%F_hldi/@j(RG11A%M+=8&oI:!9YlR=/^<qGe?&8IZ@ephdQ;&aE1X3>WliTtNf)a"41OaW%rKt8n\35am/5f&;?_0Lo7QX'i>gbE
%K/:IOc@O7O:/0@kY;l?oRG/t/f64Jd'F$I,V[$kK&,^^D*h9A[?aoC[Uk^5%FCtiV5#"_hbRRCJ9dUWuG&YG?.@`F\35*4pWE_5@
%301a"(KtGV-Qap_Kag+'OYljk:(C%\JU1QK#7&9o3<?SLi&lU\W?e#SS/cD\_OV[:</Ab;foUhB0X9!0AZc?2&rO'`5n8nn@bJ6O
%i2SfK[ZZ9<7[.c)P(S,DPX2M+OG!/(g_#JbS/u`_?_>HVR4P+q(F'0_YYcTX,6s!YW$c\)aMG-#Gd;VX#5@2^Kk#2A%1]!9+[^l$
%S?EjXgVs[4'nT[L>B4\#TSSI6Ec;OG3-E_G%ZVG??uEKj4h6G![lZq&ftjqG)]X&;p^f@=i-Zks9fk9noc%N(F`).oqGi#2%?BmV
%TM)0e-RgFl[PlXn"=`koQ;.la`"QchVZpdn1[AJG#5@0)V+qKFG6%&?:kR6lO2_73;M-c<LE9m!#"O`:J7DE.H_.!40:9RI=33rN
%0fXL+n_dF-"\2W+BYEL2B3JUlC#oN=l[/3tG@#6l1_=6A$dMq5im%qW)BKdHH,3X9o^sdh3)-8Xa#VP6_uqNBGIG0B<-b4cJ<Lh?
%rT3B4&qcAVP6dtP(`XIq*C5;p>ih*O.l0/g_)]kHAoK4r[@`]MPNK_OU[9B_34V*W6J)j%P7TL:G"?(]=Fm:>)oU[%'SaDmM8;3O
%.-N`M30A'(QL7EUY&W_fOb<O+\h_@CQ0m/6A0hIN[0<([*1TlUSe'An_;QA1b4?'(38U*dlbO'k0@RnR@0`\BPRJ5!b#n3]%QZ[2
%)IrKZL)_0rck>;%7Li2ha;j)4%^*WbQS-@q;6:74SK(ltKI\o>pBH:#\('?'lc_"!eDN`U&SJbM"t*k*[##]k%PjX.d&Fj<VCMko
%>cGOO=&kEJ:(>L1Q(BWm;hNOPZ`meW=+Q9]n-1g2UIoV=Dn*W_N[fmqP(PP0PWlQO&$EI4e@T==E5*6P5c4i7!g)JjSK8c>L2o.h
%keS,V+u<#m#DYrHcN<J*i2BMM^C<=cWX0=(o\atI*AB_,K@ALD2W7CA:=p`?\kWd]LJm$^d">h/lIg$F*ZRO@inZm2cG0eo@Q*l:
%Qm,/$e*4\':-A5gd"<"=eg"COrfUPkbK:;)/5s>U*.o;;_.%B(D<SeBm\=.#o7MCeVfp^*/ZL8b)(lkWE9b.d`K_P#1IN;-aq%7S
%(Jh'en:Rd6b;+UY9+V:uJ\C"I-d]#bkLQ;MaZM_W+$=cm:>PJnZS/$V3D!Xi:>]VApq_SAJ+/aG*1aOB$T^L3FRE_>on"8*::KLu
%>PZ+gH[K8`#Nt$o0%fZG,EgYNX1Q1Y%b.u5Ru&4,9V\n1fA5?iB1>sG\sAW)1E.M5L*)r]?qeT.r8>@4lNnE!+.QJFgA9#(NgqpP
%2DB`%-CaN>X3M9:[jXiO5;RuQFfEQ,JoFD*9m,>)KO^bBcuakYXas-D'85sXXdKL4&Ha^.#9sLE<uV&-8eA.fd^\k#"-LlM&dCQ[
%C<TMDq8"cqHE]p&#:E2P8\U0+*7rP:f[,6Qia0]mhs%uQcrsInE5XST3Gd?anPQ=^FEVWAE7Nc^o\eZQeM5_GK9Hn"A.>(OS:9C9
%T[2O$`roF];<J1^?.k(Q4\a^@LV.F/_U[H6D']I#W.tY^:(WF(jqhnA_RWb?6[1FZNsm*#YYGdj$>00P.)HiI_IhFL_YO"(4uu:1
%4kp!HhN+:'&l/?MD9iY_\0hQCM(1t-XrYY@p5C7:nhAXt7/$;MF;YkI,=a_%L3b>EEJ,!6:0NYe8N7K,mFXI_KG,*+=EY+d"#ruB
%$Y2U;cJ>FeQd4SeXj;JA$,?M::Z&/Oek*`HYCq83,iR6!@<rHIE6NaYS.:^$o%>]sEC1A!%]=/(8AZ6^AO9WL$25HjZ6]fI2;ALj
%,96$*0)WNtNce-Dq(5)rmSpuMk6P]0U!Oa=E'Al1#+ZtYc_0Pa35UrH!M"ucNc:GC8@fl_i=+m&-*/*FYg$aBV(G1s%!f/HG)C6"
%#7,26']F!9/CZpD']Gu;TuWf3LLI<DA=Xq"o@.K/LM)K`<%ji@<Z=IeSU5p4L7'5*Ds']tgF:#0HCC/H.DkTr8ft[=#`%S\8^&P;
%MK%(,j(#t<Nd*\MYm*KR+qGtp"Q9K]\E/;a*'oQbnk'E&PUa!H3^%_oo?k#5i,AmdQr\6H<4KH>gu*,Q-IN=JeDQEq#fmKfE0:2P
%@3l+rFooaN(VJFX)M8eF:(^Lo2mhM7=UlaZ[,@n10eljNc_JJ$+$J))KAhjcUs9;W2$_6Q>?:79.2l5bE9)#d!pZ<6%%]^)fMI1;
%\gB_G;1^$pTDYOV&KLFUi,%3^JjWtHCeXZ?$XJX<ECRCS`3_*83/i$iEe3f^CdNB*$63_0VS$c5^hZo(ikYbXY"G6ACh3Z\2&U-i
%'0'`k\%FMJZNbum/JC*U0@RlF'0&\12Xu<M"p@Q[Q3OuL:C\.ZAEJ/6:Nd@ifT#-I!?=0;9pO!(^=\;'K)lrOZF4$-J!9"M\!?q3
%Dp8:,T`:mU:AI4hqJTCJ11Kn5XFLstd!qgFR`Lfo]9-g4XmFrLqP%mEjPS4__esFC,D3PHZr2AUmAuPU1\3Q6k-V5&h[!3^q9`?[
%E@S/I*kifrDPfN)dVn^9@/4ukDoA#0bT"]CS<XE7RDJZX`CoAa-iA_K.>60pI,>4&OqPP$IB2CoFM9Qg2lcZcKC9a:,i]hkho*Yl
%I:kqBNG:od#3.XW>-R@Coq`gYLcJ*I`c!+s\/\PdD[9;jTGtI\Hs%__[BY-9I"CpF:A3N1XGm\D2oF.m&s4#/!9FlA\V'8gNdj[`
%/_rA!s$5KN\o0Y/CCMfM2r4C&;r,lM,?j&Fbk9okVLol@kq1dOp+Lm5i;:M`-cTb'q7a+4du*#QIH*Z0B*[6O.iN]GB=`"\;q__q
%Dq$IU1'kX/\MTJVb_4kq,6JM($,<0>0Od6P^S-34[([jaVNS<N\.X8.2t,Z3*/*4Jd6*p.iOAZV6XC)6l+df]%)Qp\*>YDUTA3BK
%PAt,mnse?02O=$$nscX^bU_^4^VY]914E.*@p[$,nJe'=c"?:#ho(Dk&m!"j:RqXq@2m4)nfEH`=#Ou>lXNP2`c'Q35[J7E^V-**
%D.WWGmq>r4^\*b;_=pZ;'&nUtn!h**AMZ$SDhJdK,2c/hbt&2@!'8pp3gU-+62/WTWcmUD9))+F3;)-'pe>6t#t8ICDgX*!R"On_
%dpWkj^2Fi\F;o/o^?Gfu82n8$<%obJn9m+`iUR0.2t8o`D*$K3oR#S;2K[j+qT69^FPh$kOE@_UI=!$SjjOCh2j=6O"a.Cp,1*:^
%D>:hR4XqP!kPL!f8b^orqc7_IbHkRO^>[,[,<n6H[s9k&b4eWV-ae[<h_u3Zi#3P^hfKM]<OhRIj38D@f^aI.e^#B.i;5t[cjndV
%IA<+@6_3V6QT7->`5#*-,SF=iDn)?;&a=,hoZmb(->$idVOO1(r6G"q)VkTZgGaNRH32NLm@0,!AeB-nDq&==Pem(<aBYCIDJ&cX
%5)PDMV>Jho6<[F$Dd*"*be#[e2q_:gT4)j!M"MOf<Xui^`oIELh@P,lE""/B+T/)jK`8;(r2*$G!?O`*9jnlr?O=JE6SIMTn!h+&
%*o56N^TmLC4Uf>KU;gWDD]-=Sel/KA0n+2W@\<qc2enT)F2Rdt"mZD<<UXaG=*DILqpt_d4<-RI0+K1&EtpTdho$mS.cX"nc(mL#
%20?]REq)3>?WY*_"X(gn&q8;[Xa]C/L0:Nh=`*rJTl?,YV"9"MN&p$bn!hnu_NSqN^2N9L7+lduDdrSM@I8a*pV6@b47tg8@bfBO
%0QW7/eto=C.On=gIUq\&V/oQo(=)-*.:<I&j:qa0'BTWGbaK]1^bX+rUtfud_g++5>199U:ankGG8Fb%*=6**PMiNQdP-n_*6Ua!
%9+VRGi#NEI7//nhW\Hc1W$X2)4G_4,Nki%HX9S)ZJr!pC6\nS!9#nU)A9L*@"GoHkb^7cS;;*eEpJ\iJ!(8=_kW)gcWKG!s4@3$u
%Wh"B#c/N<L:QK03bq74]J;d_aXbR0.]EDNhJ[kC@XA8gN2EQ"odIW:/;Sf'HN_%%$Ch="V82'l0keRTK@tE$Z@tJ6u2&1g2H(6Xf
%d6cQGj%p?-4da241)Lgj5a9sf?5']2_6_hjG"cr^ie'(^Y^J64$eUWX+\J4>2)u,W9%]k;+2CAc84i)'>S3EM"b,eSC<&.emnohb
%.0+2>^u#D;=_-e^..IKt07;Zu(I0m\O!HDJeg>3sk1,M"##bbo.V_Qm7'"E)iYISi]bLVL]mqsqX\i#B_ujaP2l@lWZXi,2$[dU>
%qG8uZ40%;&o-:9S8?Oe_'cIi.=)Cg$)4mPN3g`[=*R>]aldY4A1CLF:1*QeH-:P.Ej/c815crXecgY!_V(`5.?:g[QmED\c8<!7h
%L?<?.H6HQ!`4:3^j'pttQs-["PMZq!^e#OKe35)%HXN!Gkd5nNMSp9U2=g!WZl??W1Xc!;rW'ss_E!R"4hO[TKO.4`[5eY=CXRhY
%5bI)$W`YRXP)F;MUN&FCRlTAs7hW#"ad^O;l]Ktj&/#"V89M4ABX!'9,cE1#qH,'^TE\FV.S.i,OjGfA;@t$fA7'l"!")I(1l7!1
%_*\tgHe+4?ar3\frO>h7&\1Km':;E_l^^bHW#Y^,%?)9)OLd2?R7nop6fh<;^b0[n^nQUOdPj]X7Rn)FLMBQP#Q7]!4@b,B585:K
%UqtFq7.`il^9lL,g,b@O34"OKd_MV)2I9=Hk"0J#('c/a!XN'UO-h3k!jh!#-4]GT^1oPAa=_!>86Q*h!D,Bl)'4m91AH@(9D&\7
%PQI-VB)dJjU/j$nK-nlG_s%H8>Fk>RE<p7re).AXRCI\`6`"*2^Ll-W%`HKZR\C"!hB4>sZTC`N!ZD\7+:O_/1,tbKoK0]O:cs"R
%fge>&*]5t$AnKNqV3m3$(c@i*WDeb;"p*Qm!4>,u/[-/+rMWJ1U[SQih4o^L6Iq5F)qo,o:h0uA/tC-\0q?lpRJ2`plq:-nM9NcQ
%UG;([aB<3A`K*+ccDuJ!TNZsFRfmU^qlTK=7N-CHDKlf!]]$[S)[0$O_c$R;)6#S<0ub1[1'H&5Z#Q_BO]g)&jqpuW,&qp^9;=gO
%)loB9KGj*+F,WfI*9&*qAE)R!*#s44nZ6PHVT:"+858M"lH0qqJX6]NZJR*/\?QonD"Lt#\nZ6icll<r![7pNAtWLN%A?-Oq/\Op
%FI2^X%f1j>/Xg+gP=sli`+tGk&SHL&TrXiEA[UL67G6S&G'Q+bC,,o9HP[M&eAT<8`YrGsGZG(-CcG4Ql[ib'$P[ZH/nho<RR_st
%)G!oR(LD40Uh54(ZN,#_)kYT$2f)82l0@'dYfTBV8;)Ftlu[F#<;9?b4=,t?Oh[B7f+RG75\)sm22"gSD'$\DaBREb+m?`u9G+!a
%k_p0/AF9-th^qC7M>YCAaKPJo6BjsZ%L9)`72Y9R^nH`!ih4\XE82/9Kns?M^ee<AaSO7Q_K,/(Ao30OKa:'[2U]Yk34_QuR4!jq
%!9+tNj+XX,XeC4bW_f]jDd<S+">8d$i@g.%l)e'05X1LYonI4Q>75S4Ts=r_>/U&oPL[bO%P<T/#D-B!UsMX$;#t?blABF?P/IZ*
%$i-Sh<'j<1on`?Y^2lthUj,?SoJY$m&N+T']-*(2)SqJG;>#[>nou!Q),H;%8sN13*bo4LpZ"?o^TO(AQ=ZNK^ZLW'%;X^,X$I8^
%`^.7`dN$P/"];^g/I7k<Msg6li&D4LV1YMI2XA3&<=rSCa2"b9%-4^5T`jHg1X4_@0rLBQHIO6A2L!YOm<.BY9)Lp^;V4>QgLH@O
%!eQ("s0MH;c#F_)[d^mQoH3qK&b^ka<Sk&O:BG,)pcGjZYj=An9M?iWYUO#a!ZVd$AUaTEC[IZq<K146!n?%&*RD"DM7VeskLt9d
%7J\ViVHp93AnYX'k$fLoBamib)%@BDa/(<P8-G$2E8u,)@a7.QEb[)^kehWd#P8H[d-W*DC,%a@+inJ^TZrWb^"$6*Ft^,bH6VVX
%A]$TuVD^Xt<?3gtK8X#>=[P?i_'(7X^4s&5WsnGQ&hO;&1@bOOiisr)<jck5]-9n*B#&d^pfPk':D3)OP-4?`ZBA0k"Ytil+h+[W
%dX;`8C4l8\C!"js*2cnJV1_THQJfQo9n#pT5V]1E=7RLPZt^g^3rpW9=[NLl!Ha]!EDC#_k70t4ENEQRI3=db-g,f/TL?k@4lPuT
%`m>?S/E=hQHNe@H#aJZ6#4@(W3puq.r`OK+A5BR8N;*V7e6sm;_4910MbnNF(]i;c(-N%&/B&1#M`jfa;$VgeQ6k)Q6:^`Y'[Xfd
%$]?VL?*TSA/(;#d!XNcag)]*d6$>/Qe]a5a-%L5F=">b?d1ei#C*a'"$tZ^S?E*,*2sG2#f*=G*kE@S[HC(0Z(C@q8<&5XbU-2A0
%VWI_+1IcOfAE<E`>#U0*leNubWB=?."k"W&5".=F\fen^,Tr3<TJK;S$o6H).EL-fMM"ZXN&luDN5:*LEt9$6fGI<?G[:oh#&\@L
%V3n'9JO;S[>+k.#ROU1"8&]'[[1Ef5C%=^K4Rj<6h@2dQM_ALP0P7`So#;pa!X#h55]=j.OCF`Yi)+K1l6&+e0PMCG,O`Q+6p.F4
%>dTP:dqgC%&E`h`K4sgJ7;G1-Sb,XrVT!#B3nKLX/P)i-^M96^TbF[H&L_ftr!]qDO]+ZT$K++1(MqD,&L<t^3gfmKmVMAJH)#o7
%pN6N$0UOu_L9P4\HKam\%RG=Xp.SYXOG.m1/I]T<9qH'-(dull_cJ"):Q1qp61;#f>U.f%Vb$kJC)na;;..cOP[0&W$RJ&G:r&0^
%[cEX/RZcqq.`:0i4ZBGJEp(<p:-F,$4$MErY'f:;AkP\1<b\,2'=)RsWar[Q_@tR2ZuuF9-BJnYecHNgpeoUKO=/MT[\_p[Wf!k$
%>!`On2AL:=%@G/l6hW<,Y%GVOo0Sm-@!k47S7aT.0\(gVkI.>k0SZs!:TEr>L+YhWYlq<@W#umK#VskncoZmDH$Q";K!^m1.<,gN
%Ke?5P^-/#TI"Tra7,aSk&K%V^g/=NYltCaI"Y`S3B>/(&/>-o(hGN5ifF$'lJ-W?'BWK%XJsD<`#E0G&aEuUJ"C$U\6;Ro#VQGB?
%Vg&KU>i7S2^hYtO^"7@p;9>1F5`2i'_'\_fa2%?X=`aiepn6=kX[GmX,Qd,GKor>JqP`6["ajl=hk`0nVhq-nYsDpcOaS3ImLl0Y
%oX%X3HL=qojU<dB$Ae/EKIOskG4.E6Q1IN67%@=j^Jo+S7=G&$nQX-gW<@:?FeXd3\2l#FT_TOZRX&EOiqQQR0W>bMNBQp/Zc!h[
%jZ2R5T`+#"%I<25cV4n;H2(3rMFnBgZ"i?XHh'Eu1KuZ<q71oJ"%G#!Lb[L$:BW5BW')R-@6rpS!9FoT2\"U+lK6aKoQB.*^7N(&
%J85eA4S:bT/u\1q;^>d2aV9>"S@]BkfWKWC"8%-?!+i%!FUXH*9*6S?1E64X*p!SYS:F$8a%acn%#r&i9W/)(V5t(nJT8.j:KYDk
%JlTH&':lfM+S5n$feWZ'Scs_r_["dD<&]ngKnGIjR))tBo!!84)UjUBkm8V#"l+h\SLaqMRH?'*W$Rb`e4<>dd1?Y:.O:u)[>)I[
%CQLs%GS-\S,]GTV&YDXR,"2eFpIU)*Z!mN+Eu+pR-U`26OC<bH7%FrC7S32\KpoO+MF4<h"a+sGAKMJ0bbGP(Hs7EE!"V/#,4RDG
%$P,Mbi2e+r#S2HM"<&-[c`34=:Lj$2=j;[k_.#_0MS'U)L$6c^5"'i>Ai_AYq/NeDY`cf<-8d(TUF!s_8MIcP)#c-W]+REo,fWWK
%*J(eT\>,pRU4d;,n/KB]UMC!"XW/D.lXUVNO:5pdleqbQ,aoN)Q,'.k0;mua)`uEQa"q$9^O&5k/Bede[b/!Gi?U6Q3)JZs\H66A
%OI_"k"]^'TcraIf^^SE7(*JB$>s[1?eXID[O!/5U3>G<\Z<1_TdpVEJA<J%**5beM';a]DJi<Zq%9Tl+Cu?_o)J)oZG(?@?MQ6iC
%d^H(iW(^<q:@iIFXCOSs%*U>*Vf7e4)b]Bl!7ZTkp#/qFWM]&!aG$"7S!h,,*l\k(5Ga%6+fmcF\`)*XXmRXFBSF3iqlu3N%L#7O
%3.T:K,>L_UZG^e)&8FND5r:Gf-9Y!.=/G)&D^e%5WRN6pd;1);htBAVU3htb?iUes1;jR[1.OP`)#_9)K\ag@#(RjLYp,Fbk%q77
%:rYITO'#&0`FVcFp'`%'_GiN,'YoAV!3R2k$_@ZJ,e]CEksqt(o70WRr<?,.58YB0OA<Za,(i%/s0,Qp0u+P8^3!3VV2H?CQptUI
%4*W^J9_Wi`:Y?2Tk].4\-n]_8N,1rtR2Ef<7]!9haLs:Bd3@k&.3WNN'g=?s&-,b3LT/]7BWJi`GWLan=^]/pTfR_Y[Z]^M8SpkV
%KdsS<<!4mfKDHH'*=.Qd;MG5YA./*!0kl6lGd'Age9EY3XqBMQ4H+)QU>">8(Z^g&"Eg02%_RKfK.\R_KH?b+"bQ&h_VdoYruefQ
%<u0g!36<kEF)FMnH/17m2KBP*KX;1nl7bsQo`D3S9,\*Dqkkgo+%<jT-S.VU'kr\]6"oD:qmpQ`\;2sH`>?48Pj6LZ]k:L-9<[=U
%GC^kYbjL.*OEf9MP@`ZH[C7USK@PNF[P3;k_4O1CYfTf.LKeo4`9MEdUaM@X+MMA5;okO!DkNg_2hO2lZPH%gNXU:>iV0%a8CHY?
%XY,L:m-kLN^tW!Vj%<#f^/9*Eh'p.3@i0ZI1TY[UC_WQd!0mRI7KLPiTOBo9MaDAlkV>-+,t+Mqc8A1f-po2?aXK%&fgGce^mbgR
%7d<ZWC<LL/UPN:*rJT=IJ4T<'5B.6)9-C*(dFB@QO5,UP%sUFNI3@`5d'61p(:r>%mHd4L#3Ym/7UG4G&L`KP=5Z(uBp;/H7LC7p
%1eNR_g0=5qP3Y+%nu^F9b^L6<Je&V,<JoBS/#KX/=XA9nVtj(,DRqnEK-(?@//oP\;?PD3).92M14dB7]aF=u`jlTN*_ZXf[)rtX
%/nE=kit8!MqqseEm3nj;&5F&$"1"rB<@hq-b+lI940<a"X)tXX1Y;qEL1H^'P.&I=HA7bsOn`OW&.B(HhgrBJ:0N_=(W4PpEEEWE
%PGEFn^G6MPK6mT61N.u`kMbssK;cNn*TkIT*Kgbf"2[<MpJJD9Cn=toQXq6G?-UC\bk=?`=^N`ffIW'I)4am_3;HGYREEd>:6%!h
%51-@D!UMe/o[..KFS9(li+)Jj@j![5\V'"qM.=/VgbLcRUr>\LT[dJ3J^ojW8FSAET)K]jr/fUZ2b-fM0e&Yc%W^Mr!#/$,Nen1j
%A#`0TRX,D`OWt6oEl8!kVE7\o#8o5fGBr=8(^Ui+>Ff<!,;"M!F!rbj(_VWM!mh6R"6;m[K;\NG&C\Ec,pP4[Y4$&Fp(@X`)Glt?
%,nq58Nj46tcI`g6(^3`fidAn!S6Y0."4L/LJEN_j6O<u=@k%L'TnM_T:*'K`]*B^0ne1?+@k1@^nOhG?6B&Sh%p956)h>Q9>UV%u
%CE8n5G](p^1durRLq=pgEH5=3+*%MbE+Z8@a'"NJ1YB8Y[o/te1^GC@-Z;d)Rk-NU@6%<'ohM#r*lgt(eOh@tFU_53[fg!0)0#tR
%E0Nc`hbhp^bsXLW=6V1<SW\5P)<_8U$FVnh0Gm4kC<@T*7\DmmAagiS7PY"&-]nVJ'k0-D+&a+,WDd^f.,7.NZRo'M&2;L9FA;$'
%,/Rd,2==d;QC4F.;'L<K,7WQA6UJ9poTSo<o\-_u.k2-^83:Q(!($nWE`Dp69V8+!djX0EG?dp/2!q!IJ29=9GsLJL(?4b[6PHG!
%C_!b"iO?TJ&5bsp@a0u`kLFX$>aH)'/"kP29*6/*:97,hYaHg0D_Q=.%;F8Xj/)7q;8bUh^a\WK!:liPCZUI?+<EXc5N.8AlN,N7
%UcI`45i@:hUSZHO_E]HGSEk,pM&M!H:r?3Ced8#&]ED@5.:CB0>/Up_>,6?T><8HSC_%.Se;7q:hV(U(M;t*X)jiBg@si7-dCkSL
%C.81'"<S4Yb>Cl&D'$cDdn;4q"Z9hBOSI/C-X-_IU4fn\W"q1U^TW_?d_6T;J5$=$OiWB!+3:>eoZ.U!cD+?ZHo,=f`Vl@;%5VUq
%PGfFJ/5Nf=.HQeLXe0$1-mhMpW-VGliK+P.0dipD+^7YU,8tV3H:T1j%"rr;pgYG\)C1rmn.`c]J$X/d4V!"6h#DVQbiYR\b5\L1
%YWN-n0-h!S.r@DW0MO'nI74HDTsq1mLLm)4%-`r^6%fKt=JrOe-m8Wq2iq`nahd5hS.8?5E<3)^T^qXj)dL_Iql(XB+Zp.RPb?Xl
%EjSh3fIZ&d1iFs"]a)>;fY17i(e%P.U0'Cd*5,-Cih/U`p1jG!TE.OO%<c^K3Rp_5(CXo=Y]'TkVFJ3Dn6Lcfi/%6BiFBZ(,VlZA
%%`$eshT^RMpqFJG+4i7:!pBsg3^aC5&Wun?_n\2l)rM-AGS?`k6:;6U/00KYP,1.tKOk`!-n,1j<:?sMLNjqqa8g:uYQ6.b3fU:N
%d*TNW<[ZkF?8Y9+i+IWY1.<9JD)s;16+E)R!J'B):o%\Y#7qYif[-`s',UfrFrAR@7>ElG6QnJk@@>jgi+<.N)'1\t_Z]73@:c16
%)V@!%9TfTm12-e9qKTs0="0A!*L7h[%1mA]a!`Y2*<823N1B5\>0"+^Z+t<f0<q>F(n^mTQBZciPq*hA?+S(#P&i9&L_=f4Qkt"J
%Pe]^bahgADDKc5d:iA&g1T$cG"J5S=Fs)NMbchhD$mcO1Lq-02+k:99_PH--78LOX-t75hL85e)'((Va7b&MK7/IROD4ic5M.nF1
%+)dDPX^nU<N'L,G@t]+,\CO=^+4?Zf*?u_[fX&d%%IiL^5Nl/5ND9S<YtQ9M>B&XOaTeQOD*q?c,gq_D>fh+1PV)68S4CQ2a$rp#
%D)m(Im]juHl$<9pRGn]d&NP8*N(JSP8?VKqU?L5<O^c<4"MPU'BHC_NZ%nK+nC/@&s'@2j7/*'=;M^C,`(H=GF[7r0J\*Uu&*A8V
%1+'.Y?s4D(Dea&[N?Ma2-bH`uOB?<o3<YVRmqG"p#mNn"b*#jl_A-mN@e(c9M<9p4TbjdVK=Ei+/STF=+M\fo_oh^9UBT<_YU@U&
%EFskq#*)plmhdAi3.j3e2,*d[9cq)H+-uN_aX6IR,ai[?bRlH*.X^A<6ni*b:/Yo?8:tMf/r6AAeVdtd%^7V.cNd0g]$i*b_nd[Y
%It<2]#V:oYa2?^<N("_@SA`:RQA%hbJU*P365&iN3\e_27U^M.+*&<jOF_/k#\9'>EoHqH8pB%P.B!r5ZAXW#;\g!?C=&or'"un)
%"<YiY;PI!<P[#n3?GT;I.arY$AVa+#@-Alf4+jV%A:J-%;GF8YM+E2Mbh@EI6JXMrM!=.i3Q?or+H_tHB%6Upg"+.ms$?C!B_pa\
%I#:mmjb9#L4-I*m5eP`jLuYcd2".5aR8]*j,)\7_QA*)m.BBGT3YR-;:9/)#eD2;\&Tku13s(<@FFe=,jQpS';lp@=1Ilo#@Ml(V
%6)q`,A`>,lPWUFdYilJ2,WSed82&HHNtV$PaK<N*iZ!DfGJ_t"!-1\g<<c5+R%e+f"#j1WOpbuY;,4`)8mdHKUP&r>[VCZ_X^Es0
%U=qtH=>6l:HDg&Ddcebu:;R^bPSqXY/':fp8MpTUC<#t.OqEm7]N$4Mj=q3Ks!5`g@JOBG<CR>2[A:U^b'Qm7@]F?3fSUBqfa];:
%IlN`u%>,S?7N4Bg2_nO--$3;.\:_GbH`#STe@=k!,ZX(.&KVmC$8k;9TI'ucVj(X(K0lgk;ZQ>E_5NG/B[A4IM8u*cq;iML#]_E2
%&VVs6,Jm",*9g3mbu#c%/Hg&Fo9.e1.f,#81)5odfMhDm92M#bFh7.bs2^F:bLS617Gu@BE\/f3/'hmG669SKbu4>%KZhLi9]Z;F
%-4j4n#Bc#>+__4j-'&Z7&';HE*b0L8=-TY@Ck0O;DUaofd/XqEK^E1jMZTQX_NdF/H$BA3`!/V#l^<I!>f]F1&EJ-ec217f_^XT:
%Gn&C^)WsPr8qUMOO:>Oe8.@4&!\FLY#S-3knc4Qg]PWePM%[)q!$!2l#J'h3j/n,HgK:?$A`:W?D?;@D=ifA9U2NU,1M492+uT""
%,/4<VVm%(D:#!Oe#hTl85h!50Jg`'ea+@nPWA,tro3_]6dVKQU5XB;3qs^U08;jL;\.L:>[)U4G!OPm1C#NH[6H_pFED*)H/nY<?
%O?a?.+G:g^\Qtu%?nmorI25k3^'!0%ACEuQ$VQ#aTk'r@L"%LFdQncq>jk61LuDcq.'[r^(VUq)1[q"W9m4&q*.pT2dKpKf@Dq2P
%-]_SE@uEqRjlr#GmR6G5W\j=DLjC"nnY0WRZ.Ol2&Guej6)]ZpW#ZkZ-q;j6[Z_Hg7?fRD!K>?Qjl\/-esLuoN[.)?ZZCGuj.JO`
%:22;dO,>1!8Xg/+4^pfE]g]@?*#=oclQqmp2&h0(*$JlIAs+=W8:iHOBd5cKM2hu?RTd%;ds%%.:uuUe_Z=I0#uNspLC>%'`&/LQ
%YRMT`B;-XaQ&uH0+sA*r_e(DU9su-E$mV;%4A1he4B5dI)k@_pI3O06lt\=3UsJ3)K3sO9HiS:_.h>323-Fb68jO7)5@e>6;l6%c
%.d=sRQsWZ^5$aD9E2SiKJAVE!kua1cNl=D/Pc0Y_$5L1#*mhq-A?XHQ5Z.e",K2E-WphQCW2P8a+at]?O$$`mU/_@hG8o`ub*$IW
%kni9aJrh5@X[0;N3[JZq<P[Qd_DH-K;>*f/<?bL+('[@nKp#;F08NHG)MKS"IKn_'KJTm/D_&<E9M7Ekaf*'\SN7-UZ1%"4A-lk\
%&a-&\,S0\Z154^r!=CtJOA?_VC5amJh6WJ4$J=A"+J%aNm)es\_g1O4nmIPSUkGuU0@B)Y!t^UgC]K";C5mP]#!ao6*je_F&=tY%
%$[+)+(UDN`2<YYDS)I\@LX[[0e?22Y$pp0S#E:qqSJuN"9Q4Dp@)mFG7^8%2C#7HEJo;8<7&SGGUqk3F$moJp-5n'&&>*E9W1t0$
%,DH>"'i:'Tk:3ibjG7p;.KW[Zb/:>Np/MsLSShP=`^!3#QJoSn'2/7##^SN6,X[/'lubj<YuNZH]VP$q[,[@UBiY`#,if7uIMt\r
%Vas*`T)2'Fek6K-9452/_iP&PTEbFKYcql:X$d8UDRIoo_JN"&'7,R1]+oU(Sb,-@**rp?=/t.L-ij?Mei\pub&\IP!llDgFY'1G
%.(3e,p=]m)lTjgYC*NJ+ls6t*Z.&;Q"M8GO1lKK3L6TZK9Z8D'H+V'?Z\7&0#\n/Q2Cpb224,B9,fo_3&&iihHq&sHTY)so<=44/
%>_tEN.i2>$Zs4)af^p#IRRPDCM#SXUS!C;c&Q075qC&dH^n,W_$b-S1q;>dH]RaK(j<asdn!c@sV&@?tL8,GJ"B)g]Yf)`fWtTt7
%\)uJ#)0E$6NXTq4dCtZ-H8<qjT]ud:<"nlq<[Eb1j"QfGAg%H(5ed_n:#Y>&7\?eJZmE#Coh9r+G1;G)'s(nq106"&n85aXfm;k?
%"ID,E<]G*3WE'"oVVi^iVumRE^^;[lj#hlYCn5rofE+D*+e3+G(oYL6X,[R("f!E?W3MFa[n0mKZAta4E.W-D8"`9RJ#q(J_k(m@
%OCVS8L`o>'(!C#V;6_<9G^(`Q.^R]b0/MTFa/=^p1^m[XSbNQDNAP74Oqti!&>_qo[Y1]<=tm'(NWPcJ\/3^bL<[lYE4CN:`MkCe
%&-cK'('SKGQbBV99*Li=>T$m!)FH(n*UoJf.`F`q/.@G>,p[#4Pe_\p0;b0A,)HnMO*?bWO:W.S3/m$86/l")KZF>u1,MdG4N*P#
%'W(W>=sFHN1J5mu_k9fJ2FatgPgI:Cdfk1eS[0/J,[6u6'2P>j+`is_9OUN:Z<>+ERLu<D*q^MH7,7Uf2Kr/7Jh1JYj>c,X%Lu-p
%TMP^0,p<84:<E3K^nu\b4<;=R*\3C5CMZoI'\_\8K>US]>p'Yi1)a4`\.27sE[CGuVFONY&qopDZ7j^PK$B,H)b_"k,=ltOFCC>\
%qYRks8/t=/_QV&(B^R-G]`\d*FQnGlWC[L%VoerE$6d,MRYkE,:$<+r%/K-5'=;a#F5KL5,YAs?(H[a#+TVkj=daHKL\DD]1Y>sV
%q1(1eo*5Lt#Yi*ebA#(p^bD>0O/R@-l,KtO.E[D(X_f+jhiKaO9`^`B0n2[fi+.C(49J&aG)G<ZC40f9A<\hKU(#r9.`!$%[$Y[T
%j7H1-7_3#+ge1NHj5B]PbQj(FHc0$/n,-!+[fV5(_2^.D:_Lbu*sS3X-ugI]@hpl[M4]R+`l#)[-AaaJC:n$jU+i^LHBQp&"TK'Y
%`;i\u!0Un)Ia:B<69MmqB?^E)Jj/C+KsZ_rp4uhJ+&rqt_#`tUV!W+?7Z$3O!]oP4&E3jR7L<dDO6+qp,6FAH&.0)E%LO+onFogL
%P68RF^)7RKQl^)ie=I8ba=P:l*#Af#;Y[di/grlLJa#^&#f*8^8\TBZFuPXVTQenQ<P9.-.S>X`]l4V2fh&t,'+\Ve@YP-eh$KVi
%LEte8b?RCpmtnUhTNKZZDCTWP@D$+BMW>a*RkZ^Y-%.'iiN]Sa:e*Nh02!aNd)dJDEO`l[M1Mi*m9*CVaX7,58Ff'209G!7femjU
%7o9DQ('o3n_5^66=d5<?,S`jJiu.#,8O.nZ44?cIfi]lE<(IFL$&1PGGi'Bnj2a*4G_noQ^bKb]n%.u0UMf@!NcOP'!Y:+PngKKr
%B/tu5TslCDZZAId7OeH0.Q<f2`0cCg"SceBQBVV(H*a;,Z&irSOqY5?;.g=(kC/FI!JA<!Br^Qf)\3rBV#*WE_8tb0-=&1HDum1r
%aYS`hpV(3L3/LS/?",:?"s4&t=4$@(X[!qj`6ZPbr&@g"R$qtA%2F[KcQG*AMc!-->E`HD8[0'54E2=;+@r+_]*#dL+.'9<8?O%R
%rKA:]d^_qmcTsH"o.qj>Xc->k4cu+j/W37_.@*#^<<tnTWtjUWf8FZG@=BH04;o]64MqA`CO1Zt=m!u\#tFon%`e`>:jSgIn=jV1
%`T"[j8+g.)$@T"4N!R*Gm?;fG-Rm9,837AEARlo?BPabPT:mej>1KeP<b%Hb@?`I:R7Bfb(SDHr`%e"%TQ2RT_g2n1URE6<9n6Qs
%3sEPpB=1Td0TN:]emf"=jLRcPR<ko6rBdJ#Qo;U5jcQ8@L/agKf*U90,Crabou>"2#B+/b?SaWQbLf,rG6&]QYI]5V(o0D:Usc%i
%,q@:K*NANo>(P6o%!P0>,jEfGoEnV(Y3,3]1&F=^Tcil0n3i,K"+h6O,\D'Ff+7"E;Kf`F?"'A#eIDB%c:F`kq3p5"b;+P4f`J-j
%otF0t(V'G]aN=G!@)8$plNpFQ=K&0r2IMbW)o_$<8$c!SnY*k5Q`9S[$G\?HM2FZ`#H(G:.-^!K+A\jJ1c%'s+Z^SS!,O-m.ESu7
%&1KPYrMs4l<-8[!/s=lNpctne8r25"=HLDS=GU-G/ThB!;[VqI.cULFZ.`#c4GXeM'Ji%Ad+?:49Tpm+>K!te:W%Q!HlNlC0oAE0
%&KGbeqF;u2-#/lXIl`Ht3dSKY<ru)E(Idh8oW`A-dfIst.PpQ0TsOtY(2@)<WVR4Y:D?N:KTWb#$%FlS=:>[YMR5*`^O\M=-a+@4
%FdT90iY2]6\])_B)HEp!H0kfn_\.8eS5VE8FV5Z:0F/+-3ktS@=TMHab6H6PL-A3\7T@&f8,t?o.u:uH0ZXL^lNoq!P#FDBJ2c$>
%<`("jEO=57@-VSZ6-]lHnd%hRHhB790/8(*$8;_r3lOA]g+DAQB^l(M!t?V*c<^5QQU`A">+[]k741sWTY1FRNe.]44#SVcn4gLS
%fm8\H*4Wou8d^gM9f7#4<cWjG0T?7@n)R/N\;lY/o+:-M\.:0a=4j6tC'!<Z3[G<Q\.rBd_]+sK93GjsUTI_7E*@L;;]SnW*3+$9
%U,\JcOZ\L0%8$p$aINU-"n]U$"5-G0:/reS.k5%V?SA3E%2MEAmmOApLkhp%9ad!EiD*lN=s+H!nN5N`%!$A<LL(gT$o8%Y8=>SR
%Mu\k],/c3#a+t^Q1#XBCQdl"n3_<B=GM7#"%16hdSe25t.D*D&$_&+$Y.-k2#&SXFQgIdkj\\D;/VW2O4FJo[Gs[=EH]VeR2ES>G
%OL6Y80qC-_oreoA8J*1h9fF%n./O&V8S9<sLZH*)1-1D5s1Y)sGQ=Om1:^3^r+8RnWq[JMJNGB%-pp[eX2tMZm3ULCNr0SFVSB5L
%Y%*T?76&fD@jVLOJmnd#$jt:&o5QnU-IKQ(j]3$9,uckS/W&DRQ]qZ"-Y[[dH3ncC6s?'5j`Z4Q<;84>UdgJ13"AWA>9NrRjFSG;
%<t+)<FT$fL%B1j'd1)>C9gUb<O8tG,3e>sUq+e+'*IgOM`l0\uiXOpF&CSc61T[2SJ78YIBVB"bL4d-?j1Mi04@8FSP09kS`*a_S
%6qkt(hb+$e-7Z7(g>RSqR:auHlf;K&NW+hn2@_@IL/KD=)JajB"X@FpdCunmU0pe"8*r1<4Z<^*T%$#8$U^5:.`.o1)NKH+0uMS%
%7,Q?%lGtGa23cN[?out.S3#k0f>3JDDNT*A:U)7HMI<8gJrZOj?:^`3qZEI2ORB#^*F;ukE3PsGf@(i\d=87M$B!$,(PpY#*\s$,
%T1-8POaYkB-$fcp?L>gnO6J_V>)l#5nGQpV'L)pQ)Gj4>7>dOrR*TRFaP%%=*-=nW,'l(CNeqQq]"*ned0T9)S4"bXBTdsWoS=+Z
%;&+"Zr[9q]<l,=)?S8s1<&Z#`F-U7qOYJdeBa+`%,+ZRUd5f=.VW9*RBdj#u']j.1bj]<ol6!#a.f&&f%?=2Oq5DXM,Fj%Hm?l%P
%Y"h*de9aPF"/Sj\`!2ul8mGK8D=f&F%ifq0UIHVoGF6StnS=-NH>O\\^4PWKD&FXVI`4Pk7p&M(ZCl[,j*FlSd3"6;2T-S1/A=Cb
%<11Tpk7%L+65<=-JqHo+KENCH-Z`%XrO^q:^<.@@"[\&r',V@D\I,:7-Q*E<%?D`+1ihRP?Ms5kCmH>dKL[Kn)-!#`Or-@W$,lk:
%J/a,AM($e.M9&,U`ai/T&r#;6erF66SB=neO%G`<)5rg2T@$,hb#<mj5:Lu2W28bjl]p7)5Qr.W@^ArTEal\/2-F`mdSZotMCQm%
%5d"'^D*:TE'mB@Yi31@X%ci6S;'+nKj.diELS8`Y/<>(H:3?=\SOZ8(/9Ae<UcWt1:iJ0I3=G/^Yl&ZN`\f<,@&dC>*i"&r^(V%f
%TIOF*aPKLZ7A]0=_Q0FE,^O6&h,UCHP)(.mf2t0Ff1[a4K3h!&\,m"o2WlpNfQqs[-^r0[3tt7eEiu)N;7Wfb#oMbpLGL,qB==!"
%VfnONbQ0@.S,l)ZeiV+gie#0,?1j<hd9.akODqBGHo'jHKP1S]e;:+[B%KW`$d"A"euVDca%16m;Y/BDA,]\K,lKJ&0inQ032frd
%ctgZsL9F_.Uc-ioQ+h$s&V*hA$,G`D5l+8/d^^%3fCu[JIJ/i,6amP66J?5u+c'G=>%B8$'A>8c!B`CbU^p"JJJ'-eTo,bqSDGM7
%q4tsU4.YZ3OZ"bJ('^T](hV81T7G6Z6uc&.4uO@p(P6Oe^&W,.E-\6*T\7B$E`/.N3>XoWEQXC-`gPgkd4)hAKR\TL77")OSi!`4
%7<fK5CKL*6aE^1u)`jubed*mda>f]c<1r/EimZkjFcGPrVg"UV,"QBN8M[8SCB=56UrY>1X6!O;(o78S.M4Ld$j3'J]uX2gA->k%
%@IJ`#JY@9=Tj4r<I5p(4,t>i5[I&pWS2/Xs$#RmL7C39;6b8uUO9XE3(q7is@"GVB1aW71@u8EC5TS)bV`"V.8.2G>OGn?SM)H4.
%S41L!ZOKrECan8G"X4%@A`E<HE`lqY$;'8<,;=D4cn-^/C$uo#_.E$jTm>]0:hftO*-QpjUMr$O-c;4,J3k_Q$#\OV0RL0diLPO)
%MW9S1'+UC3oMNJck"/ORqB3)3a7U_C,fkd([lehs1nAfa9d6k$l!^L:Kk^)c61tAg#S.F?hTQW`/64,9emu&&_/\D^5^b)mb_%;\
%b!bWTVcj4'.m*G='"A;aq;?W`b)scm;^pAUe5hi\6bg94p*WbE!Y_E;/DYLi"i65]);4!^+_WFfe4`be+'Y'K8MHNGJ/ZPL33Hk\
%1r#rDcmX`u9I^*>lAM>,KZ$[C&"B^)RQ6?A`IVBI$]Ph6>1JCHeV?lOgPfSK4d_p7bm4[q-E>+n"kJ@N35d])"M(gK?mq-B(=Ppm
%-H'71VUHkhU3KUr9Sk0O.iD)hM?(Nq"8RJ'/-g/3ct&*[&VR)nc5is%BG*42Phj)8CV-Z_(#8fM#S#[-YJl*T"*]S92R&WHO:aL:
%,tj\Up3%smR@'L[<1f+`:%5_2(rP7?GE?SL3&$EPOC4jHe1+sa7._C;cO@2;4<cOc*68HH+Q*N<enu5J-I5+.bXqst1JN0mM$lX2
%/_GSYVh#'Ajn(%!'Y8I>FqS.Pf#SbhOg5<AGu5s4T[dOuYo-jsTq_0J#;8hXJgG6C>a_#MBsq*4[*Ml7X/op2]:c1b%MOWcls(dW
%Ye?@)6MT$/oHc-!lnt9@VJQp-B1B!>g]jFb'tkgmi3AARdhd;$C,[qn(c5_R-8`ug=rrm@"Ar9aEDksCN25Seo5o;@k$h4I947Ct
%"Gm=BNXBV:r-b8r3AX\pW)J`e&fLlEeA;Y^BE/Rd]kU_YDf0KiJe:`q1^ls;-?:.56F,-]LU9YLhF!J(AGXQIGE>E3ZA-.`YM(0P
%CC?1M&[#1n1T!$0#q(XA9PJX)d@,cA7cJ[Nl*N`oFl6'WOpQ#KU5LU)&2CY)qEVDse9jDV#QkHu96nV:j+49\G&W)1FAo-c[qoqd
%kH!':c!D+kW4:X>R]<A`lknCb6Pa2YLk3PM!s`fY.m6FnRl\bS)6#%0FH<9"On2F;'=HZ&E6(#e8um%iq<"5%/85CsKHRIPBX]nR
%KbtD<ONbe`Z*)Pm7"XjB`C#1nPRMUMc-<nbfEoY=X[,TA7-/><:R=qG.CrC$!p-N&C;^mF&78$h`Ej.GY#<mFK/a62RK&<bSR,9g
%2&fB50W_,Xj313^iERN`(/qi8ndnCO^8rdn.;3)m9bpfen$S-93W5%hR%a#nKYWHF?Q\:62.%M"$oa's&2^T4!sN:JXNHK]7h[11
%Ea)r_%phZ^fYTajZ+H1I5f"^iQF_%>79]m+i$_Nh%CmZ<,=c5-"P@0!2T_qf+:lpEKG;!6B/O<^WARKrCQ"I"1l2?oc.`DD1s68K
%-1)D;Le7(`?%Y4qSmb#%-RN;*7.I#'gf_.3<8MDTedEBXNdN0N>LB9XkU8SVJDZ`n5Z!a$/Ucq9`!7/'C$I*7m01K4mgg*#FS3)*
%/g1?`$D(,PLX\Z3s('&!$s&72%GMpn/Q-:jp)E;0ip3pcJUp6U6ALgqQE_Nh3GY],7H6^2B/'E:]T`nP,9RX,-tK)s>%KJUCH=R<
%(eq3F@P'/Z#H\1-eQ>e\H'8U_=ioD%f#puO9*!L$W1UW<e59_+2j@CS<RI3&lPb^k0$SgJ_5b^D-<Ibjh$4i1<IUu_OqW6:eCq3s
%h?"4SYcM>IpL:X_n;'q,,@I"JM^W05(4EL@ISh9i*kb#Dq9FrK$O!i^]s:8XEu["<O[;`EF/!?'"$p`/(Q(!T\Inb\\HEQq;Us"t
%d?I,%0GRaAK1&j`M/eW]<6<U?iC;H$4Uep]k7p)qOZa$a&8AQcFmYU'ek$2$9mAo4c.0iZZ4Z10MO,"5`h:=;4psM_QG[=H7Np5U
%dZ$DR:uae^,H#>bDK^%36j)20[u"Q)\P)X3-Cn^$<Y<+fT#+'18qOTA!fIu.bQ,'o;4U$Ol"+%lTG[Oj@Gil(fqpXm$-'I,bINMD
%FC[+$`/dC!_jrd=WD;BJ&e(&%*Zel(RG`j]?n,&j%AK:A7&UB'_FK;[J2eM\%:dr%Od+X8L^;uUKV3f;GD)k3H:YX?(26RX4K`*i
%(it498dK64PQ3#(08^4F9hg:9&R$OT`i]NL/6<YoW;*C?`lN3/P9suZ-1#>tE/jsC<d9!/LP=R(%sk5E^le^Z=bYYh$?m+T.iP^P
%!:=;ro/NIg@RP"8[0o(e(F)&34TQ<98d30nZE+lrb.(1hWa1c'a@X9b9r]BF/Z4UE%>1/H](<`=,9^&YEk=_NY3FG:(-.Ou$"pnl
%VRi4;NJI\^cO9hVQB_!H<M^>B-YGh#QH*pk-Yis585Cq3_0_SFT](E6Mnm!#',ln2,W]<X(IDag3pDOn_?)2LA+7JnGT%W:C?IY>
%N+fA$;>bQE6M07^:)#p3Wn._+=lR5r))V%G,<Q8cAH4(/6`)Sj-lL,>s/N,l844XgfB=t=Q%A&NFV9AF7=no<?\>3nhV>/LAZ&N!
%g`IAl^n`(UW>d/0j6,]$mj'Fn%4<8]!)bji]_EID5aMLr"9r"69NPc^U/=@P'nPK]O[^#HRZor9"muF]E:E16fA/ZoWOJ<>!AGN7
%q51=g%9&-XNMSn1(G"!+`0+&*f;Qhga*!FTh.'PPY\SOVj\.r_/0ega,Vt#hem'8WX!'shB%jZ:`lhA-O@HsLcm>9In\Okh[j/V?
%p!]t>OdDg$8^F"Fk3?Yd+21lr_jg)o[!NER4UCN*LSX(K:WQOHU8(5N\uKb.oGq>R?j7K31+V(gTqVcN8(USZdeQH<]pa\I5pQnn
%nAZ)eLnGurCmE@7?qmk>:saioC/p+%&CA>OS%CB<iajm7\./DL85RqKV/THXm]*8L=`Un%M0L)J74I_/`UgZ,26Ybrb@?K7mfp0^
%g`7WcAZD&/Bu$,GZ+TcZ<@a-"P\)b7.fpc)$<U#unkaJN$W*Z^G\[mo58D>9<LrtP-P*)=n*M6]`uaKEH9%;5_\(*Y]qqaiQ.$/H
%S>f%ce7>>OO[fad*)rq+*m]Q`"eR4(@<(;;V[DKR`ok?-*tOe-'NZ6sj%4iIB^0i,m=t+6'uqQki6@!9*api>Kq`(<$mIA[X#(l3
%(&`k@?>3"->adL@JTXZQHm4P_i!uJ0B9gIm0T$;M!$[D8OAkLo^EJT'SIbl^AN[&V<5tL8j(0`</56p6>KLc!Z?XIiTK^b*'JErI
%Oh+XPn]9@91QG)eiN._!\Z$bo%MhT[Ck?mk#UP;8<BWHZO6M9%RPEs3iLEp0n=[,o1q9OD@9QTlE$C%g,HVO6`i=`*9TqdbCZ-.U
%,6>S]/Na,*[`p$O]Q,Q)rf2gP*Zc/\-rItQfH#bdBOZ4]P-Gjq'\bI#iUPqVkZpXFN6)^j4]TBU+97*h`,HlB&MQ8H*8XLIdDM/W
%'#]\N*hS-SY9o'<^`go8p/hk:V4psp(%D_!8SA!pLkcTLKU=1I)=Jk\ZmjuP'&Y.HTnnJ5;'DrsGQpPA0#g0icN(L3<2U[.iYeD^
%nDZAu4>8ECZ_L+OJPc_N5uU37O?e)k]i@K`:e-@kAsL:jPhMj2hcLL%e5N*nVi#^M?jE\S*c>Lrp/DS6UeN+7D2NQBKMciD:)*4,
%'7P5D<^f,<5m'B[<>!R8@"UGcW?Rq-KVSp,,+bd@*)."U-!;Pb#!k?sAWpW<$K@34MZSWC5s.MS67aik&<Dcge@DW3Gg%"U%`_N[
%&)L=iUc(@u6TJVuEiL<)4KkQpT.&]M#>R<H(%FgfQU2Z+nOP$_m+\K`StSJ6W2H[?SoNiK1E23rL1-t)%#T;LBhD#s`']@tOC5/G
%B;lQ0_k;fUf<b,hJp>?oE^%O;(qtDfiAX%bdN_ZTCEeR)Q3tc2W$!/W(?mTRJp:1&c%[F6'GFMK7D.S^<=r#5)Jdi!94>)jah91`
%%5k*\G>cme_=>krXVfQO:.`@$Jp;*Ae?TD?)7hr/oq[1akaB@$4V>WM*#$V='uWHtN+@jI+J'll(/1EY+<CTI"lQP8Gi7`r[o*sZ
%ZNR%tT*jS/.a%D:%YAr`B4R6J'uUc;aaR/"Ns(XjYc$/\TQLp<Z3oS/k3mu5Tnm?O;adf=ih=<_>sBas)(*AMhAn-+JY>`T&#pfp
%M9SSi2,V9o6%a-,=%,5#_1bl$Dn'qaL^.)hOYj.sG[PJ(^K=LS_ceQa^(Wpt/Bjj*;&/W*mSRS.WecGdMkY;f&^QP?2"cJFSfqBQ
%a;^"]L7j;7*0D6O3sjBC-Am$rQ%5nbM9"rG&?:n<fVcem3L.P#4t#Eb<>*W&>Hq7p`%t`]m&$LEL13k3%$Gl%8Z$o98N]AGlcs<;
%iaMY\4C")g_cAA,I3OM\&Ah5JZRUe:Zc=d[Z:a*oR,C_X*@115dR\6e_um&jJ1>%l4IjS4=B4JPE"L)/+@*NIe4V:8<")QuXjWkr
%#B^TQD$2:MfQ8k$%4+,s2\u]B4;\4X$o3&^<%5Ga$6CDSOP/&Mn;mZD@Ap2W#@inlck?^J3)5he?5;s'#;$-fOqS!]'Jo0k.H$o<
%:m/I@i0g`CWegcuMB1#B<<:F]OWaMeU4A"#d6!sKi1WO%$*=8RYWJd(>4q>te#7$,+Fj\,7RVP[rOYlHn5]MVat`lJI,oq/l#>4I
%#re-aK2kUq_BsF21K/snLQ\HqmLq`Dbb<t9lQEc[;IIrr9db-?2gh]8LKC:c*lfr_j>-d<[1W]+@2#$b8tn1-H3F]3n.Aaeq=%+i
%j6:Xu/kN4>62Z`WI"m)='u.)>/^^(,g->phA9,j]r/P#W,O%9_02sWXp)Vh8Z'7qimpL>4gp=$S*O<gUeZ!<@_1W8Xd7Ij847Y_%
%fgM\*:nY0@A*H)(WruoG^LN#*)5Q^pe_?Zfhr0cuF4J4t(pt2iV7#XNA!sG\&\hhE>mu/n^D$0MQ-Bu29q:/+S"=F`#]=0>ERhcZ
%Hnm,c<Vt(gf9\CkmgM?WoRJEN#RtZ@5tn*CE$<Kt-@LYjKLg;gkrV7$";a"mmpP@)d/1;2,"$A`k;K.)$mQSJTR963".!7l^'!81
%km4blHtR3<IoF';Ug6OiTR:B=V]h<=jZ=.i!bof$-n.$]KCU$TKPb.lHj:%3/1"$d%OIQ]UWRe8Ue#p*AjGj^g`NQeSY8^$fF?q(
%QuVD4;<9m((st<AjZCoEU9CK;G6Xd[WUc1G8Z9oKlr<`iO9qKT:&'`A-IT2gn/]^\VAi6pmgPVcq_T_Y)%[GuV*u[n/kWc;H\Xjl
%e#>N8'>?hjE9(!W4%%0CA2f21pem"C<8fnW59uMo_KUb,[:Vf#%Q0OHQE#9Z`4#;FNHO\d/DA$BpPtJO(j8XJN[:5;0F$>pdj2u7
%mMuf:9Ef7DG6A.UQT'$T?kNiV>]oM>S+V?<I&_O+-mYECAFE@[9c-juN29S,+F7\Ac"b+Mka`m-FnC=M*PUFl/e+P!W+[PFF(<TZ
%(3=&iU3A/^A9o!(@nH.<L?KYZlYKSJS8a\.UHRjl`hIZ*VE_YkhAN5!IoF$:&2%SYd7!ZQcqb7kTR)Al.$O=mllE81@H:D]c6-5o
%7QJplL3GTlV/q;sH;0BgW8?Kl+CR*,p!.e06'tC>cB,^qRLRe/S8ubi1X`tSV"UJ\S*Jk(=B$!8nf?;6kYsF269eRE7"03OI"u2(
%2669g8jjo;.c6AlR=:KZoGtZ7eDjR*%M`JKr)ENQV^/IN&H%;ldOE!NQ+k/BaJLmn^-`"pSl%_PI)dOrm!Mh/c@kK@*\6-A[#\KW
%.,P>_39]4=F.e;/U3hZh:-K'9]d*,4,E!q\GM(C^/C\e1#bY%S[-HKcL@n$JTmI"GIRCZaWdBNp'f!^bm[ZpL8ZrKYiDtfJX29&\
%o;FB+'u%ReX$WC-hgs6A0Y+33-Q3(FChV^oX;mX&qi70N35IK>44kLd$Z;tm#J27%3NUqYJGhmRXD6WiMLsW/'C@knAhZ!AC>[tb
%APT-4m5s<Y'ZmB/GEf*5RT7B2351X^a$fe7#+$W_?IcalW^AqKVL?KYI;4sA[-s+.cSKgp^&oi""+n7ep75bEXZF0#m5ohpKW2$E
%*E(65A^RmR-o$i,`Al8Z6a6XC<W(.(@nhS=&N3,XRZt[Dp`0fPn(f+8BBU1VE=fl@AF+s12A*\;/;uE/.Xjm1#;4UAnN4&;;PUm^
%h[pkS*)soGa@r0^:pb4R!,](WaK4BF-m<.s'>K_VHD5q"nN4p!#rI0ihi[%%=^b8!40g1Mbod`7"AQq_Xl=QkHn+>T`:'Z(&c4D@
%h_Fepj(9KaLL`1/\ho6#O]ElDQDTas__XX$]nuM)Bo,A1=N0`"r^D7e.Xjm6,C02hr/M*nPT-aiGKej9DL7Y`_fnLG3ZQ?#1&J)^
%KDHSm]9"pGeF+ei_Z$P"G>aUZTROpcV.?ZV7t)Og,?=Cu;Nls=f3%t]`L/3$.Xm.LF:eVWice'6P-`nFr!pC`CLn6q'@i6#&)qfC
%#'4[^I>?JK84gn&IE.]F3gIEH/A4`7M=_g0dqJ_[krUY?':#cTG8-`[2b_0Y8F9%/d40T8bdaWQ[iA5'A-%f\r/N/LWfb>^k)n/.
%0\i=M-O3K1d]!!_Q#7Gt<RpQ:?bdNEM>A5Q4K?c8&.t%]Q?fd9Ij`BA^"^oK"!n9fDOUQqW,SSq!o>7VE#15!_&7B+pYmWDU4>`8
%0%RT`i(9\Q.]WUlejYq*.9S#9onaOM<X%ukDFE6o$K+dVL_R0/"[!,u89CCPi),[cf=[JG`I)3^9GHu@QL5L%A*c+6r]13^!Ujbt
%+21UEVug<$O?]!0rTqkulT^oQe0hLDT]#.NStCF6C33T.p$A*4+0N@1D]/N8j,a39Q@C]]r:-ifpsU<\:<TCrrofR>DcH4iJ,\QK
%?dE)^q<r%RDu%k[X5EpOk4GbQnQG\'Mj&)9?`r:k;Pa[QN]+($IXQ85nmX21DHEJ.q<W.s,Q@$"VmgI@Yr(=hT:N]EIIsobp"fDk
%muL6$la8)nDn+rrk`&hF^&]&KIS5qds5q)Ja-VSEn'>=+D`g/^na8HO@aFu4m,[`nN64kthGu4&fDXk"MZ%Mbo()I4.d;)f?('=1
%PAaf8cDXINE*Lk\;jj7ieDmI_Y/3mHCKuQ8gHY-&c<XWf0Ag,aF*AR.XP^]USMMVYL"klh<9O5EqWrHTGGXB'40-jP^6K&Y]BaJ1
%rll8"QUfr:kH*t/MmkV1auSqYC410qDZ.V6p&DZX]fB^CfslK8Prh)-lLO$,pnmFl<5EdkmdDO$ZT;uEoutD;VAbiVC2gX"Z2XW+
%ZY]9m\+dcMYB_L.2pK$m$&GXj2:bOJm]OS*g\&P5jnZlS\dXpCX$U0a^V;a7s68P,mH]tr3F+JBLUKBRStEcCHiEHoEo(n`Up$FO
%J+j1qo(i.4lI3F,b5(-I[iFLQ[5,p&DRZXM*9HnX./3#dW#Sc3s*B.bm\q2gAo(LpGaOtOVClMljXdm2jd*7.EgBqTEn?lD%bKUA
%:VV4(o^_p8-fLROr[FC\AlWG]c8s;<'0,C'X2NINn&P]#)!GD;QX)`n]XrReq>0t%NA6i0AWAG$<kZ4-I=K^@oeTC?gU%%]FS,Rg
%]9B"r_jbGNgNN1IiV%<;)Ye?2Mr:*dbZP!Srj_:CA*6pso2i-PXY4U\%=:4h^L5mkEgG$jZbLj:n`o=_rRLGcko9\?HMP"(gF5fe
%6n'1LT:TEfq[]lK5*&G3c_'@M;6F,hKV)8(GAl*R?bF-fhWuI2D7UTpXOR+Fl-[HlIXHKk[Q^0ZXfJpIXb-01p\asUh<!%tl8RM(
%V[&6&kj#_sA)MiL1s5i9na'rO<FaXA^gU7q*qg$?=>n0ck9jo/0BOE+^ONoBpe%IL$f,1adce4h0!KR)G1JGDFk\nQj5nq$'k#%i
%nD-gIcF>ZLd14o?hmkaiE8.G2S:7sS`0o,kmrgq>fg<F-iXU!i"aB-R_kW-RbL^[`QZIPsHaP@fU;)(K(sV0/7jg6e&=:X]57bU)
%6$i8OVW0>qMf73\ah>')k"i@^fcQ:O'hae;_aXA`5<h@q]NDB;G6V*_o-$<4P,&Pn">\e4S#loNc)T(7UUW,Fn?h5Cbe]5`mu*s-
%-h$4L)th'bFm.#4e"\qKfKD?d4dAjM)0ORNTBr*I\;)N<<NGllipH('e+7Kj/D3+0$sAn$SR9C._W(6Q;B4k1/hN"504RX>JU#gM
%M/^'j]k@+Ep1Jh=E%]Tt-hn`Q_9V>#SY$a?XK-c;(f)ipIn$C0*p31B(j&Dgs/ij141eV]bJpmO"9ga'k_oc!gt[hT-=+h6<4a5;
%nhdG!)8g3-XFWBsfm/)*B/<dIcX.cbSZP]&>+_sYk@$h]DqS1ir\hYgF8u)B]k,C!c0$JChOYc/YMZG-0)otaFt^=pDH6_C](/WQ
%q<-R^b(%^AHg6;H]nl%QZ9AAFg7)[Pbu&cAN3J,O38VpER=2?=T-J(D0=UW"DQdubqI8'SqOCg6^#]'X!JKga&iQXC%mB6&D77\+
%W37i!hoppjj(7!1b8IX#<2K<Z^TmobensIDD,i@HA?(Xf=E>m+jJm&sj6Z\["tk9+dB3/Ppus.H1qIp9e`pc=c8Uj7RKK>-Fk`q=
%X-mt?Y>.hgk68JhDK47O0N-6[R&K3&X2F2Dg%oAO:<)hOl1&-+kChEI0&9R)N_Y'`qJ!sF.<`SidD\e;6E]*EPqLY+(M9ad041;U
%SpWb<D/5JUoji&aG4K7r@f6,DqLU([bk<S@OXN;25WaEeOXP9#ZS1ge*_2sKl@tk%(eZ-s:.(:fBZg$&'P5Z#gs9)e3QoCUCd!+d
%M_`2Wglkj)=bCJ`@o8hP4n+\F;<ChiM+(QV;1=AXk"3ReQsW-1b,e$BkEkif(1fuHG]S1C?S(JjO%#Je(V;l]T5#q"nPb<6R8]N%
%RIq*TV:inVRTY&aO&]\ZIC\7rH*\^-QCc_nEf0h[Le%E$D19<"j"L>#S1n;70LE.-qpuh+DdiLq3ap^*'48I$bKR8ph.L#ObITU,
%$'o^N=kAs^D(jJJ5?sG9`E[ank1U`E\u]YiWqPabeJ;Z^8Ju<eWj]!D^Zng9lk0)?$i]O!CQ]Q0n8hm@HfY64VU>@?;-KjEN$_Z(
%d5$\.@jZ;u0I%K5.fHhZ!K!Re[q1Pa`So"(+4mDtSf[k&o`Jh/DP]\7\,b,EY(%g30A!C&c>M45S4#]W>p!@$5)UFlFR?O5s/u1,
%s(!`o%U[;ok-D+(4Wu_MMtNS2)jr&HNQpS@>B$:k?($BQjbYdeChM.%R87\/184Vi[jqFXe+2tu^RpfVX<&b0AU>edq_5bNRVDE$
%2#VlSKC3pBF(Yf=mnFAn]^#D5_t`uD7BuG%jYnekqs$V=3Fd5\I6KiEoCi)f3JW+Srhai'B<Gn%>R6qQg?muO0E^\=mO#kgg_mV8
%CM)ag3ntDR1oZ,^idlDF*H(G+:$UY\]-$0O,2[6W&%STL]^pL0dDa5hlSn.Q3EuDfm>^kp<;('fHmJ:%-a?82UEeciIChGS5YJ!3
%ir@h!s6g%gnh'ju?!VUis6oCms6ntII@T?_ir?];jkQU1G>Z4Zr4h!e's0uNJ8P&F9M9Erq<fZ:[GuMRiq$H'^5L>3hH'=)U%Qr0
%.eLj5><=@Z3%:B1HM.9nqYBqig%`nUba^2-Co__DX\Va=J%3+JV^LB9^+:'_3sMhNN#HTjYViIi`_ug8i`._"k)RUKjZC3MmJ9SY
%'B'779!`=*e2,%70L@[521,HZfckaS^gmgHG5p*$J]S[pCqCJ]Vr(g^f4U]k.rkN%fn`G<4ob0OPOm8rjeip\Q_0jV*1bpLf3[sQ
%D/?V*#+Tu2^F*sV?f!&?2]7ACb&*-T328P#e+.9$IQ"c\b:q3(-Tn]LJ-ia9fTa_DT^b?cdCgOnAMJMJfRm>BLReVkhS!2:(E<A5
%d4trMGLU?Os7#('E]0?i=^JdQCDEAE\(%Up#:=fjQ3DM9J<pFa=b)hBGZfQ`"aF1#QTMZ^^aoQ"-ji?>AH?+\p]S/.0D>KR[V,4q
%SN*74!Kb%D"4(9u85Ch6p;t]Ug^@Xq+JWeV9`%OB0o$lZf?#B%&2c"L'>%+s>pl,/+,IB&]Af##RWq4LO"K&MQX:f)gk`EmS)Xu3
%BY1u=/kesNYrOuO-Dl-]8sTp,pG\>Mfc(_3VPhDKFH:lVfU!BIV/6[jci3k8=0IZkT)Z$NeGNK@MOmjLrX<\H,qFIX9S0rRB:g=]
%q/V3f.50E+d$dmgRo[g+*Icf:l*9i\fD2IKn(*hm%2\>s1RI0NS+C!kNk`Ri^k_RMdl\'*>0f<2Z0^S*p4Q4T$]XKXSC"\HLAUBt
%G?=-dPF&Vm#PG[1<Q<:_bj4r7d'\&U[]8rCKGi=.A&E64KV)>&3C`q-$]_J*-\8ec(jgA%fm=\`562a6:)t)i@qSTKq_mUR*+Qf>
%G-,Bm*+Qf>p'A^K4IR"C[%J73_9[N,^nEF9WPf4lD/VsQ?<nNk?QPd;p&&>q#(YKQB;O>BGF%sam/<D,9"i!3Prh.CG[$Hu%VDs<
%HunptrPsihs1D^2*R?aFD-XiX\t,CAFa8"QHkYp.JNIi,hbR![p"SQm?!])uL?H5r)O`N:?X92:RBsg&ZE:qQ1DZ&MB1uJ7PA]`[
%*?\%%;Ck2k_$kU^bO[afeG8fQZ#D!@>Y272O2h8amR%rc=MW8?hd:d&rj6L$q[<falmFaAAc(_-Z]5?=!nH-\a_LoLmiELArV>bf
%!W)YiguS\lh792^mO8<fc)T"E"F\Oob`7I+c)JS/%f!UdX5XdZj"Kl,1A;69T+R-jLJWB-@.?GtMr1C[\t%lb=G"_!mMFcFQIFW0
%R_riW`a5s@k*FKOEgg3-F3A98Y>0.70Xb^#:W+<Gk@W4Y3R04s\`Gf[*9WXJgiApsHCXk^kN=M5]f;H:oTuo>DOfh*;``+HWm'=i
%jdqkfE137tM5PcnHYT8Y1X6:7+iF$"h(o`.pI#4'ms-2pIa!LI@Lm`1[TL)<ZZnVA6,n)pgXC2A'E.]Us5rt;pq'=';KVp3kkO60
%Vgk=m)nrr^l#[E:X4M3(gp*;DBHGF"cb<)J5@WR<jXg6^SsT]Bgsl_;=9i&8e_ZG\p%d'?g\+i)Dmi-a=3!h;%"ZONgDX`]C8Ir(
%cd0q9;Ej:1Z['U"CA5X3=\Jsr.X1mY[^C*[_9Eq-<PKC`AaeJ_]K/)[cQ/8!bEi=tc`5!$^"pBTQf]e(5B3D2j(?NKU]3K&o7!!0
%WEm':Nf>inPh)bof1`]$FR?N:`'nt[S32jD5(.msh=SZKhqmfDo0^"n][0Al0<Me(10?)[/ZqhB&f][HlX12E?`j,GIXHKk[[qW3
%\9c=.T9ec_hW)+fop3QF>)]1G1l<'<keTLE/"OS)D%nQ&aubX>hofh<N1^@@IRHQd]:5r@G6T\Rf'o-5H%1#O_:#+hDR\qN;f'=H
%%XtnQ0P;p3DMpTuI,&f;GK$>8PKVQrf!E:3p1ef!C-fq=-^S0]S_SIC>W0VC?I3kDF.BSQ0:V!>oY[hMNqYZ$/0![<D^`fc\Gpp9
%4sJ(+f\inN4ccpmlq`*nl<!?6Lj3)9gimdsm%ZrA$1\]l8^4_uB9q_:KpZOHF)'7iJ$/ZM/%N7sq9M'l="i?aeUH\jY!82`hq\pa
%[?!E$S"oPa)2'j@h6XP:Z9(4aprdLhg[/S3Bc2:oQ/^io1ZGi'L\@;aj4Oi6Ds'\ISim7CN5n;R[SiYLI\D/AD9i,D-COXjmb%\L
%acd+;]8&,So1K-i#oIZ3Il+V$-fHK,K>-%7Tk<GcU[P$B4mo6dfnB5\MtZ##IVK8a5@:NGrciJR879_,3ecs9#3LD\oZcXs5N^sd
%PH21Cg\cl*"`aM2rRp_up2V$28?6X9%(#mMAq/O\@:khECnF2MiDtRuGf2njoA;3]cJH7'USP,HA,b>)q$ZJmgP4ltf[2J>[VJGf
%d)U:B_iV@R:/@2icA.G3-,f@o67a5C$goHqoUF2+Cq?hME;$So+gESkkj-!TT7'k66B7aP>(4!\p>g&fQ]FB-leD7Urpd%]hL'Bn
%>/$hTq=tQ%([G.h^\bNFIJ32$h<LUsI/MChqL@>d$iF(crqY_Qq"=ZPJ,OR?qdF'IeR)AWq-VtCA\%]1J,B#9B;tW;Q27XJ#cfo^
%*V+c>]rd!b,h_b'WOM:<\h9%9b,r^s7t9,p-Vr^Yl?i:nm\u6dY2K1(:XP@!*rS7uP2Rk_CPVaKs7iA,DpSLTT>T7t$,?GZ)>`^]
%lJ%5lQRBa1>M3JB4R3Kgc?.X?\cWbS/[$h0Gi63ZpY)),hhS%LS3?Ap48s\0J+1\f?1bkDhW+cW;d:?/-@LS$3':aGr#<5Gr$c8c
%?=\HoXtTf/]aYSR-uTLTItA2:TCIt+Fp\2)2Yg`]s#_42/6VAEdKFt7P8';>V3BSg?12%q?#Fr5X8/gQ1:b$pV*;Nho6D>bHqaKS
%ZI?G]]02Xu7W0@9Q7o;r?*=/OqVq*DD;6iC@WGV/T(0S'd.H`"n4"e_j(tg7:@IWId9t>%H!rVuYN<MHGOp$*2Lg_C4PZL_C@p?.
%-ae38*ri^!I/MAVAEa!`ji8I^eSfrHqWImj^5UP7F.Kr,U&H0X-C2]ko#ABP'knQG&'F4k`9ADVcEMB5R-RjT``)=Q7Gd=:BdM?*
%k?-@4:]-Kcd=9:ZqR$+>qEk"6,k%^>2ghljR<4NE921hCja','5KFjXl#`"-Ns;h*IiX9BT+'Z<@0"ma51A+C^T&s$[KUe&\8M.5
%s#Woj%TUL6_gtH(Q-&K8m`h$=DrO&RASOF[Nt)XE,FUBOD0`Am#CZ#^%[N05BSBP(Pk'g7J!NhdAZZ6P9H7ERe=gTZ]=6;FK[S2F
%i.8-kXU^CVr4Rl,hj\tB?q`2*554RiLYhX9D>F#5R]efoPHEs3:qhAlnuKNQN.*Fdan,+/-j-QPGqua4q6"8<eGFk8U8pr!:4Mo1
%NB4R:jIl,+,J-jQk8TV[<'6u#@;FnSpOVXkb^_TIjl^V(YJF!f8nOp]VZ$/C6!kC=h=+8#@O]\Db'`FT$VTqWIVR*7;RVP)R.X+I
%5Nn'DJnrO^OZKY?+Wa%hPnJdGL@NgF3kf/Bb9e!p9o7o_bJn5<mc)BQYDhMI]=D2';g,9VI/-:>V:SW`==0:nStrpG5qE,5HpTI1
%C0d'D>^FDC;XlLOK6-SZHX3%+SW@>%4+(.5pGn6un@aU`hqQ*P)n:.)>h4ulLF;-W2d[B=q/Ud<ps%E]RY\2Y<l[1l]g$kSHM@:"
%m<\G[(@^d4)9f^rDd;#`L>d:26@WQ]^aAq\L'u"fI!$Nj:5r9o6E,#ZbAlI]9GeDgoS0H^AUKfP09,,J-"XJ;%EIArTQ<C7MgUV'
%a20T(armkAUd&h<EY0b&C1OM!G)jOFoN6164PjU$k]j)nbiLpt/9;+>R$*h;fgK0p'5HQLCGV[UX%>sY($nDX[dG_G.<-i*^.73l
%.[@23*p-juXo?I:ZK3[K9Q)J^a`V/_L]5*bZ5>a2`RrYY/0#on9MT.N.pFIbOi?ODQi^j?k$i^EG@t%^6=7sR>ip477BA&`+84.#
%\M*>tfeKu_QY47`V^m,1*FlcfdGMJbE8a0VoVG@K?Jmm_lmR-6Pk_>pXM=>,%"Q`jdpK=(g69NpHZ=g4;#\r(%+'-%7Q3BA>Eoe)
%N:aV0b>9R`kO:BODRmV[r`IANrXg`-qsB0jh2XXmlZ&lUk_\UA[,4%t4(T;5I2ne_%hCld5(<OoDs*HS<(:*AmbHV?n6OY,NH*qb
%N]L639+jnec!YRYU)1^#?[J6bfCYDNj"%%BaosFFD\+`(!GhUk[&+ub:sVSt9Z>O=eI(nL=.=qG:4LBNB/b72=ab=8IX]GQ144B<
%j8/Dkou4!)nYMlms6&V4jlt=oo#>OU4j/8!FEtF23;^T2Hr5B>J+?KgY2=VDLY]LHp#FfuMp&k:'^*cfP,Ec<ri'3F=(Msms(<NG
%fI)/Q+.Z#I#Q?i2=9$h8M,5Rd^A-0raij_=*YY]*g#(B<T"M\J?pBXbDmQVOQq5&algUL\]RP-G]KeUfe?_D'^H/<KQMDlWA$/-]
%jpKUJFp[HuB[U_64^f1@*ru&f?Pr3&$G4)W^);+a\&1@;*o)rLE6nL?HO\bOrHf:IaURYmNs,31T+1Oj)rMbt\o,;HrYL36r-Z#p
%cA$\_0*Cr*kTjMh?#jbc9-1o4MRqI>qHJgM\;'^qHl^osqmD3#?V@W$5s9CBH9M>o1"S]SAq>7DW9<#6%gW'q^7i/i5W*+=&#H&Y
%%-S/)*n0VK@L$Gs"i_*M]+@>CZY6kIX9HEj<0DYme!FZ(R5fM+L]2\_='<X4ndR\GV'sO@>`>I2F!#FQBS+IQ1/`2,/sd`^';I+t
%Z.EcDn$AH_1d0Ln?0[pq(:u-=2Ge"#4YN)HkA6G:ECQPX%T3dOPUE#Ajh"bF]1^gi>cq*@G"\7lQs$^oqXWb0#qKnX3I'5!4=gRb
%]2hJ-c>JqhTttVYAU&OsRBTHa9.uL2flsF(S4-qR-AUhF.Of_5\#+:J01?35%$mF3^<,S]jc#II9/2:8,d)6#<9T2EUESj?Y4"C:
%MbTls;:_(?bkP)e@3+J$b9X9V.m&#KF;`e3B"E)(l)]PTMiD&eVd@-]-4["QR*4nrD-6EAa%6#m/P!Bu^5<nrV)q<d)dSK+eJ5)@
%FBu:O$nn3:7p-<L1ZVnefs%#%^=_4o.C$s_d`pCZPQiAKYL#J\A]5>[3Z9_8b+rs3AXPhq(g_]3mRo&K(Fk"sn&^>@Sr=7gVPot:
%4Ym((g&#W#Z+d=h6(Z\<DRP7mcWQ9,@mgl0om'Fjr#KQE0Den=gJZIdn)TV/%#WG)1&Y*%)cEUJ,'6_IAK$k7UWZdnj8O]u>Fs$K
%M$qL9;HJH*s&3!k)<;&+eAMP3l=J\V"*i=@m",V_/tI;@>\0SJEi<9c$C,Y];e#$NeaIN4YZZ0F)dNbJ>=rj89"Jc%V*sHA%RF-Y
%dUJeKK7caegANEq;9GYMd6>XtA5$3!GT8-\Z-.='8<alCs#!q;U.cg]Eh*mj32`A4nnO[/B((pe1a^bBPKReh_2]?(@N[pNA!N=t
%kuqG[%4s,J'%PDIX<8Qq>[PbQ/5&QKeKF6XNc@87eZ9Ui:7'iXgJX3g;GsS>.u+FifI2e4p$]hj_O.^DNd)'jq7)DakId+I6e#jl
%B)IRn9$lO3KJ!i+;h9`Xf*apX+N+XSr+eZU;h"ro?;8i+eH?arm2.=S5=_ZVs&l;)fbQ&b"1!7m.\&"M)s<p3rH5(.m.VRHIBTB^
%WM76i58#I4Il8brY=F:X;J`)E[#TSI<7oGcL!=F5fKUi8*%O.@Dh2P"K4hk8:goA3ij8%g=P/?4$i:MeI/ip^c@.Ec@4t-#,/\:a
%L-GYUm]Jp3]*0'YOPp]V!eeC*RW3Bh9&-P_<</8!HaNp#m.MY\=0/uQOVL!RS@jhW's6Eq)R-.0AmA<hO@Sic#F7<_R(WHQ<qk>U
%qLq[0$#EVUg1!<B2/oXu[q/rBn;FSh3AI7EMru_9?:nMU-j7*sl6I:jJRTrl@*>%F7-9em3jnei(fo]R@Y-_GTB0NY8BCS/I28K9
%$:XinT2GI=o8$GUR:+9/iPr>9jgNA?fr0Ef(aA4YN#(0uc$,r)T!M"(:R&Wg0QZ(Z7DO3ggfF9soa2IG/4V@rhKqa8B:6^spV:/o
%T[Q>V/Pm>q15pS0+$eQlGZcRhk>I")A(fT724*Fk!&@PnoWG)4hYo>_n$^F<FNXR:D(*Lh[]WA$>8@\U3Z?p2JLa&WZkZMl:uSA/
%bJ`ojkV12ad(ZG"&,HG$:gk=4J*$3EpJiquJ,j=kR<#YC2g(EDBKs>K`I-+;?k^QbC+"SWY.Z`+>@*K0\D-G!mc!!JQ2^*QXI.Vm
%"4MC4Fr5%qb9Nqa(noOBEE$JTCp;m6[*WLnX"GE)_RLl,LsGG2j*ZR#le>drR;C'\hT8q/CH'acd1N]U\ftZ(a,mFD!bQRPX"0hX
%@sM6[7Y,9&WM(;fCm$/bENj1&f@?2>V_!bY136_:bJh%D_C=Q$eN1*L&L`[=Mjb/M.k84PXPG;[ppQl$?#?kKQISrXQa/1-:2m&K
%g9N+ml_uFPer1j5!F1DkMkSaE>r8DCdgiH<&)b?X/f@t,D=q5H0E=mkaU$p&$GJ,137OA)A;%C%Pf%.cU9Umc^-uLL6ocn[p=$m`
%^H@*7mm@31*`hki=>n?ph$Re]ZV)+;_mJH(9Y9VfYkE&!'\V('-K'';JD9+nhLTXt3_\i8\2^r>j4sVpSD-4_c7SF)($q7WB+r3F
%O+9Unq\@bqJo1@SN[[#Q<pd:pT8b#\d<-ZJgl>5#nbYdPG]hq&.(k!&UjgpIio@&"On&.$!?RU!Y/94_:DkkW["4A&NN2/]eOO<K
%E8:dT:F!r.r4W1jQVSO[jr7<Ej81/l%hGH02[!;cG]=^:*@>@SNb@QF\96L*f"7VIa1jPVp>N:dS6`C].F)hUFZ@"E3#^(+*m$8B
%]9[<R@?7Q3_<tB;cR/?<OTug;g"j("HiMIVHWC^5h2k(?$%f&UHk2*c'0Ei=HhS8%pB1&:s-FePI&R29^&d]jdDN5Q^B&S_Y.ud]
%mV3*G3#k$4)oAji"5ZO-T\i!BrUk-'hnTW;#%/:NU@5(Tn"Z9:E#nit`q]EBQ)tWP;uAe^Y&1Mc$d&sg77ZAO"9u?e"D-J@TM&+)
%6f4*<2$O#_f3Sp/^>ZJ_JNn\RBeR<sGWkgC2o,0rMiA>DnTm3MiS2>@=F@c=`FE>d2G.1YWgcl>O#"BKa@l0E'Ta+I`!.>+qATG1
%rYe%NUJ+niJH>T-'H9Q,W?C!a(2Q*m!;W_K3._sL\PiM(>QOX4*e3X&*mT0]nbAahWq!ZZSbqC9[fpP?b\NaN?D<0)atS[%P^r)A
%0=gY6kgduScE)aGqf)5PdB1PXCbT@XX8!ST?d.\@/%epn4tp$WQfK,p&lhp"eu'MEp_7*P#&r1iR@b'o)`<Y8j2S?Dg`.qOq=Sul
%,G[)Y`kgRN=,WDeiO6ao4QZ(pVd.t92qm7IJPA%!"ZCdn?S@.@Tts@[atGi.,[DBS82g;[g7-*k\p3=<HdHoC=hppG".ugh'pCi@
%J*el+:p81uc^/n!-(].6Vu3sA;_I-g$b>7`Y.0QD0'%lt\`.?I='X`7pE?\[IS_?Nrq[o&9\JO-;2@c\^s`G?^^R4;4Z5=>6%\\c
%;7l1UP+SrDOB3X?MQJ+UeKd@><[1>2,>%?]9[VG40sUMr2T>G&IKoMGqRC!o=@R>?n<Zts1g]`jbn*ZKk(XX7dhk,8G4oYF*It/e
%Aq%qQkk_G_=hqHETZ`e3hju=>V8J4.S'S'U-A2:&J-#W79tRI'f@Qp(4*n.q`K!.N`Ma'a\$k_WI4(_>36SD+mEt)XN]nPZ<fqXq
%"I6:PV0Ok]qc<,2P,]@4?.)&L,[Hd7A)&^_9mPr8E@^&J,V`B7/paf/NeTm>Z:>"ok4u<=e^_:ShI]*&T6;?u!2>\S9$>114KjrF
%.[4`,.K[IbmPg_f_S-aCRfPg_K%%+Mi@(c-j.\'+3/nBen[-W2+5H\=fM"qjAs5aHZKgL!Tk7kJl,dC6QmJ7s<q)g<4+M@7JDD:4
%@CjV,21.bC4Kd5VVODZ#@cn53D'(pKPtf#$-m$*GGilMB<uU%BdRYO?#6(*cBKGXZ-m#lH-PS*:8;h*,iFEQZ!u5YuQMD)gBOoF6
%>V10=*&PgB"(FJDF?#/t\nd>K"%ZMT]g*]$WC#E&3kiG<'7Kbb;Ue$Fp$8.Kb8SX\GB.MlZq6/WZr^JSDVU&`6Eu(&_8AUh50#B3
%^lL\be&_3]<<BGk7KVq3RZ7_&bqbNEg(9m@\Sh;eUZ"8#`n`Fu>3hd=lhupJ53d5O*Z*/+[`Jp`h-f>^lknj.F^6+EJgFoPL$o/u
%NZ(4:q9DtK]g(_c8WPOH4]il==>BI&SoT)9;m="ZI,mnYpLmL?'/N/=)F5g2:rTiDKG^PuS5r;kb/Opo?4%O__ih&.G>s4EpH3JM
%MEE"<>%W/<_`HK:=rqeo-XT3'n4qfk@:%;A`b%I%lbuOtfOJ=35eOUgDR?.j[X+>oapGn(d=-^2A:R48P,B7$KqtZ2TegtoXkYu6
%@bZ'[gc"\R+U%d'e*[j/LuG=u1P.9_T\/K"?Asb\3cH$?&Jc3jj+B;eFL8==#3EdEiNO9O21jq`Q)i"B`R8Cm0s7\:[-4>?\%mgn
%:lW@^Y?N52_.l"<.QB@*.rC6=8F/L;_o\>!hBlkOOE*`,4_V04LZ]6eQ?$3MBAL2UfHePKCP?Uma%#Np_oO,Ik85"@BuB'r_Wo\[
%fgkk)Db(5dVekt'r0a3h1"FJc-d5>\6DWs)3gQJpHa.$,O"KL#aIPYPoc%Z)ENMeJ"+52FZ[pp(WNC"5"[hhL[DOf@ot&QWa0g>+
%CX@Vrb0cXfoUm;PB_uEtr@P-$^G4u#m5["!?S?-%^,=]MI+5d&OEnZ]WV^oj/<q7Ej$S)3p2TG)7N'&(V=Y%$5h.0VI@=pVN:uoW
%$5M(7l&i*Rfd=U#I^Q$=`f4AS8To@JYjf$G!TB;S\$s]"jRFS*8g)a&Lm^!IFAt56QD&]ULA7PqjSH-A+5m=m=4bBAJ%pEFFK40\
%F?:N[c`ae!"OV^HhrT;T_OhnJ[,""B3%EUa+0lN[D)LVWDK"TG8%nq-Drd[I\aQ86nn/-3s-eA$NtSUE^$G6tE:raWgiR"3+0*&U
%T$.FJLrm,O10sQ`\q_Vg\c0"O(dZC*aBT^QM^*:_AH!!-k)Jop>B=>l9-UY"Ar][7NZ=Idq@rNQNm(HCR;N_"Ic#>jc@)Vc0j!T_
%_U3:[7J@_kh@E*nCjpf9p^4>C.[Q'0"IhjQmQ$E]TSFO3YN+/%Z,TI-r%IFF62##Ri:QD@piVZ\s/XaoYkU:=M8?pnH&$T+O3uU/
%K5Y3'H<c;>a'#ga[]T"%X49jq^J\&"I^,!Yrlk.NYOU"PLV\hNejgOsYEo7R,sZb_OBr!aQN67r5^E`u?>tT%='0Eq?Oa0B"A%u[
%JFjk=m_8@&f`k+i8GAc4,CslH2<_sj=`uJD$RH.N\@`E/&SPL$&JF.'Gn"&:5-#Z&0g#^?6thFVA.0d)UsN5;kV(L^<gF&W[F#7@
%;^5g<_jMc3g)]66n8Psk/r=7C\\cM=$+@j#_1^#aQEf%<-7;t^cYMT7=j^2@VXmM%WK_adm)"Us9B8DgF?(hgU/>bNE&_HD:C*uR
%At`OFkI\8i>qlEc0$nW_Dm'1Ob++D%]d`uNS?G>NI;McML6@O]/YE4'A\R-_SC*\'>rhf(LGPOG>'mltl8+=hqmNYtS`qH0]bnG[
%N^a.JFc=rY;7MOV8U..uOQ\H%eJ:DL[diBE?'C2klMEQS\C`l,g:eIc]((E:<l=*7+ga4>%1t-sCkJ&f:,qI=8.Pk\7a`;#9>DES
%5nUif6C39q)H!:4Yuia2FKq[ISS<5Nj2)R]g8>dc(IOH;2O1c`l=h]5K=!3'U`S&6'EbL2)E43qS'-hU766J!6=&'&ReF\i,QnVb
%E0]mNg2rTpJ7=7L"RAbk?F/(SLn6t+`O(Y/W/VK$6sshYD>@51,c"ulQLD_26d*X<c-X_KW#]9]\U"b9Dac3hh^5P0/Z".6<atH.
%-c9$:JuBJIr@!JI_&eapA!//fJ4E)t7q<;-rm44GAOJq];1o04G%kH^C1.K/mtF5RI'Jrr;hG6pNDf/,Qc+GQLX$@h,YLBCErp/(
%g=G^E+6Fm-^%@WT,Ug<amaQjTLq;1,qO/?(%!eLi[5k@l)[<bhanJrgb+M=fm],'N$MDt1#e<GnH*n2pKZ[PL/WNkg>\(nLGjs\J
%&*D(ABld#Ga#3b_h)KLkgI%8pO#OJZDSoV;eZon>D7C9@9o6rNn$btRf:\83Zdrt1bD0llM7IK@]u]k<@GQ[#;BWS8:A2,YKnY)-
%caRc$X<?U-21u=fD:jd1jYL1MKh'2DE*ksEqaum<i2M!.k9*R9&geDuHBNLC30obZ>mfmMm(o9a[8=h/WC?$Nj`%Vq'et#!+C^^<
%](3tSo;5:+)Fg6M+^4#Ih1A6hoqj&JeVUD^\hnMG$Q:WM.uKDI[des8W1=ZM%JBG:Zot@+H]Snh7^XcudtO0u,HDKd45GP3@hEIX
%Mb@r7&D"3fF[ClTF,Y-=(hunU>OZ1ZKSGD%Cn"68),]'gl6]J*S(Y2DaOYl?Uj&ee.J-&O'2fEnlagP8%n_!7Z(c!c')FEn^U+'m
%?1e>sRh0a,_)"Q'e3^9IjSh9T2UtO#N1o1q:9U-`1%CGLqRQ#[AWWm=/O$GgDi/r^\oeN=@Q!EQb&!12,A'9llmApnKI,;DN2d+r
%e/Peqg)^T$JhCj6HuIN5kh@0>bI4.VZboVi_A4HR9?,-L@TQ@:R,Pa2ka8'T#@Ymq2[kn?X#lJ&P&*hg^#d.ZaE:k<4fF>-e3Hj?
%eT;<O__]n`g9q6O0=6/``MUQ2G`2^uUI3G(428A)a@uQ_jn[YbR!KpQ?APQs@d8Z7H6K.lLoD2"l@kTd/]?-H1%dk,]b"+,0JW7&
%XOQUJQ:[S-f8JV>^`-[br3COP7UV4odN'htCD&=sgZ!\t&f'!`$1i0M;e:>Jm`U#$jOfFf^#gc!2a0ZuQgZ$^99[M!$e#IT3S(3H
%q>8!6q'B)p!PV@$!;SiOF"@I89761@htu_tmi;E=6[\>&3,IL^f0^!/&Dp]#KkZKa(^A\!`;&%n36&GhnCmc;%_#Qp)tJJ;@smlj
%\\kc2HVKIfp$Ym/+h&<GX*3Ji6O=hQj-sqBnJsn%6]CJ'aPeA`pl81(lTg-h0nd/JHmc&hGT]>cm5,pNBtg[O=$_N=2@uR9phJI4
%LVEI3LiC7I#pM23_<rV&YjM5B!AbS3pR3DBGDYd:>QSHj<thofdua#Jed+U7C`Y$&46()VTH=lJ@juU?P>MN\5;"l.]dGg>:OfeA
%,BLV,\&`Cq=-aol]\+^UhJ2FOEc-7LMG/5RFB<nV`ijPsGJF<um6q(19RdL$=_RE-7H<6M0uUX[QJI3b[abWc63N:PN=NmU[RTkI
%Mi:bW%5&P`C.dS,>"Y-^ecTY7io[Bc<EMSpRL#0o/8^TFqP]C_i;TNBJiCTt5u/Vu#KWSa$nkXsG?cseC\jK/(tajWVS5'g@uVdP
%%q(N=[[PcSji5SP.B:_*nf#ti4)Qi<;aOpiE>K!mDA\sZqWP'reRra3#'6kE)TU6@P-P1N^2npE[_FREpmTLc<A]0bPo^p"hOC30
%@s5jT.,"6fU=>S[5hSken]#O4i7g0R=k"sSiFiM,.j`(5hgEk17T%g!+'jAU)T;G%7:Ga6G&-BH'`!`$[9n,T0P#,\$3Y]]A?:Km
%O]N[0oR59U9;?XT,0!78rNV`SQ0nF+F5I#KDP=?,SpWNXak.RQNqP](gK2upO#=0k%YhE<,6#;pXWAC#H9&Q]hZe(8>?72/=fH7@
%NN'\)qQ#T[HbWpsB_;g9,(<_T\jo3B47sp;i%:]C;.PDPgHkS;^3/I;HYY?H4DhphMHJbq?\<0&C\13G\9hOU_D@*eQ/p8N5W6fB
%EWiP3@:[!pOuhiB7ua.j-8+:GHQ$;+WsaPo)aQE_V9Hk$np-lASJ9Ue%<'%q_P,ge38aEX42+e5>R,>DXb1Wk*VES&%BaJ>FW9,8
%D,5.bkINga*PH7Ce"ip+C]&q,AhngfHsJ]!8_KNkn@6%c9oA5BL'9EA/]*M)+Ic7MJ)->NPsq.j0ReZ&1>c=nH/lEDL;EOp.'dRb
%;YHF+@8p5#,<,&+d6J^AS9WoFM!!`N@c!/mRM0791lU>:7u]QFr9X8qe.0rA_'7Qjr4!tMJ#16\di6=\rjRA.?EFb2C@-3*mXLb!
%^43IqrL]9l(WMo_UU>?RIXN9>Ks>5uXB?BU(<2esZ"@FG=VtoiO4HL>[-h>';9>kRs(rga]aTWr6pmfPm*q.;'gXXtq[j[B">9jd
%1]4hBdD1"nOr?/]QI.JUYN!"3aotSS'tZca*6RaZ^20Nqefm6t^8pcM3?_DR=iG&mIELN.:Vi"Zd;4'n'glqL\gE.@%>66@X<GdE
%%B>r/lIJ6G0\AF(N3>i4.B(C%.g.4iDIN"/EmS%3hM9-DFuH23.clB\--Pj:#]t2Hhma)/I.*!)"sn21@OE[%YXl\JHj!QLlAZ7,
%e*h&5AHl9W[.LW.ZChaP]<99DYSLl4&0)`Hpi_8Q"g[lmDe:f(>[6C'5jEMFS)j5YBC+fclt"ViI.H6T-R2d2-0MIl,d4fgFPK2;
%M45hrMFR4LM_3N8>Y$Sn7bhtE?`n")X)Um\(%8#RdiKHn8'/9-a&_U607GbR"uYlj'ImTUi0?sJOO-7aesJM@Tu\_U:bYMSVG/4r
%='9?EmaJOZ3gOM8bZ!u2;K-21!(0Y_?TW,2LDieK6WZ1]@QrK/P4i=e>u;C1/iS@%dSO5;Ok3qJWQ/IJeY)kd%mHNR?lo'EC.OAo
%ML/7!:eB*eiPo5W"55ZQON,u@A<ikfi2?oa"[62)Z+2IPHNpk.Zur#nS*c.R+IG6H*qjI(">c7W*G&0Lb@Wc\.+-A>&Ak0E%B3Cr
%^rVW&OL,]HiA!TR-EsMmZ5Ko`[\7"3=HX\Nj=X*^MZZM+.%\P\l?S7:;h]^m'Q/<J:u4-+/3HVl$88@E#*ZKAhHDV3q$3Lcck<s0
%][J1%Ci%L[A[Fn3Yj=/f36;l7*Z5qgS+(GMS:'g&%]rLpS#2r5)*o5^ndT``J/DU-m25,OJXsk=?^S0:aXCAk=)s8&/e8Nue[0/Q
%b?AnIQpc430[^HE0S3Q]B%!..H*`%s:Dh<*EW3k-jY'a8K'!$dY^D:GRUGrl.?;03@/-cC_XBQT;l1DGs&g3gAfo"Yi]IXaIqU^O
%lehStWS.*>NT%qD0moB'Ri"="KtdnJn)e-TAi>D4*u2\S'hc;m,_B-EC8iB5$lD1K'6?Or/L`-WnQJ=F_XR$ohS\%8"buLCJ_7gk
%)#abJpt^'0I^`_[$\n]>(r#::f-%ZT(pK&f@m):SpEq@S6U*1)L9FSAP8a`8hmZs:_eKI!*+62&^,KHp"8GXa5D&>f<s[]8ApJ\o
%=k3.<E.$8)%W?_#&Ua@+2f[HTHRQ0%&2=WI[@M+V!k_uhC_4=A;5"322pWa?cnZXS^oMLANXD93er$[F2?lsRp'!9aquDnDrt?db
%@,L/?!Mk2\aONaE!;LufMUf<UW``<cH:']S2&eghrQ(G/7:cjc?0/-T][S#[X_)]m>Km4SB8d887K!GABknLj/m>%@Z.4P+`>^GL
%9XNO&Z_)V)kK*e9L7\ja$=.G$>W%)@cGCh0^nW*ONh,N?ke0p7j3#2CDbSX@OjJR-A;s25*L-I!:##RAg=H@N*t<Ge0e7$WYIY0^
%2VDCgc`5_R.[5>[j6#fn@K;-TY$]c*^1@bC0E@VC%"al.oD4!oMc+2mLhmu\YC5gRB6CI"dcu'1.n5j`$E%5h'URoBRVMeE4t1KY
%EdD)0ZNW(2P)*P^n#ub;IeMmBak:6Nfs><p:*=QSQ]FB-lWa??bMU#rI:*!NMf8U,eG/'bIf%gAo5E3\_i+9X?Ea?KFE[<DqI9-:
%`QRqnn*^&49)e\bkk+MC/>R2kT,d0nIkT(Dai^aB?663I##"iWX4N[1[QJ&G7i@Q#h(lZ'XPV)UarPso4hA;tL;0@q5CS%Bcgm$=
%Y<Vj=l9Li<2!qZ4*hgDgpe%pZ\/"cXmDAmes$'\mDu\r1I)"E`]ds+#^V"p3QNt5Er@.1FX2)4;r4g:"oC^#]h.uBZbQ#1m.t#FB
%l/chp&cCqbVpk=NO$EL%s.5e]E5l6e%=e9.g%j=$C]hFVIIc!!a'dTqjKl-uI_TdPI.CMQ\UQ_%/Sbf6HiEm*jD6-/8Fc.Z7FQ%$
%J,O4k>ok#9GQ6F[]^>4Ph9#3J<>XiUX`(tro#Ku2(O@g-1Ys]US"*jbD1-e<eu>#6X'DStZatqHU`OkHq0`-Up$(c%O&j"94c@MV
%V^oK/<>OuP-XRp#>[CX<_pe;3b<+G;p,_[Ldjj!1<>^/\n;*RKr:Xkf5<jMjroEXI.SOc0THSm#r])R^%#9>F>Q<[Zp":-7?aBMJ
%6plS.[t/'loM!Fc)6TZc<)1eGA4[%(Y="CcbU=p;&0`DC&C]Z]IFWSV@q_:TU")?jaUbJN;l=Z^++@H:^W4C9+8L^3QYa8bfuoPl
%/D1Q>AH//SZ)kA1=/X_emGTKp5@hVH;uZIOmOYo\0KF&9#I4:u\,UW!+g8dp#=g0'm/;d2G07eig:k>8k4l=[jR4I_Vs=lJ#Q@]J
%;L^41r9p]Va`)B(/Nt$o`6'M*XaZ-Y/c]ik^Z>LjD#NeX[.pu6Dbo!bEHH1e=Jl'lTH!gnoC^in>2O`OJ*Ns+Yq4D!cVI0>YZ!G%
%o!`b@7N%#35QBQIgDq'3K4p5TYV;bQjC+&QP?mA0Ahh]<U^J'6aB/E3cd-Ja7fc>1E4_?+\M5JVh4*T')t;\FjGKD?H[C)2PPgqM
%\$j,[frfM8oe#&"I)G@El-m8R[%*K^ak*ooj6uNQN!Uh@ZA8Ihe2/HKGOgc,T]B#?#\iV1FhqATO5%Zaa=2VkBY;'W+*=@Wimk)R
%lc[hF8!gE_Y)`'Cr9`VmEUnWg/\JdiI3%9b:/BaE:-4P9ikNelhm.e'W]&B8cX4At]Z95C[XlKU#4)G/"+VF0V`LI^j9d]Pc7'P]
%Us>;arZTm<m'se07Fq843f;`H)SKTeE5pXJSFNKBj>3Fa5`5kCp21o5#So#pj3\*dOjDg`E=lg7s$<d(^$O_MclKb&pu@LJH9V8s
%rnF2dcHj9)doX/>HotEYpg/d%6dJjjHcFVkniNCN[A!)^ru=bFs'!+lL0*]-CC%poo`S"u82bIfm;3%i!d!,MEhm>QCFoJr)uMAK
%k5,lG>(8_!IK/Hjlj/^bX3^e.rR(&9>mkEE'T_PjL"^-O*1%80;J-^U4Kt"$=jH+XJqt9UDBHK<lP\Q6jnui#[.hRRZh;uq7)]Ds
%@i^(Tge)#<HKIHdAKZ0d;$Ps^*0uRTpKh7\h-B-P$d1.qq?"e,,;*Jb?Qe$/qnT-9!>nk?*@+[*qgBA,$T`Wq<P\IO`o$Nr?!Ok3
%eisrNqKoI[^KV_M^0e)C\qWYYX74FgG`m-q6M.Yfog,loNp;#Sl)g>CLB!(k3/>^G`8K9u(n@+k:#R!He<I*ng9ppR:3BcW*hPeX
%M8WT3,GS:P%;7J`_;Q"/Q)kSCX[m=]1_30eDJgKh6s:r`dd.$^$7Tu==@]bZ!8ESA-nSO+:GaEg:PdRO,OOXUnP>s+;Q2Bj3ZE+<
%-\qk+Z[,5@7glUZ:e8(&7lUcMUd_SM-=Bg*</(V_9URt.e"7gLbL0p;X+SceSgEVJ'WJN:HH=[jX.0n_.Ob<Vbae3ps6)]L.#hst
%)/+QM#n`i5iO=cS`uJlUJ@<%;3e6VdYfMm;#X-&?Y[JCe^Vn2Ac+.Hh@k5UiXi>5E7_[W\nBC^#V>TQUl/dDS:Rb^^]QnibS2P/M
%aN\Zg,=;B1iNZFe)nc7'f$`&5OY=oCF?0/3;F:<?m,a$7ibi@b098l[Q^;L`W\;-?r4:ebkPrlaHZ$ld,[#csHd8%'!/k"\$l@lS
%"A*:lU&oI75U6I=7>U63q6A8[G-AGHAqC#=6MGr`4*+/<:mS9?gpC2m(8(DEPs;tZ+.UIB&-)T8c^0*os!r$>f(XO!naJOie;V'>
%=N9=+-4Ph`,s!?YnX<dFlHCE:cKtDurm]$4hK$B;CRh.4A$Vr#1E0t4/.2i_QsdMNms>umW2!Yp$[oG=nqJ(>hsL*F\ou2@P:Mi3
%qE%-hl+\#1%<L9ui$.39Ho'EMCCdJc^e'9:O#fg%Pb@Hq1!opa_J4")J"c1;;UhEC1-q,.q%2X`*a"o>S2CXn;=udu$5-0;B;gBA
%HH0PTErV0C,?&f6gL!XDnVLrt3Oatq7hMnVYQ\0BP_$=t(-#\6>ucoDLUpSX`o5gi,CQHW\1fVBQ&ANB7A),j6D7OPp.^,SOXhAl
%h3s*h(>/RI\N)Ke<E`s6-qFN,hBpcl)i%36^q$##MmbM"_XKP],@etfrfs1H!R/d_r!r?amtb4.K/T$'0V1p4qG@`M%+pXpMm`au
%6QNbWU9TWU4)OBrD/H&jGKU>"ZKc+4eoDEuiiV>Goc&B?r#^R>]&F>Bg>\nKO4s9S_mc4@=js7laL,jFkgU*jH=B;m-_2HIs7=<d
%GDPOJK-U9EA3F&2[U9u]@\YTmEB71!.G'cLZPBk4nBNsPNf5iNrl?MKldOe&VD`\fqTg"5$ecf#ECE!j7p^pfH&'M_aO(M\n/s7A
%R]Y"l,]BI*\QY!6JT4'm=W<JW=\%ON4`2n5JHm7cj`n^?[+ZrtGoN!h@W60\M6)Ob(6;L@XFhbWM^ir)ri8[Xel*u_8btujAV"T\
%;Cm%Lm93jg):81se$?"Q,!0MdA?TQ9N,+?VVhlZlI2c;`H&Vih_6gJ^80="L5mG4kFEON]:[H\cl^Ji9/?d-UjU$&N\<LeJ9!pSP
%[MYcU?!h8fI<,@B2cdoOJb>_f[Hosa*+E_99b9X))F[O?ooDR<;[=b,`<]-*S!((uMm'/j1:65irSV-`C@m2q6\oTBdAInP5SPor
%ZR)D0-s%rgj[&E"JT;p'V2cPV*N7a7ZXQSfgJEp(OB^Tih$lP]#s),E;M4]s2i./#mp6i2+?rRQ"^R@Xs'H6p]-/q3.;c+%ftGg9
%\V'GN=6`U?SM@BdML9qpY$*"s[AKU["r?/#MCkb8fd7RL-]eR(Potc9b9gBKQ*YLYC:e'U@u[-+_rr2E0"RfX[[q=W+PfdhMmUs?
%Sn-LS`UoF@(PXr<1'7[DeaG)3N6Lh?X;Ts1_SPkULWn@bPDOU40&m?+Eh=)oUd`1^4nR&dL_64HiqjWR>=$4(;@SJa$R%$@5mYn)
%@)5m<j%Ej*4^G:5K5YhQgZZCUDaWZH3KuI?q5EA"P"j%:>T2iWO05c-2oKi)m"F[+(K,b@f#Xk1)*S?#jtJ6LhDT#[b">UU]ijG+
%A__qRP;7eTmMZeAFNSSZ9.e9\XWg0f`--sCFB3-p#O`,G7F%V:Hu4;K%8oP_if\BZToIV`Os(trJJR`OcGD(Hj))S?:koOR&;GQe
%fn$bN;BYu6m.IsEk_Kiu)h![10=iVd'QuCQ(WdEtLoq,I4OC_!8#p$*FbsYSU=a\T,6GA`_)6;trd`"Q56do1-SLK!Phi;IR6oBd
%QBP;N6Pl9H712#+kF?N-HHLL5iK>@r%?NpOIWP-lg\@!GYLM,<S,*+(V=\>,*jR#AYKsA]>,bTY(fC6?5SQH*`B)e!BUH>ajke)V
%p;jUseY9.FV#RLSNpJSZm.5j8;&+#.4PO/o>4)9/^dH@hW5"UTd5=*gdo(&i&iROJ6s#1TIbsB<C"bJSUkg1F+d,qCKDsgo.W**=
%=krrU<u48#6l_hH,TZM$?]l1LTnn)r[ejEsg)qQG+9QJQ`jRJ"S-,=`dLMCH4lo",'h-T_ZGV0VJKrP`&q(amLVgjJpk8eQZ54nZ
%7oCTKjjP!*X8a-uZhP=>`=CgPZ,AYTY8;g'30e)D.W3=(3lf>#5O-U][#3S#r7c^mXk2TJ7=jD><lc\]MHh505j82+bQD$mLpL2\
%/4-%!XU=s!0ri_`b;U>$s376%lHiCr('T;W#C'\(Fim>mG,8G%nLS4*5]JZ(s/WZYGVX(H;>I]IZEktIA>>6\<Fh0@]raW[=K^sO
%r("f6)lc<AGWVkGq;b)hAB0OEd)LCN,M3j=Wh2nWL];k%+]?JP^]F7T5UE^eCtlJTW^<)281YBIbFdK<_M<S?Q2qS(GRl*<id`!+
%YQ<uX&?S+W%$cZ"Omfepa[PJ+.TWum#D<jQ^J':pIMXE>LecS>2'^:Cj*j'a[O]o`UgI+rQM4G3q0]2\Id2kcJ$5U2PP)Wf+m[kp
%i?(Re"TA)@[@N'D*Ifu5l!.l&`&dg%2@T8.+\$g&GP`I,:O4O]rV>1@53VO%2s\XMrpfVgDgdI,/KF,.b[5Y'^V*"M`kl*:K#Y*i
%cb+E#KtX`iDddj(mHRL?T?AubfMX`tRI):<Deji7@=Ni>[4=KmC(H_J$$c4:am\!-]jlN*4`]YVRi>S[@!#h,Is6<<2GqY8hiop"
%pcgg`^M0!bG"ZW:)p>k,X[AAlld,?=^L*f6b,)5R07PV@mbJq?`u]'ok5pTkV(mGO4/O01a_Kr+OkTBGs/)Pp>i/_ND4B"EPT8qg
%hYut+P>`IQ@.P?;&Y%V1hE#Q=6Q=k6?M`M_51Luqdsi`Cr9FSr:-OK_h=WgDm@WZTSE>"p5JR-2:D@^FH$ZcH[f749NdWN#m-S_0
%rWeP"s&W(if%pJ`J`*4gBMOVfs!QZ_/Ef<84o`-co%qMRrWDZers+d9&"c#\?ZYroFd[-fme@mib=ioSop(l0rt0q]1cnq-Q(kh(
%hHFdm+0i:Pmsi$]^J;2?^]$U/'Rm`hJ"D\er.f*e/'N&#IMTEe7B1lYrG6[`Ph8oOn)mIG0`hJ,j/_R"h5/sB!YPGg,R@gprt4SL
%m-QGWMeMd%=A8^\(NY&9fLJ\jEs&NNC+[Z[oc%7`A79\3EI2,<H":W9@s`F<N\'n%C'MC;Ak)&N,O9^2)[lO+C"]8uI-?rI*qdmT
%6\G?nKrr%Z"Z_pG^ID7Jf9]#$f)MXHNfX.=g;:jUI2TbX-8X-X@\$qQB79.9*]=i.^)r*sm;1BqEM:gbSV?/+-$Jk<aQ12:p;kF2
%^&?f*IuOKf<6(W+O\PM[9E4+I%lQW6eA#pYHG+a205\0/G##Z,UMhrLln%MqG3-q,%lX9PnY]LQDPuFmEpA*P1UNq?]=ko7m[q1T
%q;+@17qS+>pD4Us2qIa#+0ot0FTY]Ti:On;T*p"LqA4,4,:np$07/;1#:2F8HOlXFZQk@CJ$?hb"T,kafeup95;HW,ED=1NKC%]6
%Df;biELtLl4E['8\BhL6r>iG>?hO!Gc@0*YPD--hK8%k4aReeimY\VJVD`b6AMB0("4Wto#BYH*HZ<KSAT-a>A$8,QE9EQ!K*HZ5
%s#e'01\g!)COGa\d1U$8e%=?rPInM^l%@gJ!K,;Aet2VZpNCjVK>^gp^Mq'CJ+!%M&'m4(L,cQ4is3KQ&!'_OdXHHf:O*kGpN1cX
%./MJQXE=1iY@qEoX#I=;#^Abd0[OoMCO^b#W6R^U4'1o[f<Joff=k$ES3,BUW-A&,Q7Wmq^E,ni%e90m]o<7)qpPGbp<pe^OE-Bk
%Ng9[Vedpa,I5j%4G4>6OW4JAmP_ZNaaSNg('pr8J%Q=4D?i_p'j@SgdhSp/2HZ7o>NV+<@_gJ6R:E]qCEWgN,I%,$36g+D3]6lc:
%J',/,%2"8"fNS,C-p,pkVp^dr5C:"(E&$]"GOfc<S[Un6\uFTB`'I,c#t<M4Ig0sbZ(5(%_;^Z^VB7uqm7_F)dOAB!ci9BU&)Y&^
%L]@7dmgb6UPIp]:Y?sMa)<m2D>.N^B,\8XhmE;gTR9r&.>TA%![4Fi@E,4P6o-9PuHIfq$f;rl#EB10CU>BH,*MYi-o@&*`k`25)
%2Vqe**raM8rY."=['S!G7.+ru0S,!88):NiR=5(7:ro,EoT#gZhsk[GB8>qtR$XJf2"5=mi7Z:^4<%sM7td-l/'.^)#hcD/I+he2
%5M/)iRBZ9S$tP`S5\L/VQiu@bP)tEbF2H@pTCuF>5(=R&6DL<QrACK@c]`PH.hkP2N$Uk#(=IW;YK,GRg"@Ab;S\86ZcBLZh\?&K
%#!ZW1QcHtb9fM"fXLt>,<U8IlFgS\"A'!=X4U)?>'e^*,=]X/D$*Epp2eoCaS`N5"o'gU5X8Y[*3'<cjlOS2e90Sp'mXRq!X#4XI
%?OsfU]I>+F@pnBC;*OQZ[s4*Sk*o/U7C;@iinNBV+t8+c$"=@YUn@*cl0sC3Oh'O-/<;@]2);Kg,/Wb&F.hR/,*S!rXZ[On<)#U9
%Wg5Q`.b!)-?gCJQW1tAH]!V97<C#ou/TLFK5Dr,u+2g'q_Ypdrg/'kP<4guJh7^)99DA-T]Q^eif\5%C/:d[]i5+!mYM/XDrT`JX
%:?8$/@s\GB353(U+CqW"$GW7cLW7sb_QBSFg"ojqpf36Km9d9Rqo()t,o;#>#Y2:-g>3HqhH,R#(JQj>G>=a<$oT6o]&oBW,1Rc9
%=5%/QY5Zp-[R[h)8Vm8CdE:&>f^d$o?Z&)s,d2*7+5:&QrOsX]4\5:-`.,4%KT>SDl^pa%)Xkbr?f,&OXr44R`sjT<'!->>+<<?-
%\*ZUu]!oDb25k",]7R^KA+1>@K/ZNBaY2d%&`6nthtYm)o[>TY"j=`D^N`0&X:'B5lhd.Z-fO.7mdf#eda#k\@1dX\dDkV,k)^p6
%A<Zjf7/>S!OW;N6gUjLrJ,Woi:5)g"8DY"=+ZQ^4[_;Q&^M('h$Sd(Nb&U2!SaF,`_8k.I]9b\.'RO>*VqLXpBh/'lKI<e%QF?K^
%H:DST^V8)CDo]%SNd5,CBC)G7_^@1_,^qc1T-rVQ7oXjXGT4]K:$V97!<r/j;4@,Y__(7nTCaVcAp5Aqo`W:e]sbmhWrL&^0T.J7
%m%3u=L'd#Ap.shKiu8L9eYaPGJ$\tMM8ohWZ$3Es,$laKg"BZam]2K<W5I=&7PSH*33((EN<(Dt\I_c'c69XoK';Z_D=pq4_Y)tj
%)[6Bs%.Wd2Nbr]NDf&pn\(`tV,Hs5f%U0#Tq8ff`'FoqPa,D>(je7E1p5g3jE-<-;=(0U=RH()mLrS2e0C_"fG"@*F>'U#M\%nJ1
%f(>0eEXEL&;@-*LZpX5A7&6O8&,(<*gIjA[%RaS:CH:tP-Yq%j@k;rD-A#[t7WY(7AAF?>qkeaXF%RsBNd%5Vm0J'T;('d.+Z;6-
%EKAHc(\W?$gO%i0GD(ro<Ao<=E!+LkUrN>,AT`#%[Q\U.?(iRVHTc3B,Rna4hf\^hOl4X\i^4;S#>p$BH1aJeATW+3KrsIra>f.J
%6f&=?o`Y$iHR4!c1%U<0MK#J\CtMN]qOM*,^[EU+K+>&dmCk`.A:9AjBS]_S=d*30/aU,U'.WWHUnArKFkuL^\,V\b^W8JJU$qgN
%;)ZP6D>/@W=S+9$$#O$2^<t0m_E[l)qpjH4ndu07PTo2I%TEr63u43UYS<GnHtMfir9jFD;c(#'[!aPCoPd'j3f7b)[abD$lF'X+
%1=F\'070aP$U3h^eu$oMD$sgEH6"XD37F/g[GG5.A7;r+ZG4s0.42G7iK;3-fGjY,>&S1eDZNolLd-K<\uI<fg_Q:9aMK!IeCsOM
%:$2Nu)gT-;J`YcPm5Hlk?eYf14$rC*[^S_PbNhhl_(p,Z<E,/chpQru""82"6mh=+fTIhGlu-C,V;B9ST?b<p`e*p]$i]=CSXkc5
%-1u3E*A"=$_%4"eW9<jZe!\C,Ee;0f7^cCp$X2F,3S=1g3]CQhi$Lu.N`ehXg0NV3Ka(g9APW$OgYUqZp"ho.ET?=_?13$V8SpOA
%GD]DI'0.oqEZ`i_lB@AE*V>U=e^F%7MMuLhjF#CbHQ4go=7Bs3aKVn>;]J,Hh@CaUXQ%t+_N+K_f/ph/BL>]=lKS#np<q[_p85np
%s4Gcpje'*!$-QA148baUqp/9*";Q9t/a-=@oHUJ9J&geuU]G;qRfEBPO59fqor[>J\a=A);b%ar0Xn:R^S^lh9(D2<,i3^*J/76,
%=gem`Ir+S&+/6XghNX4"CEB"S+2r6Dl2JP(J'?bumFFH-SI,]egfb??Q;\[<UQ\:!0pl'=`?'Yb8)_f^\0*+7\,SS<(jbOkoNCBl
%?Ld+)me5YWrf`&NHFnqqs!Qjn!;6gDmE%Enet'%mP<#rhd_?)u#<DKlXq`hgBU3uNp\F[.qMF50h["fnOgGN=ek`LHQga;)$i1g6
%PE)>[d3%Wi*^K&mmGfm[3`Q=5l!MEF(As$0"q3Wqa,[Lk*u8ePp<JO@V][f?d-Rs:9Aja8R"8QG=)`2P;BtY6JI[1uXdi:>-l<1n
%r(iRK6k)GqbrG7hILPQt4\cF/3pAdIicYF6F<Zda6jrlT`lW$KXDaUujXH7%INZ5p'G@([ofS*,60%d_]G,]R`(J:2dakIO79o6R
%f)A>#cma[%UICARW),8K:dF42OXp!d;NL';iB4t:eb7PkkNi07D*7:SY4S"a&?rUMc&""W`dG2`BCDfJ@I(4Qa[=XE?YRqY*N,hC
%)ghHl9A9]B*`.hQ&%B96+R+<q4u3a>GK>HBZ`quJR]l@k4Zt-:'t1+4ll?R(HF1@Fnk=NO%+0oOfRu39C_02'd2\1LKXIMFb=V5A
%rnatS+0Ua?]lX#C_RgbJgneYY;\Qe;2qMrLDOl,2GOEJ9bL>bb@s]$/lNacTr2kh-p[:<=pMN.ij7:ZUh1MO`2f#%_MoPYc9sZeM
%D.`H1F(+)%kHSe9j#;/T-MAM8Rki7,m3h(?CTBu&;l^F84II&\]iW\KGO@*.N/_+LrFrD^bO9#Z3&>dK<r?odJ*,L`.K<iK`oQ:U
%P<Ha8rO(s8_teqq)1UW4e@1F\De5B*Q0-KROeZ3<GpU1MnaV[^q<>.Ca3Qg!mae:mnaCOk->r41D-ijFEUdH)b5LE:R>0l^pJlIW
%bfZimEGAumj5$i&WO;]h[J7QHS]KDU1J?lPO,<CRQf%'nZKT!dc`<\Ijf_<AAf`Qh4?#-d^0R+R20s^E(\)BOq*:h!hl^3kRU'Z8
%>a\pi?Z(p#??DO::]5b&lh-,!bHL*+HO&0j^3OgLmInuV_KYpcIXQD$adPtAR[X\)GQ#D1>O.n'/Pg4g]Q\XCp\Gs:P>>LjqLK)\
%S[eW3c,hg$p7"hkP?U\H2m;+aHM_=0r8Z(KN&UK3guRnO6Z`5'/^k0>2"PDLNLX7dgl$)VZ[?P:qW<B7Z?^cZb34iAe4+i"WI&mi
%jPn,M_t!>:B5ciH[:<hjILPE.`p)m:f>lc"J%T>/c[XraGIK3IQL9KCkA`'q_qXZi$V,>`lMK*c=qL>Nnrq(@3ra<ak/-ni\T?@e
%lscE6+$O`[2N_^B`SV__rl=]DF5uAcn[Gic[Jf`WfrmH*I;^27#/=rVhn;*u_p7%A]i,,]HY<9Mo!dL@o/=2qbBV@1g,b5#RX3I8
%iDY44k/s6]B[u^-[HFE!^@8XdiSX7c6hn)H3C!-&qTR+,a$4/P(+rs]$B))pjQ@?:]q0U04nX27jjj3gM'&@-Xi`J!rr)a24jX^J
%q8;P8F8a@JIlI1>DW]^.0@T7E_TggcRho/hVH9o<3Q&I9@ski"h4HC7qQ]j@o%B4BO6:,X/jIq9WFr>/!%>(d1\Ti)]f-<`FA$gF
%>*uf_^]3'Lr1j4CT/UuXE!K.4?H0V5F*4E_nq*H-UE%GCLZOGpp?VLeR:blJ#tI)ps#N>&,<0`2`q?=ur;#i1%3P#rjjqUOoXVH>
%GJJ::D?c0ed?FHk?QL*Ec1pt&gL'-HX?7PnCrYX&fW,fPO6]Dm:F$pmbe:P;QZfN,YD&>#B<ON;S*T+8]S#t5,W;i<Q[u(Ko"$_4
%al^lUSR,Tkh2Ab/?GE"h+7.b"p[J*s`g`[<J%Ip,H=JZOFY3E9n+!bY1HGJWq77-,]6S#RantNsXd;`eg>.6#=6/nqg;`"D:Obj+
%rTA6'T5WMVRqY+>lZ_fI7K&POemr,\.s&$QD4Cs.ceacWN0sohDK+0pRpUBB9mtc'hON<PHF#ap^\7)IN:H[h2o*`*NU>WjgniEn
%EUr56g1BOBl-`P@ra`-mcDr`OQQH?5n+N35`7[*<*`S"L1HbXnn)brtn%8b9s#RLMfA99:^::O/h!WVObP@2<l.a5A32p,S04:5t
%KC)1Rpsf$g46ptJpW\s(;ZG_;[=uG,&`,9.\kTMU0RMp,O10P_F6H[JoTfBb.LYUVqPcdWHN!QT]bR6u9BY%YF0P1So$u>^e)f1D
%q/p0E_=X*Oq>*SE_37Mjk/5$%a]A`=^Af]&K;JrcF(0@Xeg8#8_2!@.rV4'=dp"Oj?9$h)gAa.[4MJ*]/,q.r236#QV#L&NrLGKh
%]t5f!Ko&*_=e0"49Jb=CU%E_[ATbTXr$Ho!c-Ndrl!A#LJTS8i3GE^+V>U"'7[oX^4(XjuJS6o#&?"3O3BY<so",s(^+[fsjli/;
%3fYDBi&&#D%Z+b&SU.-:1)fo+C!chJ.<UP44R84$E]PtImcNQCJaSTmT8cLEfD"?uO->3oan`,fSu;lSraOdsoLM2Ork4?_H*Vq0
%QtH-%NkXDcHPqTVU-FW#GJB`9/@DkbGdeaEd"uGJrdQEG&:H8*c\jc#2lF2%mQplQ6^D)7rY)fX]/^'Y:;Di"kFN+MX,enuT,3"8
%1e4+'DO6,U:LmkbBRJmO&jZ_F?-][(BSSN!S]ZWA(rON7GceR9O*?@k`HXH0]=[oWqH#S&[<d3;;VTB'*;*jbb=";%K0`Ju>i3][
%TY]MKmU%.I:]6i%D?/.sg[B@7pUE84-=l2FPRZrPnP*NeX5R4[Md+%fFK_&2(mYK3:!UM!]JVWf\Ml0f^ks/n+*hm"\EE.@\Z\fd
%hjQWND%(6_kq1aa<<=#N+S*b#pPHBB?a!5.J,V2X]Cc'B-08tG1.JnUr-3?s:_pV@QKese[:,&M9:]3+]m<Ic_WMH5rm>A)6i'o+
%IcAW6.sZI.i8o`^a,b^D%;onF95jC_f$(IW=.a[Q+l$s/Cms<sY#Da<om=%8AUO.9h"K]6DuOqQUF<-\G%R(Ybhnot2sfaYC2'O\
%=(cj2AfpY6/dbF9%W_ScMKJP^H8_GP%8%D1^HqtH)fsaa.^o:4^cO4*7^m;"IJLo/('Xe3AGPr:^S8B26?Ah#oe.dJVpJ\K37oD>
%-oRu\ooOq+q0QJ$8K20O&'@&J^A,Bt:%',t;8V]B<I^tIFc$FsmAb.hpg`IV<4FJ8>[<kG1%Fefe;K6Wp*hIMO7&K^`)-uD.`D=u
%iUPRE_f'OgIr\@JE-UIO-FY&72]GQT-_J)$/8-]_<,o:[P2gWo4jpqc>jL7_rMbd\qN8@?9[d&RIU6dXg!'E`(OP_u?Auf"Yp=hT
%fY>2mgLAI[Du8FIa*hue%PrRE&=`Q\Y;R`19D?sYB'JEjB6N;-\QmY;q.i,RYODH,`W>tqqt]Ka5L/)J'n?$W;;fojCj6@f@-[X<
%l_:=??h)r>\HT\*o@.u2k?S%B%d0<cbF9F[Y3ODr-68uG`b5;glUH_PT0HUC5<$2sJELW"k09^sFlU?`O!u\EGr53Rq8@?$p&4%A
%AZ5q'02B7VrRDjcjRn;;hcr2(m7U1OI^&U[H*T67EI[F[DthW.om%UIrSKcG9[dG4gr/XKg1u3(l.^QTiHB;2p/`Yme'1LVIQ0%V
%Z^n'#;uU1)0fNG-SK#.qO.RfkmDl!X&+fe@f_VCYCU5rHG(4l2@.)b!)dZ(e>>]og/8kj,H9!qYjm'B6m+"gh07McHGl-LsV-@`e
%?`a\pbhn6E"17nP;oaO<R7Fm@^(sE>)/mgFhUSLZ9-,#=FO/Toa\-0$[+YBB-+gm^o&OFGYS''.d2'2mVUtRn"3h@O+%<,qr@r_6
%aAZ1C#0)(2:7-<T`m3A3I_<KD[nJjW4/fsFpWrR]+29bXHC&gss1UV%]U<\;'YO"+W:TbPRHXt>PrXhAT=[1^"p;9A]tMnOl@$@q
%.nB9jq9>muZ'RoaIC2LH7&J?lIt+"Qc$oJ9nY7Xbp"[KHWR"X,(:Me&T?uM8iM%;]IL%"%3kKY._tpTJ6i-bD.Xkgb:KAW(`OAWe
%?4HLID&UINCiB%=Zc+RAZ.oQN=h-T*FM7K[dU1*LKG;-p.NaoNh>)otH`o*I4PX3A37Y`g2`CKkg@Nk:Qh/hln89l8rtMBFS)rHl
%!CdsNSXVDG5<cU^$03D%#d#.tFk$!2r1se)k.[A#oR:C@NbiGT?+;W\kfVF+'RBOSJE"Q5`UABrq7#*/(LF3a0rl,!qJpNJqR*O_
%aR=(T4("jK:V=6B^Y_ca7':h.>hFN]#GlC>SKAdkqX*jak2FAXj(410jjL=/o\7O2XnBjjSr0Un@rcJLrI\lUD/Q:XHX3MZrFu/h
%+"+IBF"RC*FSjab-F\>oYC<D*mFLa,\(>82Ck"-*-<i;%Wh'$/IrkYDA[M?c&Y#D3l27.BQD\LJhV8M-mSEjHrT;r["=_'Gh/aZ,
%V#Km^DL1<_JCmtYC<#=fhkH&cr?k+j_jER9a!'6+qse'AB&cJ;(Qcg/IQi7!B'%RpmHO<$0!p5frn6A`h1s`T+VO5J\G'fdBdZ,N
%\S3C_h3raSEI2G5:b488)o"/54.6[FTdM2IVrcfK<q=k3ZQFMjQOY$MrjI0!?=\W5mjGTrSmB7-%AQTE7I`VBkV$;/Fmn8hWnb9$
%geh1:^JE/#:WE<qo&Q.*Po"dTdRlC>H68ZLS"BPb3]B4,qXVIV46GL4^A33JkU)MF^.l8.J%.0k5-mJX*21R=J"*t@[^S;[G':XI
%P^12(ZhEZAhO!0Ko<m'8<TV!S;9&'C4PdZ!2r9#aIe2U;mJ#FR3MDnJHSG!)&01LhC#[C[r5$2,GJg2.RB`+%UD(+cs7Uk+EgM:<
%_f'U#e&?IY^"XWm(9WIm:#Ujp=)`HFk$%6Ff6Z485Bn@_SfQ$;pq4'pF(93-G5UWZMm!:/huB(tI!3!t)/3FT-LC*r#7=;:bnVCJ
%rh@JQo/C;_k''69CfWG!T&RZ$:LEQtS3-Ii@e]f`rL&r<h6A3o2@CU4]aErL]=I0kH`mC-WdY&,+i8W-U=\1SGMgsjgO<M!\UX?_
%:ZRNUe8i1nk/1Lamd7P8&!u0?!W<,Min[:Hr%f%DKBmq+Z#^ShCKI[9G5(]7&XMj7Rs\hFS7psW^/'^Fh)R^p.'%G8IkBOt365_#
%`eSO-[@a"+7j#JGaY64Y_cC%-k;bVR,a8(Am`F&H;S+5RO,dL/ik-m>``Gt!j<!/BTA6#C\T5nNEr(jGEFW5cTrM8/p%5g/hE$/N
%go6n3&GDI&3UQoiG5GlYT(Dm2A7P)Q]b&]ig<;1_hed!Q*pig'NGiW#cjP_*pYSb_d/@'8NpCm1I<[Sf5f/7>9l7h*$e."j6SuS7
%&[*4*FM,7D\h_"Sm<-cVnasZJAnkgckNa9SIfRq%=S^tC@P`IY:qeSM#5qtNA"a."`d'OjR`UoN:\JF=4SuBg"fUkph6Mh2%B$`n
%]C]>&,b!#hh7;52o"e`@jMun>:T.%G?J2u58[SA5Te@T1+Vd*SqE6p[$cb(O#TC20c<c!Dq7<*TkL#LIh0gdAnaQdNH>`)JWF_N9
%p9t^q)fo'c"n]^-]fQ,ni[t1trd?\S-%iaWGOIoe'2"?]m-;l](K]K]KDGK.qY=@U7FnTCk.YZe$plYc`^G3`3]ibtn*S#T5!!oL
%dHI'6o6PKHG44"Y:"f3_X+O@.rNSraOqdcL;K%qE*_`HMS^d`N61Xp3`PM]h!k4ZR.gNcD_h<:3g<@fm*hA@[QiekZ&!L@W0`Gg)
%DIQV-rRJa^nupG#:c%6*5YH>O3:tdZO>?fWo$r^+\XV,b>=6jN7q\.uIetmg7`Tt1W#-!fRII,VhN\&S]H#e@rq%PVHd`M&f01he
%"r6L6M=DDMo??78j1f_ckJQ*uVp-euR[ptel*X'Xn\t1@hY=?$7/t/K@DaTWP:nlK[mMEdiSDH/eT\dQ4FZ>oqp/(**(=.K&A[lJ
%EW4.t(<gs*c;3>c=`)&pj#7JI=:]V*>alHcl.V3/n[YKJPT?mkaAaH]Kr45PS`BOBlZX]8D_hekOHk3^Nj"bXa!%JO>kgG8[trmE
%?=')8AJ_L4T@t,>oCq-jGdeuCZTm!Ls(R\S5;+)%IJn8lL'Wg_<1ZRgDTmH6`o)P0r!\>:aNDcT[rVALY=rgcY3pFSDJ7,;G*?0N
%+Dt\&gc$G/IQiiLI",!agl$gaY6ED3:<pV7oDR^mh^?-$Oj.gY*AV]qUqaVYT!d&69fD%HmgL%2H!XF9a6.*<Xl!A%^[_<ne7?/\
%&E@&"a):Ze4#uQ8e#sQe7))leZ)3g6T07W'^[(03S:hnddu3+:=7e]5??j*\%4^ejfl%\iB(P`mm,rS.YD)\/^-A@jfC8Xia)?[a
%4IQ*,fYQaRmbclm>maZfWM`h$Y/dZ"0<S5^5A\>g+gSo4\]]TT(I$''^/(e.riI+[5_8US2c_<hBD/K^+-.6+h%:+mMJ-AWApD11
%P\YL4DAI/=^GGIqrVcNmFR'.*qCasEo=-O1Ms7X+jjBKO)q/^9M#iTan]1I9/!$S@mcO>#)qtHb0P!H[*K=0VNnVc2cHiqI1-%2a
%#7(tRQ>,Td`fq"%jqhd\Y#ugSceOspq"jBtjOV"ccf`#Kq.0"Drg7tQDPcSNYR^ZooBh=Z*kVojhS!6[h=TielmN-@kf0A%#%GZ'
%=(R+N#4;?If(i+>MHXcdQg:tRY@i-/f5J`7RbsT?])+aIH@9Mj6@M)pnNpQ1$VagUp&I#LZ-SX*CJ4P,AZbt*F8Xi&9?3?+_4T`r
%#JQaWkZ^"_nMM=T$i]n9-\*&9Y@$91r.J:u,PZEt5?9hn!r?Ht^]3U,>E>/P,>Y`bgGc[TIoIG0<2mJeU921$CY_JO7@M!ZMRd/h
%?gp'7IP^oX5Q:Pp%^:u8SaQ+0.;-s;E;%'-ARZTWq4&0ale%Ft)7K32d'<J>e_g-53N?bR>1r(Nq:k[fX9i_bENL>+cC9sDd#=V$
%rr8-4Zo5^LLVY%*$mgo&B/`)j#A2mjpd:MCk5^&(GG&hbdVe.\B0O#C]7_1!,EMccifSusalG(.Ipr<,XkA\nopreQX]tWb^itQt
%`J3)/?gk\^?eF2,gfjY:%=b><bAAh>1>&m%[gk9C\@%>X7kY>fO<r`5/4`8Aqd;,)rYJdaIlP)b\.(Vdo8iRI$I`uN^)\i[F7c0a
%b?P,g]r`lXXT-t#[C3;l2@I,)RpF-gJaNX!\qdjZ=P-g6kjA@5<1\B6c1!MNi(Mh`=8,VBYLtg'5?etAZAj;Y9g<Z*5F%2rcBZ^1
%]De/'oj-8AY$?usph6tkXN=s4VM%GBW"#n0W(Sn5b<\s.Aen4[=*krR$(oisaP,583=%HDq,s@--+2Gc7.q("2F[8'H%ddLe;eh7
%XnGKe4uJuS?QD)R0]S)[ChUj5^(ouRIc\1l9F(ZIA[F2Pg'FXnkH<8>5Uj[RT\+Q<+H$aE>6T;EXnJ#;\<$[o]s?iP.rD#nC+"Kg
%#$phfnI?3h?Dq)WC=bS6GZ"SOEbH]Si$3P..B(5;?bOZp$\10fNWKTVMj)h2CH\0KW.VKfr"u$G%TAD!$t3PteW!]Jfe27$Y%[!/
%pV(GYh_ip2X:G<QO8-"Dqr/iH0'a)OGITBb\tF80>JULsj0g+D]gT]7Z<+RXgLS"ei3C!C$I*GrVSp\'Nam)a3+@g7;9Ki_D]!9[
%9l>McI,5Nb;0:4D>c]#ghI.jRZ8T"lS:<%_Jpk>*8AMl=<WJ@/8E[CJ2p3@':,(0!bFF]9pLVTe/4A?LZdL-;2AAhP?RL=,mT4?8
%+&4'e\&,:kXN;U\c?XdTee+Zn@uZ(LgEpC)TUf(ZO>io$SB"g.M\.@$(CfGc9rei,'5p.)a"h?7=aS:r<i<030$<"^N+KF[]-sT@
%4eIsQ;p_ko+95'r25c0Vl@=PMZSqT5Z@L.95E1$.Rof=UqS3%\O'K4Vo'S)dk)lH*iFaGHk^@XFJDOod&/W+Z.jP20cV,V2q2AiN
%\t5HhT_$i."aZf3=CBHf-PtupG(P;%B."S\I:f4)c=\LD_!nZC%eMnGkpZ$!N5Xc9QX_n1,/G+YBXbFZ7Y3?e?ppdknhu(n,(@!=
%+1nop4p7l5+KL/4/`]/^3?+lhKWcU&b8n;G92I,u:')ijSF@X%D$7&=@2q'@!$O:\TF:hq*]u[gT9WH^L!QN*:RPQ\QSar-88V1"
%"(_Zi?Z['8jQ(aK1F#%:G[u=oBJ<%&g8LZp8#ED?=-+PiXaT;nPeP-EdUD!_DnZn7=KX[EbL,Zljj`%rA3h]?^mG66YlABZaVNc(
%f!Fs5,6\rr1'0;;lY<[e]HlLL[S$r?ifY&+]!b9?XL=t/P9V3G8Hg;rFp*)<(Kj!i>6M!B=-n&B6Ags8#a!<!=5.,V<^BHu9"^Z^
%$sd5h5g;&jE5;$rj:3)'ihM$/-HK:qXp:[Z8c-[$'eKQ'nbllV9mJ`o+g+Or&>>>nJ4uM7,j^c<J2UlUpk!VMXMX"$ShWFR*K5T'
%*/3+s"eN@TNujgo!KV5,+V+)GPa[=L3Q2u\Jd%$mC(k?u7K<e.0nIEC[B$N$0$WAS?(Ei3g/ZEB`lR6J<T7W4g[^.?q&$hu/eFO?
%6_Xs]G=2ImT`s<V+,+WQ<[#c`"u@AkLl$_hcl;A0,AW6]26]1CUq@VPb3^)J$$nMO.nFiK[BH)<L_s3`BXu3)?qi2a%=#;a"eA_>
%*klaA^*"2.dZ\UEdn+'`^>'R>,`SYQ2Cg%2Y19\\&X-Ef-mO$Q:Sf5\!Q\p&&emH8PTZ`\.Lkl^$dMp_Nn?ad'slZQ@Qe1-+-]A@
%KF.f20,aBt+R*'c$HnP&-G\1=&gH2`^@D[>XUp/kA]7@r+C#tkXRu-CFk79]MN0(>PfK"lcWLFjU/t/Agg:AZr0QfRLZgA+m(M@X
%jK'$qO"=peon<O!BCrgU'GMC3E*QXXGSL8mB!2ITn=5d#2uRB%]iWbbSTb3t3*W6H^sbX)%Pa%i-.sO=N5Eo`C!caY]EWf1c>BBO
%^VFcppDGuO0)UYj8'h(6>R.sgb]gGc=ZMQ:4tH(fmk]#,f)@Z[s3],)j?VpVAfda(T90Ler:2N1+`on0-UR:.o-3fj1H.Y`Zh'r4
%eS!l4HJW;r8_X&X>Y-U7XF.!Pf%E$HG!6j`.Za.Zh!&XTP"jj_3gO"kmUK1h^5]CZ9&VEJ!"%I2%38+S2T`[R;m+_;cNeA(BV=Gh
%p`YmRZ=1gBI_d4*:?=_SeBqMdU-1U*.nF=f'a3ej,mPh:j])?hh@c&681`5%_,I,!:Zemo+jl=@.s'@%Xo`>W:+KF!$GP-+6BQl6
%A&3TZ>;l+.Q:F:`-5[mO<@MXFiDPf/^mhi>]WTT_Xb>;;RgQ)?rWm\eVE?i+-#-e4pPR7DR3=&S"f8`'"pZ(Q8s,oL%^ZNs<rl=X
%QEAK;;'bfpQMX4aB#/9?Q3SZ'2q>W:$3f-%K>&CZPQqk05QF?8U%%m-pf.!WUC&6M$Ks4R5p7gr:k:QiZ`d7tDC]1,8(%jF4:NK7
%N_Scl_?:%(alF?qIS@oED$mf/ZBf;>0F3o)1_EO=3ph8"R?&!8NlH?uT,$\>qs8QghIjiUOIWZ;5'ihAqpG<-plF9EIf[\-ch[jQ
%pK:jSme^hh5Z-XE0*/c4rYEep,b!$U:S0X1I3J\#ps<:\6.Nl'/Q0u`"Xi))W,o1Par?I)JKPnc28X)\+?<b5ZA>@hG84SNhCO0d
%NQ]=.Lluh#&Vn\*6ppc7Jm)?:0nFmZ^qOghnrH,D8CuQSo>"mb!K)Je,%j5E(JqoBf<,\^WO>qq`[$.eM_]d*g_s]CW"IEB4;*I6
%=')Ku/nEb4<N&IE+i<Fb8h2EtMl:r3I(C/n;1#SVEn>I+i1XcdR-9AF!qL<P!p!Qm5]'M3K7f/k5[so8,>\MXF]'`!.RC27K]<UH
%O[AFcMre\>-H[Tc-qQ]Gl3fjo),;T5%;M*F!`^^ke;Z/cW*^%K$%NY!B=&:fk5IXTA1?!kCSAIQD:l4#+?[saXCQm5![b;5`&5^q
%Lg[//$mA8sD2%g5aLi)'/@T'L\1&<sPXqY3?F);^Wtm$s;E-smfKeI.a[r'q_$Q=!Gm.ksHLu502JV,WE)rg=i3o;`Ca2>\Fcqik
%jo?)oXHRqa`msB$KAZfJ_m>NHRn2A2@IgY6#HY'Z=`j2^21]0M";NZlS-%\lYKV5X7+oiHM)j11c'cL8TFFmUN!@0]?VaED&gWp:
%=&?a7PhWUW=bfOuaA]@cQa\A2&n`S=n:CHQoWb5CLm4ge%"Cn]>^*CSpuE,781"!>6>]G2-0hEm=q?3U]uS!G+H)QmTPbL+O`;BU
%6,O#e+b3nDY/6NW_BQ>m#H`tHSj3GQA\ARS#kE*=KqN6\&6@BJSO/OQFD2Srl*B.ON2LI0k_[C'Ym'j/8nE8r!TLZ-4*Q!G?l_!/
%4@IIF14mbRI6bSJ3]]g)&f)l<'<)H!C,=_PKbe+?D'u+>)c4kB+CKnW4bE+$gf/q6_OggCZ6"@G(9I]A6`Y)J"=#-"#6#GWg$9$l
%E#$5k-Ef,Q[p7.s7\6,6!dW(nSG``+F@hN(+:Lrq.IY;#VTJ+#)&sAc"`h0TmgL7+4]8g-@<ED\-s'&XLLQj4lNFr<9R?%kf`M#e
%J'5`^m/V'n%_m`*(D%kCPA6?1'A<X1PWWKs;t4s/8lo8(;euaMc=?Qii+BB0KY7fG(J*Ipeqfg4Bc=%h'Qh8[=@"oe-l*[&j-:k>
%#V+bWO=8Ha,r6b&G\Hd3As:r2"<'Eu(c2=*KHa[]>=FcaD%ZCKN'ls$i2QE=ena1i#E:9D&E;`']E"08;D!]SY&GMVX[ttVPBK3:
%aFg8s>d>o<hFd*lr?6q/'d1lML12iW6p1eR?VOO.[05HqX[3FU!P<s``aT#_'g2!U[8!o\#d$oo#c*E"'=(!%'`o+*:b4/<)NbJW
%er-nU!0A]N]s_&u.LC+C^(A0rI2Wq./0DCK%BnEOBR=c+"^D'oVU+A"+G!Y/$mF7Th`UZ^.BQ9VP*-2G2BXdnPM3V$2X&'Jn7,r8
%Gp-qZ64XGsX+97?7"%nR'gCR>`D2-CArma1Vhp,(\#m;\Ta5.fWshqZ\.V9)='gRg\OO5K*"J_m5Sl3.,X=qF+H:1edL;^O-?9JN
%(et)45#`[.;&')aVTLkB@J`ZXX`oJL"@S#R_-RRI3/M=58BZ]*4j4+hNdViP@--<8dICJ7N1BNd6A/%pH"'oB=]&$-cpu&:aBJs$
%jq+YH(foU!KH2HmJoIQiVhJ?G*!ll9E#$k9G]Z1NDd*EnMYLp$Pag[*KrhH.86uX:$CG>O#LsM+([=7?l%8f3JI>9hO+Erue2_P_
%$dRnc-n$nd)s&32=Fu'6aVI[;cp[a]hR)O')it`qhP<Q_!\7_CW7\Q?WMGhc"a>q-@$qdrKj2WpUMiapKUl)JB].\HaLOp8K<$,u
%]CLd?0t"2`\IUNI)hZtVe`";7+>%j'BgKj4X<KFZA"-`iS:S$`FLbR=>8IsX,Ug,)h)0m=asi5%<9R7G&.:29X*'Hn"`Z=G;iIRX
%8g[o9d,;>@f*7BTRPKd&gJCX6=47j0fiKp0bg+2Uhs.O`E"Y`VEJOlfib0T\+qKC98elH-'^pci-[=rR$e;R,Rtf[k:rT1.$2r,6
%ZAH(om&Iq0$u&QPS'Eq7QY7O8PeKjr"@e.ol\jSOEECGa/7&ar::Ys=aPmk)2O_cPKHQNPaZY2l_45;!=tLS'aa.LT`UkX`crQIa
%W4E-gCOh"-L@!'%P`rr?>?algma,$d,e>a=@pp`Bck!'HEXnTp!l:TLO<K+=Se.K!k90pn5qGscEsESVS71J.RUY`.72:>3.hnJT
%C$>6RK]j1X2DD6[+A`O%%q%,kptZtO(A*=;-;lNl^cmiI6.(QBdFOs3#14&W%)p$G&0P;P#\^-4+aKNJ"'3Ii@#H4i$'`tf2:gGS
%2(ZO`:+(Sr"*Y)]`"ckq:=1O>(=PJ`'*J&9KV^0-C79.\pk\NmK`bb-HJ>/Dq\VB'YfJ=s@!([7TLHTFiIhC\DBjaI@OX%ImnmB&
%,,)>K"JQ^%NocNpS=,t4b+8Zj.<h7UJJO<6_0i#HA/':le9JQZ+<lq77;/%,&dqoJS'-U*@9ildbkm690j$=3AMr=5f^I"r$-H7I
%TS%%hLqJ[%)PX.[C1qJ?<j).6>T`or!c?HH#j$pP01%ts0EctMPC,jH-m^^EPj.K]["[lY+MF>!@>t=f<g*F)Ih`>SF?h$[JnbH>
%=+Yd_;HbjF3<t.f,C:5'L@ig+/JNEq(1"SjMEqc[+\5OR"9g)7Ef+mHHF8S2JPg*R6O+aR[#'Yj%Ei]nQ,_VOj"V1J5%O/'V]n00
%JIVlcWuqNd@`]gN"bd(pg:Cf*$]I=S73O)<OG0]CI=h>c=+ZncPKnu4MtLg6BaMYuo8RM!<Gb2j,1j:l.&Wq:]U2rA#FO,kGR#YP
%I)&O]G/t)88Um'(TmgDe8=O@cpL>\b@rZIRdFkF,)G('l.F[?T>%LpO!l?T]nGi^;d/0`lh$h9";1FfdD.t<j:hEE-=tjM>YfRI;
%g<s%D\.2Rk$$^?ul1u`i@pEh.Bgge#'do0RoO>:4)aS\J;+5MaM=1N@AEYQT:c=+VfRtpJ%mdJGFq5,1X=Qps'Tp0>MeMA7#JOEj
%A%ZhW)e$3.aTMl7<@$TTK1'/[$DGcn_rqB_'-NdAo%neW2%;*!qPY$k]M))\-lb^rDBuM4)p9aL9sJ,XQPgE>Tn*M?$p@UdWi-@O
%jWIu`NEZ/JY`%1ok0[!PorV)nPkc/$Y_UBD^ro!2='g'MHF0WD169i3_ck\FP=_T[e0[+T,;(%Oor/i[=q+\-YdMA8.4eiUaImr+
%`-'-*;4.skVQs_;Z.!Gh(YK9H6V0fST5(_5W@9SgfsI;u-)s9:_ApC,Tgk3fP,;0_KXoYJOq9pPM]`_`-SNi*,G;u>8b1uFdY+Eh
%8t]_)>ZJs6;3Z[AeB1/mMRm?Ai)PS:NeB@=WNWa)J_K#iHH4C2>,jViJqP/-:0Y:rjN3r=W_of,%N.km5Xki/&n7'<b'ch`2NmMM
%]Lmf%8-3X,eU25E$r9!/YX.>:Zn9p<;.u_F6FfXB#T1^4:@SRH1lS!00!"s]P\QI;dYO/&j"jXWX+h*A6q(4f+BVbLLQK^e^3a3r
%B`V4:#^1Y65R>NTVd[Y_#n]4](#mpeX2nt1;?5-=-kOE)B_J53DCNL=&CiR[`BFu.?/61gEa.C'idu/[C-'>B>j-9KPq53<=rIho
%/;@:<`FYG2*I)J`TV=Ah,/(Ce*b_u3q]"#6[hma"b-Zo]WAM?H2^qp\1_d?kE*>AiQC>S-knB4R+cN#D]Y\>$0PP2k;,8#<)lPSm
%U\)MQ4H%_RC5!eJobXTo'krD.MtRq/X2sQeRoWN`c8=cIbD=H:I=Wga"D(k0BXeWC_m\8-N&n_p64j^Q)>)1"-pF5KWmWFX%H6"#
%S/J2b<eh'"<5h(V=E]cK][JtS8@%2RWu3WI7r7j=Jqe#JpEBj.[gi=.rR4W^#MU^g+4O;mShR+Id::>PPXjjY04W_/d<K2>`;kjA
%SX-nn:j>Y7b%e`n!JM;H?*pI\N3R5W@L>K5Xl>\bF)qcABaVqsQ3U4l[\-`?Ms:i1Ykh?4%%BLcBV2FVZoh3HK'PMnZBQ!E"+uD#
%b,I"JFq.khWBcI`o^WdFH%kaL'X2AFRsSg#[Q%ui!]"j^&O]Q)K$U*Y8-GC)j!cT&n6R$ijcr7Okl;&b/lI4uosqE3Qs<a;XF6:)
%9G&)%K+^VuX.g,;U,U&k,C6l2G"&;@1?m=JA<gaER#Bl+12r_ETYRs9>s:SIeL;Bpfn(@sZll3AYM?T5W,\iQJ-M::8)Krj`D@1t
%(JWRC>aUap!,CaJLl>fK[3m1/\2BC1FOoYCO`23oXoL5?$cl9P$=/ocG#=DE5RqTn-nmN'RV6F^aFQcR(Jg7(Kh,Df2b(t[eLM5A
%!k8bE`Hl^1.3\RDU=3d5S1)#R!(Dm0MiDa_&Zjq/Bb_nF7I^lreMA[\#u8B-%S(AG8<L/VfXl./Q4c0!hmSotG`^E$TdRa/Wnq?&
%^G*)]gl-XXXu(_@*kR-%fYjL2e+4!0;%F2GL7=0/%<@+)?S#&n2]GhY5`d\J.4oqj.B%*83h)ZQ#40>GWrpA`9nB``+W."_7AM.5
%]!nGB7;gf9CSTk$O^;UsY4/ANEi[1lX=_?l&^">o%*)5D@OW=&_Ycf"X26Qmf^dsPqIC81DYe+A/k5\]&mWNil'!,d6XbT([jAhe
%!XPJ*'pL^V+\%E[Kuaj2-d)Xq6Jbms6sC(Y&B&uqFUPc$JBc(K;+jHQk>$)UQ12BE.>l?4b6i)7#"1KP$N4dFc3miWThcF.q/X9r
%d_#W%)#eF.6r8Yc6=:5'c4P)1JV5@mkc]c0BRJ;(J7&a&b>_aK'?eOoY'Lc>C0#7"jmSl!B,b;?'KM@F+13Z4m)k`(X"ui:PEP*#
%YHi^u;n,/E)%7X#Q/r;VaV'F//RhiiX0=9ZJU5<U.ijBI!$HP-WCSeI*Uqn:lNrXr6/#8<Es./U#D-,kT2DaD7R@+oQ\l?V_:0V&
%::1Nj5m`X.>Qc>WSehm0/kZQ%#_ba@N^dn4>3+4$*Fg^b="JTP@+C?2f*pe;Mn?5o<.L5RnR,BdAalkJQf)(PUb'R("RB%RJecD,
%G9L[":gu,'@6/F^e`pT=7K?;:>!Sg/=nP+#'aW/A-.AoK-,LJ;4d%GVFHs%B(u36bR8m;s&jkA_70qpGf9V!ZJiMgkN;(I56K2"i
%7&X0>OuU[Q`V>&3??.#fq8o(55X=*/5cLmGLIrZj,c+<_3=E_*fS9!?&+U-l`[obIX;&[/mbL90NB+g0%`gp2/g^l8bTJi`'GI](
%=-Qk7=#Jmo#ae*_OM5+YR9U)E^'^WkCFM8FKG$:$<8pr8Y(LY+e2Hf.Ohq*O>I942Y9Git=b3!%NY"*iYbMgr_Z0\1Gf)d*k_]U!
%S$LR0Z[sm>YpMf/NdRp26+4M;#UG#W%;9KKYXh,)>Hgc])lSuE(/b31)sc%_Gh,0S)-Fn/+U%9JA50*m,.%o2fXKk7a@RuJ)PDW^
%$4'k]gae&<TMh,/!_/86=&W\S5Ynq%!Xrt%Y&GL$:<k(oKAnjgAHW,X=n1/iD1JV9J>Q^Ro>o,V?pfZH,?0=3;[aI:Ok?<XJc5/,
%XY'P%(u''O)+IGK;mS,)hr^rK5h1d(F*&G>.?kcH90\Q4Ak38)OSkHEG)GL(<%)$m9Y,q77?<>b;2i\s\(_ZC/=lJ`q6FOj.Zg@_
%DUY@Q0EaWu2SM8dir>[.W3$LJL+'k;d8[1NLS?$5.O#g3lIa^gM1uk>l$'K?^Sr=disn@l'C37Y//h>X`XQE$,3T&*;-BJ)c,#p#
%:W4G5^LU-EX)iu`Om"!V,H:ZrV[R,<QF%L0rN_XK%B)fKlDA&*,-6+Ua2%jjCn>VbLr/+=Ub.<bVNV^WR1Qh<^JIb]>_\p5245rj
%\rsMh;J;U1K`G6bjG-4ZPkAV1EHqF3HQa04nQh#Uf'KIHadmm>"K+uBUOr83Mf>_&TfX0"I77!r=n"&[jTb<uDO"$C,fS6\mCb+7
%T!IZe&]0U7G.!I[WrYC/Xr)Egn=IGnYP&/GEl>tA%L&o:^/;"t:&u0So<VQ2KuV]tJn@_UHk@c$@&!cDA3pZt&)LZFQnJr2-r*>G
%hO%d=<hGCP@ai\#/e(1.jfL7sa3kS/.EWi#c'7V4Vo/9M5[+NA!*L(b!%>[:Amrer33QT".HYp@$]aU*<@=i!4!&tC0VZ#XP(b`D
%N=b#E_UsR?WPE<^_?SE?Jd+"hd3A&cb-4=eT^Gi*\YssZL1;,[N9Z]6aO:6.&QFX$!q`n9rD<r,?DB=ed*Rpm,*E0@1E0^K,Zf$I
%6&)$J0n06;<mn"q)UM.q_8;.ea<^JUA]c22LA)_B;SKsk5/NV\$8<c9ab\)ifPV:_)G/sOoHRdr!&ZV+=[X%@l-$51rBUL='bLK:
%OD,r#fe_ZcA`$m@<![oPR0J3l%F,+Y=[iZWi[u)uDBVAm*]!ln8``BkCg9OkVPBA$*OZ/K(>Pb-+#k(X<K*c0K'FHm=et!*A#?9G
%2$\dh&ucF`6gP2^e_g_-m0rls7BWo##"3H(i&&6U2N`GUN.M5]dS$O@i';7iic6s<c@Sa,^_5NjN\+=qP[`$m`ku;"C$.jB1sZbI
%N;=VFb&]7k>_=j93pH`\RkA?N6(5Y=N]+aE^gMU+*+UnXAp"nIWHRsC9*\N34`LiV4/!5q_]/Yj$u)Jjo.TE1I1s5'rRgC9@<ZKE
%("Ua*cf`*l/]]Xm[c8Yk[\Qq[Y"jN`p,"+t1<p7M8);$=78uWbFq'<43M6M6eJ[WS+Sm@ufU'5g%2gi/+(G:4.loWs_C0+0`1k[r
%.!q7Y@cS_B&k"6b$`Jl#68r(_@/qY.,#K/3#$).uYQY0Wd^fY<o;+PW(oC_X\>><9Z(8:e<M@`#U\rOQ=!J,#2>@bj0;g2uC/$S(
%1/\T\!/"ZJ"nr`g6XP'cC8`$QA6\b]c%%pe)PY&i/5qrg6<f8rUAajdXn0N\2bJOqr4GJ"0(t@YL5$k1#dqlmjYXE\3!D^S`IS'k
%@kL'6q@F6#&;tmnnO?4?F1I4,V+^quVL8p$REXQA/%('k_D.dS&ee22Md6u^FVIonY7m[H&:I'L#4m.t`KgNK#,"N=7<+o4g_A-F
%=umHns#Ymo@%9[dqpr\`&1;W"3+Gi9<Doc*+i[TA%j:o\]Re@GV_NY70"*;5Z+j#[`G3sTj#uW-"Qb8@^pqC!Pgm>NersguIYnW\
%C)*4o=<j^uUK"?4s4#/icm;g]#o7t41Bgsf%`n!W+dQT@B,E8fj\;n,4F#hY2lIJ)dGW0_S0kfK!lMA7Q8ADi^(c\NXtn?I\cSC'
%Ip/goe2HTEU^r50)ULU8&n_2QS[!)i+@An9]W$\A##3*62+?:Uis;'eck^U5;4-#L$C_Cj`mY-[[%ZWt+Po!HUmTJB]BHhl4HPcr
%?4h.S[BE[e+Op`X<`igKC%3Yt>FV<n;#><A4BsB+e<j<NVe>@kjU7h0^m0,!LbqR6!h'sKM`c/2.0Kfh'$RN<?!to#FMX$#2A+.`
%a(2.722jbM;*r1:!_rFNjC:n]n9#tI&Z\[U@i3(<Rqsp\!k8Y-Jf?@$nl4&aGWn<lTg84n!E-Ni%)*0j#;Hao1EEhZo[56YD%[-h
%/>Ia=$d9`Eq3[:ON(/NV;>MV/QI#lW#RB#V.H3.$O":8hl;le7\[%sMVb!<Zap%Qk@@<r+6q=Ei,pOkC[M[i?,r#J,-7Kuih1V^E
%;iJ+l5Vbn\%(C>Z1JYQaG%5'EVc&/)mWY%Gl*4VM+3krNL21T$K'BAeSjkihO9>q:#@fG!dg-f,$!DpaIS:u*-$0t):UR>=GoO\?
%VQQ+a5n\`Kf2FX0&MqOOAn-+!=fZs*9\7Z.`$nC,r#/)'PSP-P2.VPlgT^fJUa(9d0F]eZJ?0[]'Q*'tJ9#8VC92$O"+UlmD.G_0
%p^UUBScla4jGHbcS!%IihNoYHJjC:,IfP's68fT2S11EhIQ[*]g;hh^&aRS=^#H'8cnHm&_5Ee7C'"94omCAsO]8"9=6nfp"3YUJ
%oMO$fX"Anu4"(2c&o7u2K,>Q0EZRK0;3A>Arb,Ek9c,,p164f'[]*O?2U7]$qMrc"YXlUKo0aHSUJ_Il@NZ:NCTHDgTPJ51;F-Lh
%f"B/^XXU*e*;LTjdXnBkaB1e6NH",c,q60:S1d^eQs<P0Zn!=1*TOn>&altU;G]h,X_Ilg1b_?16@0Nc>5<=Ee1bh[RqP`?Q/\e\
%Vd\OiV+D72/+e$hf&^T;C5%ORELs&0<4s,G"_1T9?sd/<1o^ceX,H'Kcq#>p^tP6i#f`UM>Af=:b*$p5'hiI@:P;T?*Mfa57*NG*
%6k>ru9GYog"D*PniE7k"72cOK(K"!>1/5"g$K=uMQ>IbE'-oH^Gli[Xd;KOS+V!*?iNh"3%(e*D9qVm'#]g*h:o8iH`-P@@]9KWF
%8Xj0NK.au\/C_kJ=ZG.['gW,p$t]NkAr.1O3p-f?YM'N'b$^4,+-:CQOh8UL@dKPZ967?\"V`mqR3?7SX9kGWUO6^iY.Y`RD:tqf
%qV;H^e]J?EhPemXfMo;@C"l%gCSODDTL>]\6XQ)raDqc)C(Xb\DBCWXG"O64U&b=PHaX3KoRZQ)+=,\#:*ULJ.3S+G0aNu_JIG&6
%WMh4S&dEH:h=94Eo4EP`9Q>\eT;_r;(s>ss#]%?aXTOA?EjYa`$R1>AHj!!c7!)tG^t;VX%P>djCsV='9FDEZ+06$&,"-8;_;aSO
%''bO^Au!ZT2@!Ii5R[e5X!;u,qfd-0_[>>5^0p3$MNfM?.hoEKe_prV8rLpTed8XZos$"KX*C(,N5@ZML8oud$sjOQTVj$Rk"7t>
%50G`)e8(M8-_dVp"&@,AJkB6UZ%F`pQP:1!O1HmK@9BI,BJj.kVC\I1-NmLXlma`'VLUTVNT(?=n0Ic7=>EqG-UPE7aMZ5q=FFik
%7phWYWOY>HJF-I7FVnb]U'^-e1:49[P@tQ>?mO&R?J@fqJ^;hM``*eo7$$p?a=I.\(+'uj7c0Y$#:MAT4`\//7;R4hZ*]*2b\'YY
%DDjGQ>0%73kE1frJ^dj=On&Y&$k4eq#VppEQ8dZ&6Db$X1#<Nc",dCLL-`='b/n)U0gQ(ZPlsF1i"S`A,n%N(\0tTa$Zd4P*^LJ+
%Mmu"bA!il'"VA5qG/P5m0lJc3['g[]oVAs$N.mQ4>NO6(mpWQHj7'.m7CHlf",k5+nWL=[$`arAM^%'3(M7)`3C^j46rh;`F0_$Z
%LA6DL%tl^n$Z%o6VOTnhp]uP^\PthsG(ggk(9S9ii<8Bt9[rX<"I091Yg_1;cG[S51/^1&cl0qt1[kZQ;kBcT*\c3/!s57)iBoDW
%X_Y;H-t?^WI1m$LXD-D.6BI[AOpJ&BRpt];EQPIX;Hk]m$-BlN5`KH=(dfjPN;-IX"&X0kn46suiH;@7/IM,[@uYeh''5R&a<oX#
%*-0+s@&;N:b8dUVKmL%.,aN8nWD3iKMHPG9=3&=d^ocf)^,!2JP-KZqcE7q%"\#^oDZc[E_%;/qj>/J`4O?F0aV9B8Bq20d(tCJH
%-u+>7P;W.=UP2)R123CFn$Ys<f6>uLe:Tb8X//%Z4s887Pt%`XM.]joT-+Tk0Ieu<.\B8-&d,`?E#h5]$1oJN/W@ljf$Q3QLO<J?
%mT8c9.#]9e*]=70(u@NKQ%fPZ,*3:d[g/"$%mbf+!4?PP2fqhFGmiojeOU5_3q<<L8UAaYQ%Q)(gEN'6WG$enMdT/O[t.Hj*8f/I
%_;+J^/`Pq+)q-0^q-fr-s1c1KIkk13L\^EOiRODd7Ni^9i]I=P;H&Hu1OVL7.1`I1UM?0s?V77dj;9TN(=\ZS##RCVYpG)gdO[o+
%2hSZ&f^29<59dC*M%NiSSSFuRCVDua8eG0X./IIIZ@4P+#qTj###k,eCdfZ_1C5.g]b&O-OmT8>7j*3rGp2au\61?s=bMkQ2(B+G
%@0<=56.9llU>-8dB[jk4WT@o4#+oXQ&g>Io%3HK.6O/^Vo!13Z!%i?Z5c\Gs77R!g*:747M.'gW/:BsW02%<8Z)KETqcrE#0Fn[E
%BsceB]ZIUD8uter2Bn-aXm1J<`Cq81Nr[k1b7B?-5$]?qg/ud]gGWdpJQ>?o.2-T.=GWC_98*g^ZNC<(id@`nOr7I=)Qd4/&C&K'
%Bs]YPPcmSg:gVl@NE^"]#B2;A7SsD@Kd&>eY>hrDgd'*oN@pr@>>NpcJe&j_)DhUKo;-8_DbG%ek_crS7V8VG8s=fT@mT[F>[&i5
%=D4P[@*)SKK(_b=QSiW.BO7H,6mtdkQ.>*j8/G>VPgKQ33EiJ+FrJ^\%71G>/]H[hGsG3k1a3.B\gaNi'<dm)h.u3crI+g*W)$Kh
%UgVS_$37D>&1NX\/Dh4>_b=f5psXp*[UF3C^[*iC#5ePp%?e1i&jeY+#k1r3:E!9I.+&rMM8Ot)Po8,'EWLPcE9nh"a(^*[<^A(N
%=REGRPos$/?E]d]1i?g>()TgdSQ<"g>Z`T2:q`;q/-KQOk3/:$OA*iF@#,e[Mkq+9H^^ZeP"%1C#aK9oW`RB<6HGg\>+ij7A5I+2
%1_Kg+'AX<g&@LSsAaFpoBXG<%\<r1m*9R3uM/&\qenR<<d+E'brb3(T9VcLj6`qbc<]D\MN#IpLV!#jh$=^PBpnp[-;;sc=V\P)S
%0Ot7\3fHdePYfMS^^&>'?<*l`K'`N-D&93\;_E2Y1]e;7Y1`9'k'8^_V.iS'^IZW2TO8K[RR*45fq(5n>LNAiLm^ESQr5no[o^6t
%^?"T=>)iba<)^qp>-N6`0O+*T(*kTirFhQPo%u#^<3YoG;P,5(TS6g5Or7VI>*`n/:Fq@dHq+/keQRlYqN?VN1cZR?OIGHoe3^:h
%#-)UkrK?g_TW@o;@!C4K)K:+[ILuqsT4<IAUFqcDFj)/\2'NF9VA.ku-5EO^Ksbm-F9)7JNo-fa2$Qa5,sC(];T+*j)!kHj&ti5:
%(llp5WD\Y^d=`4b)@h'XD5_?;VNsM6RLGC/R']Xi#c5&Q)KuoRhUO@%W]WJT['W(g7"J.3d9)jb-7a5sT(HJH&:dbBZH[O62V4rD
%9kZBN8+"^*D3:PRQ6O(@JS,O//L5S'["]T>OHi,q@#t/9,4u>a"QW`3bZ/is_I%?BR3@p4[@i^ca?bYNYI1p^KANDa3&\K""c"iS
%"ERg)56`Sp/NLTONS:imYiD`"W<?d1%b5`*PO-i;W[Tp4WId_6jchKTYGK;KK:,k_U/i%E(m'`!UUF,)CL\qdiMmk%1h<FA]TUjq
%U+2T>"#^l%aELW1Z?j+gA\9/Pe[-*uee"c4do80j'hFmQ[?RZjU_cQ<A6NJ92d\+,^t_=GHULq=Z!9![,2f4J,6l^(!eX0=CQMke
%X!^RKS3X*SGr2K9#6:&.(*\A[_j4INSe5N>Qe$74+AEZ;9^>>s#HfY``D.pEK#U[DKmQ`#e6$ji`[*S?JJ[^s.SNZ2ka)Cm,&iRV
%\6OgTde,`/g<1HErM0HV(QrK;"_h^1.!6rsk('K,#?lWrG+><Z1k^_hIC.js.SR8Xb"."s6D7!u1'BDM<*q*X0eF6^_jF*]VdMhm
%0uV(2/![n=75Tp.eIuV7>0nU]!n1Eh2O:!B`!e)3[BHVF?#p$/F1"YLlWiZXn@PI3%GirmQA)3chDVA'A[GS)Lt&YV-Kh5".QUbu
%;$SV9RN[ZgLd^Ol'\'$:.G.NB8p#HW;/M,c]TfX$c"\debWM/RXqjq-PZBMQ.X@boV#h95VR;N>>)^q@l6HVHX&(.&1RBl_3X!2;
%!N$RgJF0m,l<#%%el25MU^'uPOdN?]%^0$KW,^NJ,sDG9Xg7[:\UP/g]I"`-/2u`b"K9oAJ,g@c<"Vb@pkBqJYd((T'qiT1dE5;n
%V5+r#iA-2ciLXGj2]C[SK]oj4.PQIlC#r&;KCq#K0F*]lBi.0#.^RSj!:9p?/4Q"?U-C.8ehS"L9T*X//l%=sW[pff.;>&dId2cT
%6aCW'SIgHkP>>r[P1I,9)Z*)p/8,o]7VO`4pe"PAbg=B3c+k`.jgMFi70u=2Q+n!#%TBt8T<(lZ'7M2d-6:?>\`Q.#W"b5CQJt4&
%>NeSg)D+&an]6^@-HMXVNbk9%9'9(;886@I[bWZpUfF)3(goX2@LaUF@(Bf1X<sFV;I+'0UL^JJ0q]k/<>8U^1qsJKJLoEgW&b\F
%EV6,@R49Y(/;V5Z/GrJ3jr:)j.WX$5/m3KIVm9hMh6]3DG[]0L^0\/GTc_:M2+BFQ1=H)'l6!pq>,Pr+)kun,bq-\'(oR_%#pkp2
%AE-S+Ji,9.b$a,.7KO+4VDMcsYI.)`.`a"li*0FKD:PkALdJNX[@SJQo8j:r10>0,@;`656JrNZg$^ITK0T/)O[B440d'dQR4$R&
%ZF-U7qiZ"r3DcK722`/2`Th&f8iBdtd7S\3[al,59e"Ft[>o8WO`%7=S9(Y8^r"%ODG)ua"JH^-'T!F^\<1?c[CU>b?.k@[p.K/t
%=NV+U(dhFXa4GEHL=EHe:#en'F>cjrY>=1%\3Ot*7=CHK:^!UDO34=TRP,ir^67DKBh"'t?W,703Rf?`8QgL\_3Q'WPDVoH)!kLJ
%`&"1W!Rc#2R[Bn42O$62Y*Rm/35-t)dKV7`hmZ-6iRmWmHa$83&e5J3F$D:kjBLT!q.18E.EtQ,*hl,4#0eD[-(gWXK<U#:$IVBJ
%H6VLWm8A75Go#8";T?U)=(PaB3*dSo0;TrE4q#OUR2Cl*=sj>H^;b<3L8'G'2_Jmh=U+_eQgD%J3l^C,ZYaG")L7`'#+l[)#*0nW
%<1^b!"GEe;Z0#aY2*7?D5frU_#q8!Q;A\%b5:!#V.`;&2cDm2V[VGiaP`eEX;B84NX6($Qn4XP6JXUU^Yon5DAWpl?U184%$[gMu
%e(ce3c[Q2#/XYK`Xj3?ukg^T30%ZoEU=;LOXjobLEeTOGBIk$EQ6g8h`)G#pnK]TN0GgN_ZG=IX4&ZM2ef#aVXFRNSarS:%;aIF'
%1ZP^?elM#Br3n9mRo$'V9sj\"dXmmUe-Yr">(s/Y=Ge(neh<d8hNgbaJI0^<O\;RPY=2(A#'Qi2@mp^&`MV_?`i/i@aZ($JGGXR\
%7ap(8Labo%/(d:_9moo?Q!pR./ue*pM4r6R[2)g6Xd5J6RO6'#GuV(hDTnCb*j16J_M"a3duYD@K7i:K.24^X?mKao9.;=8\Ye>l
%k\+0g!Cf%`_ihX&>q-TLo]mhto!Y*/7HC9P"mIPp="Gfp)-htEZ<4E2)cO^bCnbH6#9Xa9Z`TY\NXNj4Q-*YDs0&7T=K&_@"\)11
%,XD/,@OS<f(dflt&dBft7pG:t7;+\bm%UNo&lJaE^!Xd0O/D64C/GPc>!CFMC1S3IH"V8WVNqOn[aVs=Zo-7!'p.s9;Q[UL'JJ`H
%2&k9'MZ$@jF00;Q743s@UP26<:GfUojYiu8nn,dC(<<J)&k^q!\TVI_5>t3EU=NuBH@r6bi08PZR)9W(g1\/o(p6LX08$_mX`e1d
%r_)B)NGHVY%DEki3?ZQJTk#emh3h+[9n=1S<=uWU-uW:3)!IJJPt)[+FWTbE=tq/)"Cg@)[9<_G2K6@LgA2*00"P)jc3iYlBgjiJ
%>"f-RP9lQhR?ZK9=Md\k-Z.pEnk-H[2km<q8986"2(EFOHGn`><S^/cBIkF&M6(fM<4A<rn#/N<LFG%br&/cl3f5AKX,1"Z4ZbeV
%O<Ukcg@ajK+'?ZZ[:J>%`m7/k4&]&CiO,H8#nEH5YkI!j;0dBqQ&hh@n/mNd>ANH-/1*WZf#8!1e<+-XF=99+<^2^F;2I#39R^PI
%Jl5dHnKf#'^lFh?6Bb6r6HeYpjq]i7'-8=A5\G77NF7K.OGgq^\Ki^22&O2[(RR.N8l-"U/V^Dl]@XM5C8!A,c[leh7Oq=L<!l2^
%XY"Vr;#Sg4KNH6\&8#!#X-R=7Oo26pX?lldk9NqU.o9ic0r.P27m*_PU'lnAJq,6ECV';.[+J$QENRGD0r9td.%-MtmFB>\Q-j^A
%WMGeHE1kG-J`*:,;413jFkWK[k&@F;6Oj5Yr?_l8CpM&J[TZT["O2t)hcB%d#=^YjlJUct5XVsgY"KZL7$+=GKVb_9D2$;)9rfpO
%A#h:P_dWd;<EiLjke`.WmG@.%NUJ32'giS1mRe?(NQVH\KkqXBX]0j_q3s!AgLtR6pkX!l%@s]q:b7#SOVKic@>`lQ0o7Pg<\&&q
%s&t'XL]Zh(75@3CD,\/Zi^g8[1^QA1$l^Cj9pFCMMtJ"d6,38H4Z50T)4rG&73^(Ql7tUrM_jD/>7GpUCE-m\:dbX?MS:i8VJ%4j
%$*M40cQ_m(dn3IcDD#W+6I:dGi%N5FO^H8Q9$<^Nk[o86FYm0Y6&8:fDjLd;V&0bXr%F^4X1CRi;.Z6I#')lfU]hhaK*P'F(]Dnj
%U>.1^_4hK^l!"gM=Gis_#1*u#F0"D;YYb:/7b#XlQ-X:(F72^9c:4ST=N3l,)^=%M65gpR(J#lsSnqIX=5cE8Q=q[m0.VN=Va,-n
%(7r<_5eR1\!Yg(("W1AW)TdlI*aN1K.nTg*#:q%@\C>p\_j=hEpco)m%j>V^Q@%SW0'T+^DhbJk8dRor?k[C.k3Cna/ehGK64=$m
%M-?o8Ym*V:#dRKYJl']1!;nNT/0I;G#[bq0Ve8jcX'_YPZt2W9EuWBk:%%?flH;r!Q5^LIX&ZlQ9:1@EZIMjlRro6o(;+\aICqt+
%F`A\"Soq.mVTBGNWI$QYV+-kk@XSK3Z7T#j,o!_\2QRiC;PD#:C@P6V$uh-0/Xh1`%:COE`mV?$Xa\)4[U#.2R+3$XU:M[Ns/I^q
%#XqD[-C/r.)A6m:mJ,cVc-`ME95Gmi+_uK+XhpHW<d.I'$\eu=FC`UA2)p7AhSs;=;Fl4AQ)-C*&oXjG9?s21lEDcT;l-KcNHdD`
%-GBLk6`D?akW/^l'/>Ap[BH;Q/#K,jf25qQQ*r-k>V-=WP.06`N)HYJRSe,aQ%fW:Ui+DUdFo()^LA<9-2LM>`1+UKB]%81HAr0i
%X">4`Z.=)SXQWce2De`-eD%b=9:1:)7Y3$W@2aU#h<ij"U#$]I68D^8n4i_3.Y;/XainZQ/dae-bQrb<)E@lZNO+3<X7r=[O="-f
%W0LoijaEN@KZ&>cms2/4^1'OZ,\n.=[3>[r*N#m4f4n`1A<S_/!HnD6CE&[q]<j+rdVg[JpbZ_+4ld<h>/u0%"hK\\Wf2Q8LS6qt
%-2hca9s$SHR5/==:>4]$dd6@U:*S4#=VcSm=FAdS>\td1'PUN<S^60CiZ%gV(r$3imp9teqI'O3ijT)D,/()U;F`aGCfHTn=s+J$
%D`VZqf@!QbJ\878?7&^S2>S=2A(smX,.Um'"/"c)U5LGa?+t]L'XN_<Qk94.9F_tJ>.Q%ZMd&0*d:Ern/+o-$.Rc_21Sk(l;tE)t
%<F_Y7>L.%/F1/aLQHigTJ;%7,#HLf=7o<4-%AkkGr23E<'igDc9jmhHX?+p0Wh9<#?')L^E#mD29j;YD=G!M`fF($l.eRW4e5,[:
%#?>5LA#*DZ:e-1QQI^S@+6Y.g/jD$`P:0+gZ.)k7#NT9$/KZ0iZ.\][G.FDCCFs:.Hp/.2I]6.1o*]T3IG:s$'\,L3SQ8YZb(tp6
%,&$dJ']"^N5?FbY*8d6.7_KD9QI\CVF=c;WLX**)(@EGK>)-<Ih,Gdr*Lt[fZ2-a7'TI!0^LYFep"AW.G?^C#G$<ccBDk^5.uKR[
%:8g9g8maS$YI//-"D>.'3Bo"2G8B+n6`Xn.Ue"=38EoHAQ8"3mNF=D0U6U3NnZ`E\M_p[VmZ>T(e/]C`N)49aLTLpR-)qqa)QEE=
%RqD#0)p@D"<R`X0n,E>1m9P$[9s3g+\H)VaS/acqqFGV@80b^q!s*/DJSq/=9,*BlR=L/O.'a<]qu50QG.^uF3js`5a=\6\?fZQl
%bDs9f`S(q"E8Lf;dt^5biBclB+Y8)H>"Auqf?mc'OD%oITh5J+5r,+%7NoQNHm7&Ei-m*3VW^rQ'4:t`+e`MtZo;5.JPs?5=lL3V
%A"e,l3.90jbdXf1HuP>N4.,<e:H_%(VP"2>/tmD.ga6sBE_NK6)9HL$W>lT*n,kW_A=.1$4Al`lW@GP6?B`I9]I!YV[^RkAW]HBD
%5>#r@O+8g9A3lOP4aQE71T=jXms7/nBPcT]/.Z>5713=_PX:U>/2Q>g9fWV6<XjWH>F#M@75'BF"@&EB:FO#9iK6Y`YO%AJ!"XeC
%!ttMNSJoBbU_H]Y;iea*&eHN7I#R-@GeKn>-J"AYo:*B0mEhn[6I%SYas,CT<#EUe_+;e`*VOZNNn1T(A!s:CX!pJl&o1/SXJ@ba
%S%Z0"p?bG'Y1RU(:\Rj5-'XAI4k+.6=rrTElZaiTVC4q;#LdXVXN:JRLT=WH5:)FX<HW!Nc#)_<W8t9YVU^MK*Jnt\*Z;pA#9$YW
%F'IBEgL<`KMm,]"j;mE.n[/@kWHE/"d'@QsQP=8S8lnqMDbfGO.j.#YE&uPu7!GS-l,]A]O/*UaYjJ"FVFVMh*5tD>85^;!36u=?
%Rq^?[<BO$P[2M>f=B-6-M_[-4^U$^:iF&j65tr(\Mb^GP!$LT)=d&n"k7I$_r(O"QV.52n"-:<nGmmQ-iZm*JfJ?KFk`eA9k6Y%n
%;"6`n(Q=fOI,&rPWmgUqiMD-C/dSh9Y5K;Ul?5KQqbQJ,.5`[D.&mjb40mD='ZI0qh!E^C<`4I!J0-?sIA&H\IjiSg7@Y&9Np)<>
%NuUPM\Z.DXXb8-l\q4h@h#SBq?]FiCqr<fK\.es/Y<0lSL^Y\(5epES%.\gG0R&!B%V5#CSMX!W/"_AdL[a0Bkg,!!@l;9p!?Mc0
%&\r&3&MJ2&7kUq`[aV4rnfgPK:ngr,C]jo@@i#QpLF,*Qc+o<N2[QY`iNP4+5,p_'7/.sr78KY?5;s^!G>orYLggsG.2%B;$@]U+
%=Thg7S(cM4RL.XNJ\"I%au7cg$OYoKF-JR)ML@Hm&ZE-Si7uokDQ/(%V,>E8Edj.[($64q'&Ho_!-4_77u3,rTg*m:C6lZN8tI75
%i!!cA-aabsf16\,-sF&jm<`3W7g:7K;2#QC^Z9CMEGilG<=$U%&HKC>KEO%!gQ(%SK(U7'aqQ)4d6:er&\iN?YhMq2jHdHbMZjF5
%&FOd2m9Z*Xak%+!S\oq3dKjiRSulhB&T7cd?U&3.:uXKZj[5*6%#Wte(<+M\c!fE#A??ZV62l,J]_4\:&$+"jqT#-QN.K?N=K5!+
%KgAZLXhiY]apiakct[_/:.WBuo=s#.f:%>p?oJ`Si!"Q=2SeAj:>AB=4m687D69ERpJ@XqQ(a`sP(9+`T&h/0Z&nNb/tu/USIJ;#
%78D4,WoZU2c.1=.ENc%&3_fl^9*spH]_n!iW7W>KO@PWIMHU4@<u`STH:-@il&r9$]Z-I?WeLV,Cr"=qd>1OsaEELRo27X#o#]ha
%KlBK^+[<7QMFNiPh:#*s_]]0U.)(H*)2jCqmQ3eY6XNX3$Y*9E8W.OuKp2rh_ZG>km3<Xb?lB;u_BFnG+UX'HfV?0S0U:I,$\h$7
%>'[:kqZ$m]2,.iml@>;Vds!jid5H]/pk$$nRi*E]MaR10VRMTG/3k/tAgssbAu#r6P1l&MJtt$82KgA5gS+EdFHHY<M'S#7SX#un
%^`ROl(,YVjD0M4<6b#MLZiaYeD^h0%N"h/dj(+=Xl6IXM<8(V<.%CVRJpkrjD*T4Z"PZWq8Tt6AdR<t=K@qd)f+HS)W_PgQB@g&f
%Sj6S"X>IDU,"Ws`0W$F=X>:e\?Z^rF-UgdP_"Hm4f$O)7puoQhLpXNc!O0qZKE80!JrJXaR=G:j0&Z)"6$9sR'p/.@*b!6VH+<gJ
%7L;tC'e4k\o%W4m2@9%),j'c1!k)!s[Am>.O3BpG[2D95W)QJf8E.6kI1g!$_&e(h?o\sY`.ZaqdVs^$@iX\XO$aObTVYtH@\%iO
%olA4F?dspR>;/9s8;2rNesWuXVTumHj>tB9L.V]^=f?9*i%Sf%`ToJ]*3Jg[P`V%C,BP\:bKS'kXmE$TP$LPI/(B,Ykf<X*EDl4$
%eoJ5f^FlatD6Oj]a$^@()+-`'[noEBMG[(5lnqQ0XnWXU2<'aE%9,7J#:5r_4sgFTb>"jZUo'89l#@pLg&KuAr+HG9TJ4',Al;q2
%=s.t8k?*MTgrg9cH;5QDql,QtbNk>uaI5d;*9Na^!$cI9/(bH40iWEtnM:l^(geuPF>DW'`#\-:6)ieXMPXU5A0PE]),6S`CE;>c
%`$>*cCXC<CNfh!m3D(`oHAO56G2=h+M,caIh&Unc/P[i;P$_DjX?u=%SASA'eH1uZ&fXWe@H+9J5o"-M/P-^S!b.lo<A'.R:r>[_
%R.SM06l)K)cpWDZm)_J*;YBD37`]Hm*rh3>79*r'$Y3![^G-<]a=,dZ:]6M!/q!6TU0tNMX)jM>,o0@/;b-ih.sc4cAQlTAA9\g$
%]l<0>7#"L'B,3C`442?e3M>#T1W2Jg!t[X\bF^(Bf[b-Mg\P^\8&o!E.Jq^n&IOT=-u"Q.?S*ENVP0kYK;#f9&;A1M56M-3hLf!/
%9LKW6b#A(SDf0gn)2!E/L0RO*HldpR?`XSI.Q1alCZTH4MiH)WLm45Ec1@7X!/$m#FYAM*+)c$8<lE?;(rRE%^.q`QO\c`AlMKMB
%?r:9jFn?'CeXJiWmdk:n't(A'/a/CS.`8!RA_9%J3m76,_H\/i-.T<\3@+LTS66Nr14MZDC^c4U-tO<h<r,/6oZc_p"j$efD:Wo/
%BilPkUjht<8t+)_%!mq\=g_F"XEeVp\5&6b;LQTSGVbu+<\[Edd2/]pqisdc[TEed=hHTO(-G>/ZWo`C%O:J,`%H?fTkf2mUK'(p
%Y#BXmPX;r=-7"h\X(=6PbXYc@q*m6LhI8@^io-@Qe'(-jhbjAE9`r0HCA<Ked92ir;R,4T&UMPa^_J>EgpG0dS*rh1?49Vq>SC!H
%et.*)3ohJ]ao3>u\`fs0&(ah\nqcW'2.E[J+sTV^.a7/eD)H0KN5nVc2h\TmfJ06q5`rJK0X234Z@XZ#kKAH6V#1);N^=$l>S[RP
%.efl-?e^^`aq=g(MNlSK<-R'$`bA;Mn]?KT<(",+4HV'eg7r`5^,#Pk9#7T<PZH?RD.(pOf$%t^;L:m7"-[(4nZ+`ul4P&Gl,_ub
%4sPHQF\D:M%W'/*77fi4Ea#mMWlZ>Q9o:p"f'n&*'&Z:25rM2o+@8>t%p6e;S2=%L.\0ZC?33U5*;n_H\f:XNKh1bl-uHAR+gC/"
%01@dJ5jdU(Ie=NSm4\M)m@XD#$%.,-MaQm`C)jG&T?uUpmor3jotAu<;"&a2N`Y[r>n2"k=6=Jj>AXlC^/sJomq[=]FhUr@E:7"j
%%c@&X8r)<WV+ufcfsO_545XdqGbj,pFhE%XlZK/t[:71Wo=\ak3o?u]]R!rNG,XlCElY6T]lo/lhlCt"pU,IjX7I\Q4Oj73_aF0H
%YMu84f/auP>*hi&)CX3@*Zen%C*)YgYNMV9pPL$WIBDb-Bmm2MThF;/HMGKuPs*Xo?JEBDIAuYnL%JF'6bTZ<5()TfN=U0G=8>\]
%CRkuQ>k^i4l@#l/i>qYnmDF-sX7r=EpPL&=jk#qCl?o`1i@A:#IX$t2.Xu]-?>=u"o;2;=3a_0%GW!'4!-*7*W<)"lk=u3!qsB@Q
%LjIo-JN,^$dK3:tHSpmdmn`.uI!NJ,"B!Kl9b@!3<s?u-?gE<Ro;sd(?eD25LcXFoK;eOX5)=Ml.tkPrImPAJ^$erfI-jRt&9Y]e
%$?=s-XUsC`X]gOqorVPVkN8mUM!*okAr%ec[;(LYhs,s+n#^VdHJ`LnBE>kL%oMeBr=J@!f*W_eI'4]fhY/KDc9kk%M"kM-X!H]2
%l)g8-HXEe0piLe\-fP6bXeLWh\P#X/?i!Ap,jtM(=!Z)?=3;_LA@p;+naO1j(NB_,WA!8`pJPG<0DeXW,gHa`.O3@<:1qMcX%T:O
%3#,b6NVH=pWA`bJ^=4*AhYTob`+b-6bn322V<WjIs0oQa-eEjG4JL^,g*>m2X$5NRc)(DqC+ImC,a%<$e0*/8Y>n-Cq-&P!MMINj
%,jp)[7A<E,]c'JldI-Wth"aj17%Nd(8R18h;^HE`s&,3%(VWlr;=AjK&n:u\eOf\k\,%B8IB-3(^6]`a`b+#+PSf'nX&BWRN'!jK
%c]1Z#&m)"beOj)q^XXi3mq]lTK+VuY9>#K(Wg7o$\CE2$L3]\%iX3T"G)89;X-`UTDtQcq_XA454@h+_9YS/HX-e9[s,;tpfAKjZ
%PN[FoAJ2\[e4eZl<mS_Qlr)6Lhs++g`+/.7e\nfS<nG9&V-@Mp32TtrS#H(h\qr3j\,%EPB"1_uE@TmEj$]HA<DM?F;Wf;dh^P,+
%'R$HuU5\6Jg53/8Q[1#OjPDDY.._kjH/]1SV<UY%81o$\eGESJ7(r&s:YbhJrT)N+?N3EamhJZ*]g&3AU>GVo.(]"S*>IE*SJ$hV
%?>H7QKeLtQr3:/4:t5AK&OjD%2,QKQ03(kS#JAPTd?8ORN2";\=rYF,Yrd(B,8r3-;-XXD<ClrVrX"RK0CPN18b%O^WKZ=>gmq?#
%079[_o&]f`C+6<,>jA.ROlT7l`O270c'0mMT2A=&mn;INhtNsfMM'PSm?GCrh5R<^%!SbEihFr)K$'GS:M?^%aDn2Ri^1b`Nf"2j
%[n8,&F^/[\\6<mMVW&$(V4NQ#n$e0(5*4Z:Wjqf*Wes^]\%4'7WEq'TW:R."MKA6ql7,OShs.7%LOH5-U>GV_/*_PdZJs`-3\.r7
%4/J2qn"8!2H1h/ig5:2`l`KBjD\Z>[0C3"d7@gV^=4I%LG=CEb??nuQn$Q5%A[tfJnOe&*^S9#_$7oN_0/ZjZf2jFQ/tCe_Y^#-A
%<FYL8J#gP_6#s$Gio,0`a.hGBMCb?_Q^TJjI&Y9JL#c-u74[#m15l"cC9qU,]iSilp&9V.MgF81[&EH,7Z2S"X0ehs[8)W@h^c+E
%pT7JS^\+^4MgAar[A`])@Z,I)>KmrX^/]#i89CoeU>GXe/a@bfh4id#l7II#\,%[_OmWog1fWm#>WbVs<EqYomrVgIRU%AQ]XiPY
%b=0*_eQgVu?I-T[r2$.2QhTD%++NnJ5Q('?J,AVo^]"-"If.*Uhu6YnJ#@eol7___?iKnG^]3-EaP!RHJ)^L)2uR*4o7-c2O(rt>
%gRgh]ha$Rt?!6qoXca\QDChNZW.:+m:r"nN8EVb7:,Q4=-.Z-V%4BfPI@-,&b%YUfh&)D+M1K*n!Z[qF*JA8f[^e^NoLY3dASS6=
%o0Rcj0g..c">RJ@8mWbUQ^^Osl:/AX/u2UtcM]('0ac,^f@@IO8iX:TC1X6K&7jJi3%a;`?Uf/Vb(5Eubct3mQ8Va!f1[jF1jd<E
%-h4@>><<NV_6&H'8[JRt4V;b8`\Tm%:g^K18r^FpbtI9>]T6Z_ZDuD[<^)r]1LBSk7f1*7DM^-Anje5+C2n.k4%&!HRR0l[$;.TN
%^4qNNRlT-=><$/I,28J11$quT="LYT#F&>GcMOV!Y![YXn[i3bCK7+C\n_Uu4I$+8$.\N$*!K&79/?H;eN*_Q'm&g`+!Zd^C7D()
%M*eB`7jMuW'FOK4:mOA(>@8is[73-a4>Pn2;$QYMZ6Uc'&JtO-o@HS`Sea"b(s+hoWLC!I]ja9.#p%lg0=ra\O9EUNhU4=832,8/
%H.HD/P'4W8'+#nm&@KkbjV;)`LT]6,VZ:U\#\Z$B3j/P/=U-R@_\OH600Zk>B6@'0m]J8`Q%^n]3[pl(SetWDGMM[c>cjQm:DcoB
%3H_O&!^hb?L_5cU!Hd+9).HQ['<4:tZtHC.`8<NF4&I'if?&W.;i90B/-;k1*5<fiCK0Ia(l$_hhB#u.dW]ETeqH$on3h24Qkh5h
%Mt!tI3$nIJW>`!h<QuG>2+#l9N?*8pY=B>h<6qYp#Np^K2o4NU\/gm?%@d2gq2e^JKQNr\dR=k><Sm2i)l^,([/gR;csK9]ePB,l
%QFi9c;9S$ZX;bj%f^U0(4((dR\m1jCH;e0L#p!;@7C#KsIVZD%>PA/k4W9#;=#Fdp:=p8W-[";RQ"D8>&:PJuX<fe8Z1D+Hhui6u
%3O:clQp'R\5Kdfh.9);_a9eOVGfR)5_pW(Z'^@+sUnBNB]Vn[q/h".g?H#mJVV5"@3So*nLX]E<K\9NmF5^a@@02gZE/L^ikMkro
%drEC,B"$)j.A?&e9if.RZ3Mh'`/eL:D[r&b->8l:im%s=6:qGff3+20dJ1LYHs5^9B<062s%s7[A%'@(6L/98/m/CiC9[H:T3hko
%9M_7W,Hfnl!grJ'/fh"+hmZV34KQqqU1X*#OQnNWA<Bp;=`K"I/Y!/kBEb1t8(-h69^u%==n>U"J#-i38p1OCYaM'[B#Jit3GA9X
%D&*,JK?Rr$Q7%WKZ=G5]BIY70qRX@SdAu8KMsq-:T?F+W^arsNA2gW6#&nQ;N$\?Y^+2FT35qq0[-XLd)W]^K/!kYWfi!2RYJDk?
%T1cgGjL87Pq3;[Yd.<]e%8\isNO,h^1!qB"$JDDur[t.#\bV--EsmI:!Ig)o<)]4rJ:tmpP^F$i6Wf4,h%u=bhm3Z)emBi*`Q-E4
%%#Z`;+_cdu='OdH2597n3bdo.rLq&rQck1-Wf-gSi3KUVWS1Q#r^*lc3sI*B7'M+Yr*$`*0pI8mVF<!#11r/O7.&NE`bREG?7D<o
%4lf/Fl=%iBN98:jgZp?d012.WF,32n:["B,5F98r%1<R>8;fdWFV_"))kX.dYP"5MAFX1LTaRW*hR755+=k,0d%m9-b2U(bjGZ&a
%NEnA[]Y]jAcoKsJ?R+,]ZkZlQFP/ELFK[8W$MhrFeT@U_6K`.(#dC`MD_S/`n60SC+?&)_b3@.s_i4GC=.h"^3[dDF2hZJl_#Q<_
%K3(?=SH%+;k2tkmi.:1VZA`3aNnf/q=l(MPK3d`A@pWu"<>Yf=g8\;q8U?V4^'2N9'mWTA$,I,SaOBTX[07%tN!41Qka+STD.nXd
%JmB(0[8i2q5(O3,C*=`$RM06YrCaV-":r&U)6tLQFU8,CL86h@A7n,r>Zp6d<\O_E)!X?g>*&fY@#2[sJeQZ1\EcM."g)!OG2C2l
%8.^1t2QB<BGqIP8TFSLWYiNbo+GiRa@l8=-Xt/@.2s[-Do1JP4Y*]qbY&_fX%A\.++S^RONq.8::D^d40i''uqNj[)U'0l[C71m:
%[\00p4:?^SjV=]P.Kb[2`I$2S>qH-Z'SS1d3@\nuIadWIW26Q7i(D.*&]P,i^o"60lZZsI:GS>oU7T1^I?]<R0H<K=^[[add'.SK
%Z)Kho/S:ShJ+$\Fe[eGte\G4'QG6HnN8Z7hKJ&`dF=i&#L#gr4b\Mg?MC-_D$t@5f.1sIkc13fJWk_bY$e!+X($U`SUOF-Yg42[]
%O?(8sVM)]uS0!"7jC<)l#d0Ju:GeN\N-VE7AAqc:>b:BB[;X%Dd$6/8Srh82!m[F-SRRf'%u2pOHL<\,X<Oi,Q/B=I=lOd&-)U!2
%$l)2$]p-%ge=Vi%dLG<52Og@==.5Ft%9*rY5"(;2ZQ.q7A/R<JCb^Cge9/LIlWJ56aCXW3@XVFn10\cgT8\%b;q#=arSLRM:,U=X
%TH@Rl4=0V&eBlCq?L7=I`%BQ0ILZ1!N,>Ml)On;)b)V>m"/NLkB1(d;H2l@2:>hGfchf@-K>JHD^?'eRLX6g<6f9hL#[gQVfLDQo
%f#1(5:mGPFai[S3k7aD)[uTUQ"?4A:>lWk<=pJ^)b\b'P#BAq4hk<q6Hh-QE8:##.BJJ1j=G>,bp8ffsTf4n2?fJLG3_7fOTpb(g
%MSE8XD.M.aJ>^Wfbl7#^Nt;UlAUf)O5;d#1iJG,='@tEq'@fE<3AObm>6f+F0!]cZI9=40\B\]eRS8X:)Dht\k,,t+.0)"q=e46l
%T:99qCD_cTLT8[oa2d*nG6a3Ti<FpM\7pkC!0fYfXj[k;=G.9I>V-g?m:=,Y>=;$%A1QtH,E^p8=:l$VXZg3l;k^.6>q>Os_oA<I
%4Q$JY\W_0EB2cm&?uBo/]8"gCDpa^f,q;.MKHM^aJ7U*`39_#KcC;5EC&"<J?TM&F0Q/C><+i@?4-r1?8mSR/.<DkoWQ%OSre/UJ
%.'O<ejMRcA.!WIoM02dm="35>MR&bYde:^r--;Dfq5Kca-j:#tO[72C64lrL]ct(BMRCIe:-4,9HX\K;_f&!$*@`+:H7e9\H?q%>
%U!q<098SC5(*>';o!W&hF5:`"T5n:2NM3].30)R#SQ.P,RA4I,='7*E_oo7AqDYUX3**/E$]=V]:h)d112;AV;T83c!n8$IGZ9T8
%lC1SFMF<NC6dFq!3L@_WUqKWK7)(o=8s?%_S8'/Yed;q^W;6`0jD8Qjnrp'JLEj`(P9`TI;Q$-R7C2tJ*.8['cF)l9dki['?laOX
%+B>3$,fAk^>-FT5`>9Oq8Q3WO1T2QL=e=F9I%k?3,HVNOeMNVH80LB6LXT93e"+^+ioqSplI5s$4eY(U,/7."BTq[M>bLgNHR@jq
%GC8/EP9`Yh4X*P2[*TM%G:CO#:+)(JqY-aPY+q\.AaQ6n??@UR<dY'FNVm$=Y;g/A`=<62bDHTo19loQ3DHPEbXt=.S4Wj.<E8Q)
%8JK+$PZB,N>,(J'/,G-#em`'%RKP\N%Ej\E,_'N"55Z/W"sWZ:UYF0,09SSs4;]O3lKsV/2WDXcN&L+6e>!=6'(84Z8<uR'T-XT*
%J??#]i30%o2)AGU)WspcXNZpA4O<[UBBugTU_IN#7=^EgZu[\K+mHE[1GZ@/19b7!'gqc?]B0Beeh&G@='BNgapV6Gj'o]gN::T+
%J.uC<[D!\,45-Z72-6HLF7%u9]gWF1N>(Y(1S(LH-SKC.^V#u.Y<BUG;Im:pqo"2:S0'Ac`,NT@dkL%F24s#WE_+UuF=LD(!@d*Z
%V$Qeko%"2=&^h(:c$UlYME#=3^HN05a?3!-U3Oin>Yq%YRL[Tjah!FAFV1!#DdgS[U<uRJ6>qb<XJQD>6VUQ'/2tgELZKp(ctY>E
%b0/M4&Ig0@;JAk"=58Yo<\nc5hUD`2!g0Ygfpna@pO&F:FsBo5SgINOeXFWqVcAk>(u/0/Tjl@f9d*`Bld",o9uF)NIEak0Ze#*(
%G:C#'VJ[hdV>kS;RA21;Njg^m-22hpQ?=]eHE*s"OF>YNbFcHM`L>u%WNXf1?1))gn+HCtYC!!RBIL-=.qnb#N?bQ=I3%l8C]qT/
%OZf1Mg%489W7%hnL!$+/MCZUM6dX^bAQiZSd<DYi-r.7-SgN_t;1BU<%S:]9[Sp+?NDI(e\P1K9na=@GA\2$EMFg?mQp.K,h'3_%
%a_9BQZ9JGEDX8!In:?;NnBNI0.c65Q/gR6*4l:XV_oI[e.BImAedt^'9rAnm^^RUXKY!bqh9OEB4KCnERHD^:[0cuJa4i73:R"1?
%UC?[W.5@Ng]ZQ8]>?sEB!.XW)-KtLn1GH`YDcPe8[3oP''LBcpD$u3a7t!jpHDM&AMQShb=_d=>;I[qXD/#9?5)Va-G>/kBeHGQt
%"[Fkk/$Y58.ASm[CB^'S1JH99#N:1!$T]69pgG*=YUSC';__QEgJ#"uf+<``WWB?mR5:RuD3>]%I^<j(eiILoSo>$bRi-Xr_7?V,
%dQIYp`I9)W"eFbio6k)^+[tiO?J>4p4-2];99?r_WG-l4=&[LW7gsb>Zm*&Z31U@EBVh'.4U\&$*VKpLO`f6=r)l2gX;qQbWBIFb
%ij)]I:l-)dX$*J>:^o]C@g/Z[&iiWoX]+-?,.ajD^\>"el.T[t1h+'3[54[q-Tg5!#:\]0^Qu"jY2d%OCc,@#:Nc#5=aDqpR8U,*
%,scX0C&'"(>BQt3VDGbVP.dF\*2k'i9JW]?1XZ#(R>\!3j`I%>cCkk<b@@&*=W=CYX3NVr[n0pM+*0gTaWV>+#\h7u?XC!sg^f],
%pBhcPa%DsCTuQ<\/J.=<*Oh2&KhE'))(Vih\[a.LTaaH-!dJCPQe98F8(=J1('i'2IPiu')5;/[K#,K"%_\*QRTLe&V\.snT=ubi
%m#>ujmOF5968hq6>Rr/tU>j:V8^L[>3WU<AMh^;12*^s&TLH7qVCfYBkoseu3'0FC6;WUGg/*E(7@7qB7Rk&G[lhh'L&oI).&4^l
%pPdL!om0B6'\AK.:X0"*oV<m&n'1tpGra?H@p*s*RW/dCR_sr8Mj0)2DN1M*'*kA+\7dht8/3jjcgZK&1[8S)\b+'finH3=qOccO
%*nRNNdtNp'=B,5egZi8jGhhToH+.O+BsQ_2P(,SNJC'R8#(JZHRErsqJA"<J?S1D9CK+7Tf>ZT!!QS/nd8\\6'Od85b"Rl7$9T6<
%Bp\8n+OAjSi!n5p8j"gR9kWh%%N!l2+L):Ufr:G3CKTd13gen@MRG"9Q5pgbh&JSq"5ACV/4u]]X4@>'\Wn[u6NF8d4&SKD$>,17
%$'oc/U7X:FAYn,XRQ:5dK3t`8_'b@fI%VsI&;4fV]+Ac([g@gC:k7)Q]SS-12KY>n+pf`Of#9RsmCDGcJe8a%HC0U6.W6d[7?DVQ
%=1WYXqdbGr(>ktDJ[+.t&ThtA1'^'L/$=+I#g92YlVsW921?R=Z'okBkq[CcY6(2OQU4sY6tB;Cs0Wc>KY@6`W]T1?XAgVRj/tMG
%c=5p/8-i9,?V34[qaD.-:@bFcAL+W22H$WSb/GS`Hp:qe8MkOna`<!##%18u!$U,/13ouc*</M7*c*.H<B,6ZiG"2)[#Xifn7Ye3
%#ac0"-sa4DLmq8IR)**r;3FJ=iMI0B]:_!@.5>`P#.!O,^ma83Ro"[m)g'ZO2@iE4MEG(F.oP]KIIsIKo1]J<Y6(>e+i!K=/8Zge
%@Z+fLKOAHHNjUIFdY\dIB&n!/fodN79:\?\4P!Kog%9*S5]QrTQO,pAQ7"M_6T8jTX+RE(d,RocjrTWpI';[I"s(#\]sKE2+W.9q
%?93D'3b\n=crN!2Qn)u'*'j`J."YZckFMSqkL7:C1Te$;\On-/600g.AOiUb1o\r]_FI\[U:e7h0,3*h[$Dk'j@P>4mNTEH)CKrJ
%PO1HK,j\(X]GFc2oSTf,s.K.#>?cYj);&Cl?>*564N5S<*oS*!@6N[$?>IPmQQL@gZU%g22[3Q(*]KmKZiskbTgg=;[/l83GIip$
%#t^<e";2]6g2"_(aGLLu?efi,BIg=#PZQFpDlhNa?*3_*20`,k&kD\^R7df(1^ste5B4Th1@:31W8Nn-iP=K*$nd`T,*"SFl`?o_
%0OYSa<su&[p>Sctd6WVi5bgX5IG45tXCV.[]fSmlpecq4.Kr!=%]3fT\1@f->9+QqM$k!;C*B^fZ94ZUbkOM)WVb.R;?7')T!#u=
%[',0u.rbl97`06L>7`o+7dp\HgV=,S8.rls&RgO\oP?PuJ-M/R_2u7$_q2HD^J2t#@Q[orgk`(jq?kWX\_elZ$*C%K5!f.SX'-LE
%Kad;`/J)FM9b#_dI]X;l<07r/*b0e:\ko1ZF9Y,s6-"8io!ohHM<,0<brV;ue)]hbl9=HoQ*#5&9W'4g-=JWC>j"9cS<QX.OTrJj
%dA-1UiBqYQkaHJuOZIBgWkl-6^7'cl*>AWKMQE#-WAUacOJP@Ihn<@'Xs(3<f-bglY?KL`/J`^D`1^B/5QsDj,=:=N_+@Iq'm-BH
%(UC)f"%[i.@<E]KkXG_O,drO!ChKc'*Si!=Y7M+`XQDQ:_o&'J7kK1&\;-LQ4OMZOInLLI5R(%F@@X%KSg"suBs+X9$5AgLrou_'
%3;6!eM-6`A"?M,E]m>ElqH_)2UH@emL9I9(5oJio#;CMGKUc+d.p+L@Uo)G8<.Z39@nPELR`>GEQ,K$IQ5n/K?<9bWgA%J4`;)nC
%`4f\65^&^-XGB3a7qCCPYRp/$?C7Yn>71EBOMM$pGnB.l2O#E1j,#9=&/bt:*]0&)%WYOC9Ppb)X,:DS)ee\Xa967Nki:V`Vl!^#
%A<E\k=gtS,<2,7qAUFicV",*DE7DWjEnod;V=s^%)k=ZmaO+-iau7'OUbHE-CMI:$)S2pEi&g"R.$\jQe17[gJ>pX\/:F,'@SL//
%gQk)!Si*-Ec5m`gjXl_$QUaZW7,JNhjeV7ef4lO_obN^pc,4P*>j,6)F@"H!NUsYDfnfEtDiB].>QM@D,V5c2:@]+Moo.;.*ZYm<
%1nC%*bdWt65`BDc<<\F'$&+6.J'@=-iD[[4Tq56sK?YNoJR\gnk,@1i\6ujeP&]PmYg2aMALIYS\sp^^k8gIF$n^,,J6PPZ70Mt*
%MP1IR3^ETQV09Zj&1'W)3ZINQJI"h?!Gh@lMHPH8h'fQu7uh"bD.lVBQN4G)$()%\&IRm+Ml33krJ+XPYE1IekkA1CMirSb??h$a
%i,b:sg&_$,Y>Rl]3eJT9b/bHf2c%>V4GYFQSFg+ta#9p&^*]+\`3tnqb"5ZpK<h`^OC+iu$17BWD>oI<EA@<CUa!/P$o6;3`FC<q
%VS(>ubDTn^`)VoS5^\jnV(IN!37>9'k@17%%QQ=!4cQr&Z$!#MCfT%O`JdES:t\@i9p2s`Ul&-e+t&DFNE-Bd\ZfpI9-^i1/Z_AS
%@fPu*Yibb68bcOjfC2;I4g7W_6qaj1NOJ.O,Ar)![1[D7K"+g<fK]Np8r5P"D8o/^Fp.G6&!gB*=:aCO2&.hH-peFPpb\J!dW\p\
%q((;-#Vm_H6QRNmb/Qm?G4Cl*G2T*KZN\1$7GuBbntqL'=t\UIb4L&$6(s?<rEL_OG^T[ljYJ>S`?.)Qof6/(#Q(Ud3R%Ci!bX+-
%]%tCboPRbnaSW<raicJf):dBP)Cle/0VPB!/5%4@pi:78ATWG^JZ!cG>H?;FE+X5&hU.+='^5B"RSP9CEh#p&8(\#VTl\[?#0K62
%&\H:;NZ3h:)GR.-:GK0d2c_)I?p7el855i45dAU)[OSbrC^pdlU,`e1$B-B>Hbo'J!7@<%Js!nf_&%\hc>nk\\B=gT:D;_c'WMA]
%-*6\DB@hb<AQt)>GK;fN=\-;="iq"-(W&Q;9$?SRVsg@+<*_484f[KNO#gT%!k*'ZY`r78QrU=T;)b7BMpaROU__BKC.]%IP`iG9
%=@.!XBOmQ5-jQSW!B[gfaTmT5.4Jq;#bsr\FRL>/JA,;o6n!tDa1e-s5F5dU/"\X!*YdWu"/Dnb.?Y73Qt8TMMqm40@^_cQ2KBdZ
%nt@Sb7oFG=4Y09U$3(IhQAH$Enf"ZZLrDeJ;p<gpDOh5m^I6S@>>S^*9-o8,6ELK.8_B^G%3@kPQ)BiaZZrjqBQ\Q";fROYI3ZDe
%-,_Bf\2OI,AU($:P"lK@l%kDMo\,,Eq*N%<)7:q4e#,#+!'e41+1ssAf8nW'(7RpJg2[Aj>f1O.<dqqRW`o![&Qj^Ub^skqZ!5tV
%-<7=`_nn%;H9tfb;VQG`EKe6Z]I9TaRkBl_4bRET0#>D/Uf\EOMa<g7G.$+/?m^bl30)deJhnh<J<W$Ok>KT'1\"UIlSOo=g#RrN
%(+;nX'Y8knW3)ucf\i^E^JticC:7n?=;?Dk3L]*F?Ys6kI4Y^89,X>&r`hXEM:>5pQ/Ai'Y_(?&g*Y)N0R?_4AmOet_5ML-V)Q`A
%=NlR2W,,Z4'iUXNW,-&WF)#Gfk#3FDS)5lYd6gT$8/`#JXq=L->lAZ\ZsK;_&Ea(_AhS/E-jKD?Ao`9m:hj-j<R9O(WL]Wp.q#-n
%Nl>4*KkN_m3\EKomL:c-F!ii&?Q6b9k$-[fT*3MZ-YZL=dtfg]cb3^,'o=(SB(5'E]k$,hA\,LC;DK)2".3+f$9&AV82#Du+`]g[
%3&.7O%&3_)[pqgt.JNdGGF7i[0+U!$PaU8)@4?b.c%r9k_jLSD+faM.7ODdr,@-L%E5^Z]OD8XOk9dqcJQ-']n\ZE$Bg#8CN@Yc<
%G/g`^RL^l&Vg)!91AsI__2[q^r2^MTo$A.1pu#/Oc"90DV)H,N*U-mj4N+r@DjO\^!Cq!SO<^7(*"]GA1cJ!^Ob`TpR93i];'Tai
%dY1uu(]KP\R?Kij*-#.I>)/Ac-nsXGZINnhcs_7fJDq7u#5WDVZn0O\T8,dE?+*750dKD4%nBtCCrr]#K!;3B5(M*kg9W)H8_r[M
%jgd,J1QER#FC202Z^l^im_)0H$D=+E5n;:HTJT-i9Ot])7#o0l;QQR<XIu3@`!.:jVf%V.5[sJIK_Yma$/cQ:,h-"NX]"RsFD(@L
%Ub/$5aLA.a*eac#1hH]kC9bn^ct`P#M)@%Ji5sKuEuah:+.Li%f%LL47q=91(Qru#KLnd6r?sse'HK1qLp<sF@'Gl<^;1u9FUBE)
%E&fo#G!5?e3^?fc8a;b%9gC$*YsOk]OL<S9`PP")1B=^$_iLRm2nS#ZPJjDk,-0M%VJRcmNeG^`r.0Ku>.5Qk9th@9pu9UWVj2Bo
%C*QWOjj_Y!`6qT<YBi^rTqr8El<uQ`@B%e@bk9936hoKgeEbUl$J3N4G^3V']AEZS@21@7SM]HXF@M"8[]1qC?W)s:LP'X>SWH;5
%SgTq@;)Wu_UGSoc@E6qMZiX=-5%OTMp*iC,Rf^$,)*XmC]AEV,EE^Xr:R2ae>Tugf3g8+=kDki+<$o8g^ntksNg`E>;:K+&$\,54
%HIPt`Rg$6oK(k:';@R;49,:b&a.TGd#Gq`W!cnHhRKI(M:8bHAnn!,2G[M$t&d!GNA^)tcm4K?#eK+4[&#AuYddpD+"f7-)7bId9
%+S(*Hb-:nKPU/6'"gr6nnYFuB4=r'HR-0m0FWgAhq,CIJ8)PKZ1u[`N'^m&+J9<Hr/fL1m:Z(4R>oJlpoOXOi+f0G!8)cnGYU<GY
%"!H%NA?CqoS'mP0HjYdF_fE-g?A*U$Z>2P2%$iD9^e;=Y,HQ8?iLluMB8N'r[\,)b:sj,>FK!,/hupi!<_Rp*RD4BTFl]Ttg9P1D
%O\W'JG=tTm)DbS0%u=#$n^K>YkGTB>dga5!H%/mu28;+DW;JKISm)&lFIF(uED^N/;:Nq7Vtdh=$5Aq,H)8/iGX,2'Bq<;hroVej
%f#)Vt!W>Bf21elLK;!,t?1hKj#HE)aBS*OY"p@KKQ4gTc0J#F'OR#i>cI;5Nia+tDA7f1mdq_a/]`DNVHm(eD9%6*P%>'AC?Lt&l
%PIcbEBW=*u>#Z`%k$SL^D3=g(A$*[b<p0u&^d0k+7#LX#$H3Cl(],-_JslC#+ST5)Lg#b#ck'7'R'M5Gn#0<QkSPO:M$@B3+d<VB
%ldL[l%+DOcKhaXTA%"1mr?LV7.k5%(Oog9BKl@_mTj%Fq'\m*]M`+Xs`9#E'TTt[1#]gb:_3lc"GSe?K2E=20iR%k1JldIOR&BC$
%N,9^qfgpZJ`"FFG(]H)oBklVR?lW4+f<+8Q5opr[,"PE8W'ruq2Z=oO8/A=BEJ'Y66XcoTE'jG4^'cs%OCh-h5%-p'X.BdhgFteW
%Kog8KpZe]1`&c46!PO56\W3L734QQe-E>'_U=PoCO-Eo\e=HEZk!(BW:d*\4X]Ce\F<.oH!+29o[g2/QHJaab!$Y0GJTfQ'ViA.@
%.MG27nW'+rccPb;-uFYm3%7^:hSH&KNepH*Ti?s^dlp5Q?QY[N<5YZRm&@W=5)-fMn.0AD#gu>Z/7;SnaX'&&`cKsaI%.Fs1UV!F
%LZ0e%9?Kt'D-=SJI)/o)Po+@-AZ=sjD6q@!lo7""\Qc$=hS&]7j(W.qT2mW[KNEMnidi*S1)^!=+B\faL`G.U/uEn+R/a+:,LbCn
%/@+mlZ:1"3oRm$JSnP&@r$p,e-=AD,p']M$MDOlh0W^orQ$hIdr)"te4fjS4F?.'g+#&:AKr/JREH)6ok#PSP]*(`&8R#8OT+t(7
%':6i;$UgcnYbRZ>Hc/J)?XPd2XuL<Eh(W7G(^+:^:GjKs^q6)=,&_+\[RW;HL@O$Y7V[_8]q:1!YoU8&>l'84!O\$()`mA:^pe+c
%[C=$q;.doCp.CAu+'Pu===WKa4a"-:q4oM%EQFCD8[Fb$2g3f#"oE7Z4Q.R:JM*oJi+Ea:D6pD9R^27(5r+na'+V`5HQbD#H!,sp
%@?kM`Xi-Z`\^7NYbINZ74h=kVN2AF@.,&@0q\hg?oR'C9F=1;WU4b>,Vc-$1Sn#F=!BV3(+6Js9l+\S-/mZlWH*a>mmdlsH0`\)Y
%o^/g3bV-Z^Q!HC+$W@6uANYXrbbjiIP0?!GW`q(/+K.V$J*Q+[5uam9YMn&ERet7nBgOXB+`]U[35nZZ?>Ruh`aWuR#eNnj,r_Z>
%3#8.aPS<)Y9']lAOd*^Rn\\UuRr\!E?sfG,,p-c,+]E5-5(Z.Q!"Tj22BrAp&\.uM<'oSEePV$>m__@M3_)iq&XGE^8"0.N\dCpN
%bT:`1/42,'T.GNEe:ZfMIo(2H8d040)`Z3qE>L5V-tM/@B!FV`a]Abo\Dr>b_NH$HT)BnHkod>i^Eb+=6b[#a672Gi+^$8I@I4K"
%@`7#5i`Ze"?p43;k,*9a[+HW.O,BBT1hhbIPKjCXI@rPa:G"<fH1Be[:A6%B#J"Q9pPC2iRZ:Q&)\p.2YXF3;X7S8XU'%-ZY)rmG
%UD#WMP6]sq'@L#Ugd:3Zlq^f:Q[VI4)*&-`ot<S1aSfi'WJX4oXj_q7UmRsj'=H%FcRi3CjiPkGF]:8VBa2.hKnPH96^=B;-Z-<p
%8u^Ag6oJ1Tc3uOPdW+"M.[k+u:Ek$ni^9.:7''ZUj&Tbe^2CAGQ&_#KIU'@e*f2)(W3N?*")C?)MM_%(2?j&[!GdI4R[o94WpP+0
%^.==BWCjF43q9mG\WmO>-d/^2dNbeb3?BIgJGXrE71sm>"KY.g+*\t"!DFZ,.nQgW1M-6EBk8oG"5-)tL>MB?fn=?2[a)E$b?"CQ
%@$:KdSrjAW8q2/1PEdNt=*'a5=s6]GX3c_mDAXa4TnL-OO&]T9)=6^O9O/7R8KGh:#L&tS-)9\8c$lq]dV3.l;6mY[Wug4*6R__<
%/X,@Ub$q"F9GZ'%h1)Q\(\B44h8/dP@%bt0M.IrXE.6D#2_6[2#W+Tlf;%.F1*EbcODkh=g)>ll#5#,,WmJ3E/!_N$*8uTF_I?-"
%pRWOpcmo3iZ[NFP"f.2/4,*_t/2GE\q6Z!bQre?qh6`:1aU3!Fqt>+I8*'Dm0.!*G3APrB*,gKIG:^#ZNKbE>\(Q^dp)l!/Ue$$_
%9e+jbL::[+_0jBK'Jl&AFsc(-*Ae^j\X-Uk+(\1Qk29Nh0s$"D-#L[/8$7X#M4+XA$E]:I6'1)s6oa8Hl3EF!Cbm59fXd=7[\0O/
%,`,d&h?*)DPO\5rG<tcoC&g7O6T^;@h:EJHOap)mZj9[OWJS6=+P2B/;u0iQ"$u@`\S4'3-F"M6geiReDT-g'9bhOLiOR)OoJLni
%\^0lEPj*hJe,^6uIckIORM&k:]WTW^k]j:tPCXcUYgLQ[ji:'WP_^3lhSnH-'H=EcK*QjIs1B0X880ZEKLo!TVMu8ILrPP"_e6%$
%b\[n$[SKRYju[I8)+th4@VAJs8ZVA>]_Em\WiQ\%@]rpbdX)N0;^h=AI^8?]7Ej/:6E4A^b[+qNO5,-BAsnKbJ(46U@DNC:4H:m]
%h',?47@UfBC^$^SK2GgI7p0@A_CO\D%W3t0Y"SospVWnaDV\Cl.dO%5VI"#AT(`L7q0H"47bE!<?VNW'bc:f_eK\8*6""m=F(]nH
%ToZbrAD7\/'c^^'U?2/Y<O<9V'r"A[S7A)C:J!""-LaOdoO-OgTF8R!YV+U!n=g'kD_CY>h3r?oW905Lfg<Y,[Tp7f0BddIC.d5r
%/SX2E(ZL^4']e$M8pn!mlHq!_I9],^#Y^jC@9`Mij(okUBe#ff;9Hp"BBp20<B$phFmW2S?dh,<H#9G:lHQ(U1dh"fS&'"]Njm!!
%P[4Ri-\O1p;J;/ST&dsqNn/s[Zhdt6MMepY@VG(/FlabGPnj]`!t!G$[\SW0I,bpM$uUG]qSMTf1Q5BTYEW@2a<-5(cjqd2E%2>L
%2X+91H_$?WDR?+Z@4j:r^CjdWjTT<@f81EqRa:qMIg\hR%3O0%@ifW9p$f2\Ha#V2$+@`Jdbd3a.]MM8)28bJ=\[14lnUcPkrs1l
%rP>n[A4^I4f;nQ_Hq"bJMtE>qhL!;9LsJ-O7.Ib3UK^6^=l$B:.]Sq(X:(CsA?6#uk430P2)[&,)$MG#QPcOr4fnP$ma3'ZW]+i%
%4+:/RXq9tKa)i_"IZNF"`/%&!$R7tj3J:D![QSee]ZU%kU!Z+tlY*Dt6uG^RaH#FM&lH8.c:8\JN`/t/ikl57:*&F=+ntR:$i2?h
%PsqZOWXf`0EdHt`>*U*bGG"u&W`l2UFaP1&^GU@fd[I^nA932WD0G@hO"l`0_5+BUXWTD:eM4]7lCKr6A,02(WFU05SLXKRNbQ0r
%E'gQSZf^BW?1%Qn3BOeV[6\X\p!!D_9!q]kML3HK4E))*ED%s'#7[c9'uTI4'ac::BAcW<Oop8``s"jFYD0`@/P?IAN<tO8er^TL
%`X9jSo2ubbN8^lZJY1F:@>u"=%Djm+=:kC63R^Q?bp_@mqoDmE;AQK+S-'3Y*X/".K1QlDf18o1TpQ[th^lS?BQCV=TrdeMO5YcZ
%b]Gd>lPEO_Dc!/-V`a0-q9uH?)H^KBaojph[6>&1;l^B`7-_]be7t;uirq^Qe3DD!B+0fnbYCf3;k\?I!IKOcN-RnM:*m31+r8e`
%@ZOGG!k2Ee-fW9OO0&(n/S\fV7:m-tJ(4=`FJ#L$7fc7H2`a___[RS%J#sE?d3bER*^B!f72>jqoB3^SoNDfHopmMa&P'24"gCHH
%Tr8Amo@$bi<em.,<tB9Z7!/-t%9/hX$92jB-,7u@ab0X]8W]c:^o!Tpi.>ftlG>SfS(1f[Q2>8'$<Tj/"tZ)(FcRr^D.0.f&(kG(
%SgQQ+.]7i)O[I$B9iB/0N^=`_SFOe#1aftC7)NgY=$RYb1L&%)nb3Ug75Vij/5.0ebX*O&F<`A%l35^_b(9qmVtE`,=bDdHXBo;`
%_k0/q5!_9m>J([rgjBRiAEV]kk.lISnrSDWNW[ZhMj/<c?S`VBT^&ajS5r($ag$!VVqS`E#:j`f1"E9g%6\UIn"qg(Rcc2Me7O!Y
%E@IF)Ur9DH#`T=)=V^Ou%6[ohSu/fbD7O:X[Y7JthNlnQ\NJC=bQW+%rcN$:S$L54(!/o9%sK&aU[3E>#9-B3AXsGC@W0r%B]*i[
%%QcTI>;B$paqM@m<'T$$'g3>TdL`M71@WqW5V0"m],2!MZJsQ(LY^H1U&gQZWUVm%hK0%1r;StHIpai*LBT()=$KAsY7LUglQ?,t
%?X>h0q#c-C0FdkC?iNsqm1l$#18k2.T;`BNC.[,.E6_KU(7^4JCdAc?If#_cOB*AIM2Xj[FrHOl13GKkFE-^\ZJF9s1?l0](cs'*
%,oN4`m&]4Xo]g7(OF)GFkc:dcNcWaPi@9A4DiQVU)ds7V8e--mWO)XJk3f";%*sNrTk"er8YH]9#+-S$)PN8T4)!mjhC#WK?%jb2
%&ZL^]f5/((kUHc=oZnGl>7g=U^UEj+dq%SBnZJD:dn26kB7E61nB(<6is\4O32Qb#m]n$'";?HBI:sX9C=VfMOS_>(+#]BF$R_#N
%BA+Oh4rt()OO.at`]/BF#p6."-D\q8ejbhrR,Fn")&V8JD[9Q:;@L.Uf;eA)8HF(bPK2l8/a@NV;<6LVH>(tR%R`2;&$@#A^IU,a
%U!f0PaJ1UOM1ND#r."?/n^:!ATXGGkP[Q]tfITXJb8=pC#cCm_l5-KG`1^Y?7);=ClK8R+.(W5(1E@XpH"\.S]05e3:CVc.d=jW>
%@6^H_OY#>@XM"B]3"Ru\b3ZuG='s#IB2cJlrR@jqE/l5NeZ][M&0')oKl0J$Tm4f%Z+`(hV\j+R=nQHugROmJTf($p26HAMN[ptA
%PSt%)A"NRJLnM96\#,s0[IHTL[QX_?&S=I(4)cI,hV))///0J,"Hnkt/-)#^meAO&&?TSL0O&[31c2Vr>8g`-4j=F7pVSR+Pp!#5
%"2UC2a<,fM"OF>:R97?5m<oudq:>CB5/[iU-Lnu)4Uo*;l?o*o#BSYOBq]OLMTlY,;%;&0lIfVi,LceP&lT&2D[:rF:QY53U)qd0
%5g^jKXOLQB=Y!]2T!nl8&FP>=#iUF\4N!rUY>]!U9;nW>NW]gd=sC_`nnNS870^`TD+-'re&$?=KV6KoQX.F7$$%(*!lBS.m+Yr-
%b>3eKmW-@L7#u_#&h;;//;AJK<[#UN\1"_!?Pj/^Dhnf2P8VEWdL&1`.8U6<-IT.JCi!3.dH>)35(;=n:tWej:77C3=-G]2rq8'M
%5D'%gP0^G-O`GNJ&ZB"KD+0&pp]47eggD'V/ICGjEAS.=$cW`B6R]P:kJsj?+=&U>oD/.hK2?Gb't>rXWffm1euR?m`E!e9;4F9p
%Me.DM<bo2I79bsnP?Pb"e$R&"`%s'=Gn?ubVRqpr'j!j>"9^s[%\&]YQs!/)CW?8[__gQk4_?O=![o58Sm4TZ%=@66pi?K@"I!S0
%>lJ??2/Rnlo6KEm]1RYl#*"[Noaeq_b;EmBFL$*K#Y]!U[%R1Qg_/dCPZCrpX+2HEF"n^3N/gid0"%blk>c18UK344$tsWS&pn>e
%rtN>H2(+IZCtG8;=D>8KeOP*q-W1PU`2MQT`7J,ER05B;VX>2)NH<-Sm`7[l=(gOc,HI,1j:rsb4o'jmr*q,:\q]bhJqKe9ZVlSm
%/'!E$=Za0%#dAF<7Qu0ce(fM30M8-A[W5_Y@-29f]R>U1iWD]rD-6J3:qZ-,.hs'e"9d$D;pbLa>/]&QJ#*+`Td3UH`gb6t.V@n#
%"4kLZhCWQX7(J<@@`hQ-6c5p$'?ie/JPUDOQ/Z?,rr"$m3Bfg'rNcqr?4Zst2j98@'n1()o`W]j/E`0_6Jr)D=!]9EZ%n0HBKl^'
%O3?)EC8#tdQF$/YqlF2Y.*P3C^[`dhoS7Ku(Ikd=MCh/pj,8R#et^?)2`9C4M@&KIC9SjPF&R+e<%*<FS9,H,q)Q;Pbq/VW-#0/N
%V)kq!@=@q/o^!Jb5cXk'''`M-_I9*l]aj:f]j*l!B!f[qP!D[<m0=mg=R6-s/(3"t-crRcA;\FWJM6`8eGQA%8G%YtBE@l3BjXQ>
%K-1fY$urQ^Mu%ZN9lFOrc3@763\<kmNCRfis4("Aj[rJu<KPg=CgX&c2R`PBp-9JuJudh)qGRZHMCr\7LI0ASQ?5meMBjT6WG4*K
%!Vcpo2RG3@"7e_!Db!F_>6p/)o$I?>!QkX_@p5Zo\SVsnLS@&S7.eqO?6TY-)R"h6ck@,#%H*9m.)EI^AuhqM_9Kq!8JJT"?T#b6
%YcF./@!mcY*H$38bG0&-<Qs?gc.dMIgK`YF9@7'9ji"KhA"3aV,bbYm(6=k9Of`!7j_s*4U]@.-3,KrmCBV2,_)k6db:X;k[#I5M
%"^7#R[bY@;E't[6eR'O^)c)2d-)4Uu)Hq;D-gd\iXZcH<h2Fu<-9Er,Z2FagL2;`t,,YXPE%c?q=lIaj;BL#IFtf=5/=fC(7q-6h
%,*6O78:TPDW`MYj9VZDD;m$Wb,_.!a]8AU6>FV`ZPDs*mTD2MHcB>ECESta%#'],DG$tKmdk<mTI&;aUGWtHN>ZTcPNVOP`0\2BY
%9Gk7tc/QlX0@B@eXH*]aoY`GV#HYkEo<Oj[50I)<Th.CV/]D%=@KY+#Q;N^:;77PPR'du0C]=h%1?+(CAFTl&<TDE!#J?%)io^*o
%c^W6h'KHS3!S$Dj$seg/=/o]jFDWH'>ZU3T*o"p*JXfHt4=0Z'2"e!!/KaXaAm^<Z@h[$sJ76PKRTpU+jlcI5#cF.bQ#XA'omF4_
%]"m*3TGH-V]^95>V-%AXU?M7H&RObR_T(DOpV7,s0E]CNJ1>P@UM2ih9l]oOW#P>J(iSZo?hLmmqO-/f`;*X[+$HMMhWEC!6M;d[
%X4r@YWU5,*,-oh+eM<SW=q13g>o'iFDX%.f4*5fql?hAPKTd#B9\*H]Qfl[P'Rr"YpZ>]%q,!F"'YA@aj;A%M9$<u6U*j^92OT'g
%rJ]%&ilQ;dLWWj6@R?kLXkGh_^jt6@bOR),\$BhuQ]2MQTq5^L>JK,$(nEh0IE,>nH6+T,N(To%'PkTt%`r(ba4Aq%B:-+8@C9rK
%1JJZN'`r/?TmK;js8";>R91ln;Z0$j&FlG.5Kl,uL=W>u*a03-5W2bBM0O5+X3H#E>B[=m;93p]b.SmmomV9YFr1>+8>#T`!<B*Z
%Y^,=8/"O\=T5BQBH[dUPgtDC%8qW0q0HO2pf@pm/ems+XWN%"5auBT@Q5%Bur1NnJS]G]&JB8.b")UC['ng`lk31h[jH>1pJKUu<
%(@+h7YL86P'FQBBqeT9>)p0&83K37bEh9s?<SL3HTE%gujkG*A#kJmCjcJtbdCI0"/WCH`-s.K"m=ni2K'+3qD6NG$dbECqFrqb-
%j!Y27\D]U9'DKdlC^g0C%dp>1`F,=<!Ll57J^TbLVJgP$<+7;u_GJd-3,BD:D]%F;Ve.#8cs^IIlm&<"UUenNaeC-'_b(^+j3Eb@
%iV[2)&pIR`;m`A#MP^OM%>8_^4"d?nT\-YRI+ecB(Oni*4M]&CL3Iutc$?&VF]@(;8AtHqk5m#)26\+tDu5I2PW0ac&>'h=#9?nL
%Wd9Z3HcBigXN*I!q3&XL6%V(/8o<;meTTkOR>eD6U395Hg+7?%&isgOXU.iHKc%3%lCk8=Dp@S\,3;W&^)^pgEtUuaa8/ph1<(h]
%_p#T<EOG(tK<Z2V`5rM.-/3SPbt*hQXS_Nd)XT*Lo:tamZ-=BnAt9S;R(=Y+#\]]Ii:_63`Je%9NWH@0af2C5J[Crk(hi/E7J`,P
%Q!$qgp:ZEiKPJpb)qb[3rJEP>h2^iOrOLM5qCi#M%P_0kOVh83fICPF]23-Q.q=j52)=F(0<];tUL2eJ6DtB2M&'fpEmti&Dk%nm
%Zt"gAlc0qW_1)l"*.>W#$b0BEX8Q3+15aUQiZmBrhS'X17>s'fSo4)6=k!AJ5R/AETVV?$!RS&i&>Kp9QDP)Z\\g54`Y#QbEGPSn
%Xqn1.H]8e8OWI_((nbl@UfkSL%ulVg.C4toPjY@#gk`hB]*c;s6JFA\8SlYhJ>V84V/CKW27:KXa,`OH2!hag>;pI>_gmCMk=OY4
%+6oAs0rcKE"D(a0cQhf=8pG=g?hqQ(E[!UbT<\MR&e*JUT<;=W,0'7FbEcb;!j,C&lK=(JbLk)uar/CG2tGjSf+Si+:=`pGDh@'K
%jORe%GRXXTnBrLN<\[7;-W<8V[^X9lW/n8tGO^&9;Z3j^PIhV,Ehq_lQm+GZ.254e=Fc-ioLl>!-2:F_;U^#^C3sp,4YX$Aop'KX
%3q3BrL12X7dkj5mW9N*Q4jF%]HYZGZo,rA`<)IUNa7*S('+Z1ZX<JkP86a-7P#fpC9ieuJh]p)gXD'YtLsN1_ab\I*D7urmnXZis
%L!HL\)W,U$JT7A>U!XZU0[<+KT#T`Jp"Jg-QAl.lGe?1RR21`AW?%X5V)&?06;>rL[!Ab5ooi-W(fE)fGG]`[hIFQuk%@;P17[4k
%dG$ZZ=$#XAB%TYe$a)PMLJ8a#2F^V2&Y>E:rn3`#EtlaL[CXOiLi">g.$]r:<.m8loTPqfbSm]2gN$<M]9Y]1BKIV4a3_VlBRb^0
%L?p-Oe/TBKA&kE=g=XGpnUY/d<J4W:m"1L#5hlE+/\M.;G9e=!SO#)8LttD)*+\MOZ.=cP;i]TR6&Q:R@APG+3o7;#(c#YjI7)"X
%.';o(Ka?$gkQbZgf9O3^-d?/!dT-L,9u6C1a%NclqEl5h&b7P2eTr3]gMW'/c.r9-]q>ELfP<"B,OIWF)j@j1MeGQ`/h%g*KX-8e
%A]a?gHsDQ(?^&WIlq\pllZeRtUR8@.VDc^edC5dS/2Z*6d8]iFoDCT.Pd!LdJB+&^q<VYg5'EK[@T]n!$('rk:du&=_XH<;HMp[Z
%,]I[NHP5(h:nV7d*/d#&3_8oq=t8AFJgHEl?.4bo8VkI4_BV]e1f>e1J<<nOI>7s?:%/cMDb)emQ!WI*N@hmVE1J!Urif/;q/#K\
%cs.9$Q@0fKn9li2cF_7l-NJ:KRT$Jo!F><UL.fdaK!s4Wq1O`qdkiC#,m'O"_Gs\%=TbReSS7oAac&d;,_@1JGIG3ZU_%e;*rn+n
%AgXkf5mc`7ml.>n1X2'(8F[,#$B_$B!H&7T%OL@IiGiiB5'a/BXn;p9>_YO13oX5A;P`$A,Z^:3^K`G+*F#3Ba>Et49oE.R@3U2q
%YnOODZ,fh[S!+eS":F'.!'hirS]Ai"Fna(>^^#.OlkUmM0[W8`.3hm-U7[LejR\WN)G!s%:a:6[:_B]:T2jUL3Ai1qM^=rmpWX46
%$:dVGoh*aFKX=o,cOM6*e05(WA]#[1Jr)>0:]n.mC)EZ8.6AbpG+;&Zn5Ys3U.n?UWB^cl6$$Pn$!hcV"^&+@GG,9iagkuR&QHCX
%eUTgqpg_@!0aXGtCKJqe&JB-4Km6cj6J<]9eZ(G;=]SMbCFG5t#:=PlC/pAI3qMXHA"Hj:fA&elC-i%oA+p`1/muTAR*m71(#kJa
%4Q2UlD=L1VWc;fk<N4f+-q]N`n=i%PV9h&J".FgtAe&X`<.`L*h4]^jKd0m?l5u8PY&V9dW!'n,_FpH0k/!'55:)JtO1EVBY*>oY
%PV&aX-2c@)8(l&Z,otUh4mRc'$t'"<2lBp$]9,cZIgn2oqE=gW=$g0ag6PK,i0utaJ>RCg2NJPie,6I&/;j#K_g(;J*]!R!7t\gD
%BGLrr'b+:MYqboXP@')kMk`2$"XD]Sb3;)^=/*6>8PTD-J9LR`V!CljVJ1dWL\-3+pg8$)M.EI[>&5o=n<j&e%q[i@9rNaQ("R1X
%.\dcj=j,B(1>Thm7U(B0TuT*=<&#O6m1=+b+L<l\Ls\%K1i<,qo\r1[I<X>sJK]X'YBA0'>`uS6a'';]&t:BJk7e(JATYiD7tA5a
%H:,qA<+N"]9W:3LU9`?;<rd3q,J>Fo!,:+CNhY6)7E[-8mb739"q>98=Em'\Wb@],_C\2]6GX^I5E]mF@=GSP6euTPfRb*=c+E&M
%!_iZWXrW"ojS]**`s^:pEnK*1!u@4%$Sq[4'?'5'+4:.`A.BOc$+?8(BiOI'f?kr7c4^8LIJL)f;$FNR<l9T9d3[eFY$.$E]m6o;
%9!q.^kCsi^?OOoj*oMG@0Yfm4nN/U/!H9+M;WVYMq61^Q6]t\+P?[]$1h1Y\,sR7$co>BuoTeh\ToA("\6?Q[ERjdVprJ10n<%fb
%2EO/r2efh]r[?\B,V1,uF<E+*G*hj]e'8M:V:+O>S!,dd(CK]"AdorI8?B`LW9aPYS_]IjTGfdPM0Rc.5_1(:WR:q<8$bsshrYco
%D*^9er3_E5hi&Zm.JjOt-C>V_^;*rA\LnXRb>7736&2Yj_b1hnTma#5:u"Hd?'.A%P)bE&QhYmBPp*r*%B6@3*783:=E&_g*:^G<
%#a(058C])$&<FH42_3<@b"P^]_'l9,fPes-\LiK<1YrD_"/l3QqTJg#9,rqas,J1=jJn=?Vjc.%o+0RXXI1-a+mWFWXC.dT"k+Hl
%%`sf?AL5dqZ9cFUG4i@0$b_)h7BIk<'F6D6RU`?3L\37L&aVc/<-sB7U$Md/S.6Zs<KPEp@;+<2)K`Jmk)g/)\TuqM7-i!(@feNN
%)[[AC1biu]RrU2EC@k&\WY97r,i+]?X.TlUFTlB_XUj^gkGkp2T9k-fOmIF3SKq@/(!3h!NW1l;jr]pAgL`kFYWGLR@ITVWSqfE%
%jA)#siTT"uDD$tn9Ao"N:49]OjK:C"Dqp1I`"A4aAqa,68">QDU>ecN#BJ9rb3W=PaX0$s=k:[Y$q)o5fTRX;^/A[n*B-W<KYb8I
%JQgD$UT7Wn[9V&c7<)ck)F$p-=GgaSUX95dIm?u$)570^TSfhV30F]]5Fh,?Es!];;tO#)*r6]l!\3X)&sC36@eBf.Pf8/2^g,KL
%8itT3N=[$q#[rT'JdUMi+_'hl`3,Og8*To06[_6/$u[A#"O8STpWusX9H6cHqJ+m$@Y#VKcaHu[TEJ5t_g'H25iA?,i<F2$0jE+^
%i/s'Y)W":\Y\^V?P[7jr!IN@30@+s9eQ1>H1:1VSo\b0QN(UgDdHpTR;:>9Qj3_k0i4r`_V$2CIOp,A]:#0A;SPkG9bBsas*%emY
%kBfBdp).nBr4+j0])6AW9e#dhJdkJuU3rjZ0s$4"WG`<k+orOF/J&D17]>7``9D7'OJ9UB6GDi,"rD.\Fd\+WHeO$T3GTbc3fn<"
%0N(ifjV2hLN1cH/;+H@m3K6deR]<AeB644*1a7dTRS6Jb'[fN;h-6%^4<!p)bK;II?6KeDa0Q/@1]B$UK4iAdVsUCDegOo5nf_7(
%Vp54^bH1&cbDM9bEc7`ne5VpL>0'kd_eSMR@<<W"ZMRe-=DKZI'RR&<O?cH@H3c'K[-(G-b.L",CitId)G?='5GE9MpjC%EX9j6b
%68"Pn::>a8+qlu*/9IYm(OK-MVXf*j^n=V,^rIh!^i3]5b!i,1T\A*p9M`+`7t&)bF7TVuofF1B=_QJTMZJ^dkYkFEq9b9/C]8&`
%\\D?_^Q<#j/'o?d9s_/!l83KcV=q,0.`O^mDb_>I2um!hX;Kb\94Q]u7\Y=;(0.fJMt26I=kW&I&8jF,V3o=]?lZ0p@NUnk%Yb.B
%'r`5*W0:!ILU&bt(e`?=0m"nhj68Ws-7aW24h35D2sc.E_SMh\V=(mGXm;m'%[.rKe?81BD,9R`/'>2.&]4>hrhuTg`.Y,/LL0U:
%*J@h^KDCVE8h$3Li('"DiUA*?T7UL.cD/YS>D'tiKEr[)#!MpSn]QYFW&7S&6P*+T+""#:18b=;>p7`&PqPL=)fC?n#!s"BXs1uf
%<?:a3EcEiAic%HGXjr`iZlZ+YBd9tO8TB?V^#84o[[B/X#J;k!ZOml:=P0;t]m`7,XVF6j(#0'C=!b*e[>k<P2'VRb/<$#1ZBl:8
%?e$i0Q,eS]Jc.^8rBcgM]/?XnV5A*".MZ]k\1%$m!EDiSjMFSYoBCfUJ4W(AqXgH5-_()>Q;seI+c9bl/];m".AUtb/f&[:G!A%Y
%j$eVtX$N<E#reouL&[4hV[D+lm\W$aG?X\aHo9%*W;9Xg/D4K&+=Q&!S9/d[GX:oqK"B^?7HoUN&Esbi<1se)coG+FK.KjgWLd@<
%'1/WD+53H.67.D%[9&@iTC%;nJbB6*2@AG,/M<MnJ/\jCAR)!N<LjY?]7o.Kbi#P4_uXh\j5Qh*a<+BYbJ<6Q\:-;HQ06\^m5VA7
%BrWm;m,5/,T:$6kS>Of2+]PB@[7U$?"?V?!)9ca`YuN<3c?"G6r,b(:MeuU-.2%RH,r+dOT\Q3md[J05+9.YKUZQ*5UQ&SH&O_K7
%6)9B^%YAoY=,6fXY:PQ_!1!?V44KN]\"KNqn25%U6)tiKibGg/_(oF','6uVl]`6;c.U`>a",)f7u9=a#0V,'<gmc,qt0RZKQ[de
%<D?mt,T]sH5Na,&hLB2t/uML0Ui"(^bSEYq3X!GDYSSnqY]\Prg$I9X="9u=/Lf(7hTM]E*L_K&=UT&V*ZS.&p)5XM[YYN><cb1:
%nP(*s7BIOW7>8N;>$(!lMN1ldC[o\5K0n\6+'WUJnY4_Y5Bd4*.gS?qgjEo780eR<?]JR>+S>ljJY^O!CC0]^qa0U;4jYeNG]UMp
%MA3id=8X\1D/RCumhTfBmD0KJ:CED`Q@ET<-mb-bF*lB#X<"LC]mN?o(>FcSKS03)fEF/<8!U(nO0grH`@a1De;oMNW[=Yk]D,(s
%%rgkF$/Z_O3`1e3Af0K=1\]oBJglDka2O.I)W&sT@\kNNJ^$!!cRLY.MtgnBTN_`U3;]5k/(j`<Db_`^XbH&A."c)#:2\_<8%'c-
%'r9lf.jMLa2lM+>%?Y(W]5sJL.:Ps6/$fi`[p=rm-=^.oQ)$`/=jP4I0T^J2bY:Wdj%'0FOj/W568?d=aI>NE!$JCEAA4.G&E?-R
%/>Oqp&ll!C'@oZ)+DI]E(R6ag6-8*d9Tr&lZr0*>\]`H5!"QIXmmacW:$K0:ld[WBE1dNG^jdp$l73BFPHcrQgdWL`^qKq"4#T?f
%_(8%uS#FbQ=N=gc=sIfhO7gk-ESqae!KpDc@XLX[^7SX:C@BeoL1]t+Mp3Q4PoPo'lDH#o26[`W]&jb%WuP8(>rTf+_)&)#;37:8
%@12/::KHI9M7[Xu%j@(@PCCK&6di%:MdRk4%;!Jo8I((61<ac`69Z%qKURY"HXIV4MP<RtirD]@I_dHI/Od8@h;\$]]+1egl4eY0
%=GQ#*]iQjSDR-m7d!G[qfj72)iWA"rFNEcqkq).u&;c?f5.+8g$t[D%cLoQcRMHl/1#Bc15"5"DYe6;H^?_jU+$-B+@3hpeUa)'o
%pZOl.;u"20K-k!uH>R=;6sl9k)j$0(mjqeFg<sfTG;AN,e6q+PAQNCPe7qu1TG`DUC-p4P;='e"pM<!U7r%3295]VZETa`>N&2/*
%%D/n1a*e-bO&4<,.n5"e![<lUL;2Blif>RdQ`&,@'gcDh[I`'j!g0ul3e\:h[%Vg^>?c7!^Z_\7`Uto5QEHsdRWO8G_YZnN1EXN7
%hG=(R+$MXG8i]8H]bF0C@<;6Zp88I&:*F/D*Wot!Ur&?Tn[''G82VZkE;Q("r@*fP\>i<(g>!CNqVe\rda!b'"]s(@GfDpOC>cg*
%ENC0/$,p6I2C#kB,9Zk51SB&E69:A'W*`RN+&SG6:I*u_"rbD^2OOUFboi63TAhML-ZE&/C\^'&IOT3C-jJ""RdeM";>nJ:$/@(W
%9e:%6el%O#`4Y<'`k2E!<'uBGe[hitFbWX-8?BHtVl,'*6WDQ/LJK_CU6(5^rRq?N<Mt"TVYLfRX&%@7SQP/UHI]ap&Ypm-0c<Bi
%>OpF-DpP^4<^GTIi7h2UcTo>Q2=5%.D%VAQ!h.?.U:.R;Q!0"aF9Wso-aXD^9JrpPOW1GcO,2NNSNn_87C&dY5lc;gZ<-+W`FXc?
%.%^'=^aeGs,&?Bt(!LmU3kAlQnCTe;>&-i_h:I7X7$%Lc*=#q=D^,S\#aBU9I`/K!OSm]i;Tl)6*CbdN)?=2oTf*Ya\dtle&!*\s
%+li]L@u3d]dF*9Wcm<7i8P.ln+DKstl"RH`#N9Zapld%N4UsS;./%s#gD6cF]J54oAgo_PnBc8M:UO)U-)E/X;pT!i!e[h1*st*V
%gfGmRc#4%#n!/VWbVNUH253QHf`G<M*kLB,g705.X8:tc2RoZ>oo=B%.Mf%gT55ap0rqnmNg3@8j(,VV]t5qtj[B=_&Z//2e.-4P
%5h:;e(BEJ0i(,oQGd8e%!$%4A5c#oD4I<8Y130\L!K4->p((r9^s@.m'uO3U.80ik)llML7i,M6@EYe4dRSG/3&;_RfLRoJ/&QjS
%r:MKt64bWEYm2i(&L8X6m1!SC:SAN)Pb3:1oseK7JQ40'7'EN-1J?TagD2j#CJO4neY&Uh@3WI%bO.GY6\V1G[F^H0Jbe?#p0//C
%#*/g')EH5@GfUT"/qVG>0n8<r@j)qAK\RU$l@7"7>&ao(]?F=VY(G1a^-[DZ"+q:12hd%6Nh:<A!V/;<dK?iLM'/6uP;R:+f+oeE
%&0poAbtZ(s&5`)l,Fc2'Q^V-D%6i#`euCJ0"%oh_27FAL]Q)r-9n\-']dC?p9GCBYdu&Pdh15<p9`7i-=$THn)tMjjOR2%NeMNtC
%.TXgaUOM,]]ga,4JH_Ws%Lim".S\CWkESIFVV[3JJkFaG/Yj#f$bFl7UH2ISHPd`MFiugL+%n71m>Z$c&IZ^$WJ?.N%IVDn3pd8e
%)-,=(kgR`Da.>"XImQGh`m*7ULDR.8$crbBFopDIV\k)5XJA))53UQ1T%Oj.Fi`%Haq)XR)QYMb<84f$MR&WHFOdnJ1[\c&PI,W6
%i"G4u2SP<%:C]_%?^19:Y_"SHFXdfJB\AgOY8RdHM>Eg^+1eC^r0JOu2=@rM_i3)jJ%7;#DYeO_4VX?ddgX3M/Xm6'I0K",1fKe;
%#Y6H[LD+7=Q<l*UMX2[6XK(.f^Ol^B,oclu36uA*D]?*_Bt>SAW42ZQ\Ym75rFr<E;mce,Pbql4Vd\kt*0O89:?cjH1UX6fhWKZH
%o&Heu/;P,!T+aCY;>];\)`d]3_uNadPpXtO`c1&_8t=)kV'4XC0K"?6@hA98-PfVNZO/1%/us$P4>[7LU`=q(S:l5#`iEHsZ5ro)
%(!>"6>g@0iMU!V9>#Z+>(Ih45LM/b01Bfe6\,\[Q;jI%B>q[jC-jr,a*`PH4?3:qO@&00L%Gsf+S;C4s+a0ZKYp]mc\Dmm09%f0O
%UFF;K=B?>JXd#r*(_9hF:IFk@$Coj+%P!L!il$m(+YX=,-f*9g-f`e/,6);p+#hjlV81@fj<mGh8``+n5>\J*F1nVVe./9ZjF>Ft
%kga:+OXD1ka#Z+%.[&/;IC":=+jZrr`sQh]<dF8Sjg8V#q:*p3UI0eV8q<XjqQa!b3+hWRTrmP57iGe?AB,(j_+h<pgHldFZcqbR
%?qFNVobLN&KNUjcQ:rJU[7/\HdYB@`El;KDoYLK`TsFAg-R"mmKYPfkD1#TS:e"[Fj?U($ZKSk/%1Cq*DtABBV$/-0HoK5V)j[a1
%Mn^gGZ=2P;4LI3=YK,qaa#2doY$E8?0V\pn1=T!b[B4o=WpDabc!X-2BC!8_P"L0(SpH"[Y3/r#Jsh8W9=*H;lY\]VW'%lUK+GdH
%Gh3IqSn@R8d]7i&jAf6C)(\&pCP@F@4Zl-O0`1dP5W@(-Yf`r6An:TeH>TP,GV\%.AlV0%gRc)_G7Ef:Qp)?0NHgCg+(eJp!$]$c
%&4)fLGk`"1s#Hq-D!3,ZfLTfE'QL<_?k'Wc[$FA&"i>UY[hFeeVm0Nbh=l-p"]cl?g&8#/HBKjp'M9JG(h&Kl\L"ehQLb,^jL;?F
%_/s#T\49I\<lg1511*ak/_bdYkh&rsS/+1hG[ga1ITAoaa(K&d]E2=#H-9_f$-p9#(FbZ#c@Q5K0s[J7]0/L>:ha9D(5;js\9HSZ
%XI)lVBZ1B*]U4f79MtlUbhuIiB^6^nF'a2^QOZ!U+H#PgI<AHI,M=.N,9`;^8Du<RaF9Bf1"trq,ME(iF3bpOGDftU<*(WkrHN_t
%fA)Df;'W*&APm7PqR"4*m)r!9#YL\i/'8jNpU^SQid[P4H(4RJ$RWQI0A/=I23Mh,mpla!U5L==8aY-iY2-a&8^&2.@jU`pZ1GeS
%:j5%g,Gol^A#uHc>MM&5./CcFA)5^K6lo\!;1"SM%:Ro^-TSsSJ#jWM=EW+*b>G^?C.9,"H099a4V<]J?<:Y@>Dr?D>14=3Omo@"
%=RYVB(6dFZ7\pXKpJd1k:]c9Oa7b[/jEXQ%btlhd\X[cQr2=eGAk6CO\3.\d\i%-'2m)_6@PDt=>nEo5:nI):I0_9p2/W:kg<g^s
%>_NLlG32]-s+#38G^O<Pg7W+D%-D[P%orBRd5Z8P"h.)1S\J2-b1[rfO]hhQ,p'*=]HmBT-l[9o32.f1?VK+T8(:ts3;^Ucm3+P7
%rC6oGmmhtBFE="^72$*^W)$i7*%`&VSN8n6W3b=$o#`cOOdF(Tm4;-%pl^09jFGh,?Q6Nn.bWqkm>D\3'ih]Ue1)J$M8=>AQq(Q)
%!`rQVbl=QC5#0nr9!GjDI>2h)Tpbaj0kY%pB\EJMSDBTfi6*Sp17P=Bn`M`mKuZ&,<a_F&.nNF*I5b<%!a+1m0,CF>`I(KU*WB&#
%dM/33F(f2[In2"sAm`!sE9^"X`Dc+CJhjiRc=e5ubeYC(+g@A:;akN[CRlONC/JdBIMfe422[B0?^?YcXS\;m$Q^"2f',9/e\_73
%[&(?XR^2fc4*Of[WCQ`\f(^6+in4[kZqqX]Qg)]%EEJaO_#WkWYT-P,;G.Y>$Md%hWuOW\\<EYWn.4B)VDXm7:U^<kE.4.0l^;H+
%I`WH4e9RoC53'"&&ii>P`?)t@`!/?PdG=rLQ(G[)[,Y1en8H/kY(l#G3WF&B<`m,$&9gue:<3=P;KV781\rHI.<MjiEJ=@"r1%DY
%7^c!Eb%i)?),Ub!Bs2g]<1Mo=DUm4".'HXGY!(]i[D0^da#,@fa';b`fEDjsWi16gEeL^O,ZD3J%LhcD'[.:.!b?C--J7Wu+%`G(
%ef$=MX1!d!8)uS[oCb(C$];s*>==nro,e.+O)NZ1IQ_WpU(s#tN9A(*pZbMQMW_5'Xn3OZ79'rN<*KC&'qA3_)"Hc9"<DK*dWqVR
%<+`6\'n'LuMcO*.rAECn>!dWYnZdKTf@\WlfX!i5Rd=uC`$'SlKuEqKTmVmM<$9Ia5\;?2JIYs-brE.g*]%:I?A!.=,&/*Bc/u?\
%U6^_=8Ka0lB^\V*jO`/hj32%29VFkC!m])8<%dUh5dl4NT>X/4T"b&\@!Bt"VJ3`e*[&"^PP%T*ni+)'Ir_RFMKT9nX#0L5^NbBN
%:+KXOMTQ6hW5mhi=IY;S0lBQ=2K5M:K*9q':fLAk[Xe%%PN[(K.//[1Gc(WVJn%c7C6Wk1&S*1;f?B4Z*ZLXAjKn$R'97$9=?NJ-
%(So/AE?q<3B:J(`Vb<]&<\pJT6t!J5Dc2dLE/N85fs`)4j07;]oUXQ!?\,sfNA4'gacU.k>E7FEZ-=d+I^&K",@.4cLs_gd&.EGS
%9XEbn)]"OQn#qk&BGf6k$6"ri9rF?khkp[sPnhA.>b!Dh'&j$2L-EiiMi)+![>bg2@F\JdacEB"MNj)gNqs^e9I.A4GR>_,%Lc%[
%'MJo@bJDsiZ,,!"1M0e]GGm^cd8R;Ne,`-jg*ErC!2ID`<JX.":\o#C/`::GfoQK,L5@&N(Ndt&D?b?/OOZ;b6470/OerU_X%+]9
%:qWeu[,Bfm8U<eV*]RtVrC2*JId'WqB<*W\b1FU33*1/9gUI)_\5',3<UsJ;1;eJ1SJ9PF3!I=*[*R9X$5]HY?+B;#27FRUEObb?
%mo?jX;`YLbf3"6B%5?mKQ$SC6r:#rE,JQuNr@skn8oEg_A5R5\Hq'!/+Bco[`ftY?4:arF3%h5P411GT7_3'+[4DAg%N,d]*Y"4b
%NWW0KYDi%uN7YcL'S#pm^\pLdiICLg?f(hTr8[\23GQ<QcVa.XruC^GGL1?u9+N%c^37nLFoI&TNdBSEl)=?iQ]?E"]'4Tfa(FW6
%N]Lpip=+A1re.>4HJeVbW;"!3NdBT0l_sQc]8g7PNPCL"hE(#9qL6:k8%n@sG$_jHiNo:ph`L6#\M(X>4?5%LG$Z1BrH;L1D]O&O
%p!.XAeaq@77k<&bmuG!93U^Vt\FeX'FhMnS;9q?(*Sp.c"-<<8HLQ0c]QN1QKQ6=qj5':SM8t86cAP2@YMFF[&[)(WFQIj>*oH^g
%-]b/([4@;!htutXWOmB:d0b6hc(j-^mQBBdL]6Zc=Se%JO#Ne+QQGOFpHC`IhETuKUX%It4mm^\et]sGIQctBl.Dc6GFgt3k`opZ
%4R.oEO5KGlF,t87b.C1(n]nhg&_3.rNrmrQ#9W]Po'gYCI,X&u$c.%XI,',2jl<L&DEd?2l0"hEQ]=8pHKXOf_0PG5UW[!?qOA)j
%?#Lgo?b6-uVQTlGeG7t[a7&':j2YNdf&]Dg^@h<lBYS]dH+rA6gj]/I0E$@Lq;1WhVZ3LU:CMnLf,mfM>MgOq^3BS(34ee^M'1m)
%rC<FIrI;IQhDkR]?bc76MMZQ?!p#X@dK`=60:dVUh_2Zn4Ld'#J:-HO5G6Zh/ffL*Zu8*Yr1,KHJK3G%q#\P)]Q=@8hH/Q!Ss$SN
%5jEdd&#A'k%RIi"X[c2mq9gQ[1&%eGOS[fq"Zb;Ooa6TR^2sa?hNr[WELOL]%.^QBlP\d>o%#\>X4a=fO@.8ck9*2PpYJ1`lM@Z5
%OP6lYK[fhO6RY"Q\Ho2+]oS6sqT_Y\?K@B<OSW:q$,&BL_GBA%]t`_ZjRueZ+n`SB'iNq9B-Ft795bu7^.WYn?h`,Y8C)\P0QclR
%hfTfW;Y&COaIC>SduZMq9<Y&1?<t,Oq/os=%64R$F<$0oldBk<9Zli#%_;PdGt=L0]n]pb5N+f%hY7":>35/mLt)=YK?/7clU'[A
%G3_MkhUbLjl?qtfUnMht7eH!E#sTX,^31c"kBfuKotGVr;X[gs,/*J]B-MK4pEkb$kF_C-T4-3_lVU(APtTN*kG:rd4g1B5?9Rbi
%MZ!)_DFIphYPj>b?#LaAk^)Dpo]gbg>4gqTg:-:rp"$\;eb.A&kgf:U^$%=.DZ,K"?#LaB?IS`a*_,FCm:)m:pHD'MhOeaB;X\BS
%,B^_E1K*[g59oV[Q]=Q#I.(e1NU+m?aLh,IYEAOMHY4Sr^@sO+P]Gl'jP.E@2tBFflYmQOmlZV>X1ra:nu'4p3HC(!l#`_?o\/V%
%SaYBpF9&iF4&YNoa!2sFDEX&TpSI2<HJeT@\bDrlOcsLGhFGlO?+M+Hmde['aB-)u5k:ai4cn1jeceWnmsU:fHb+;c;WiB[,hMcD
%h2i$`\Fi3ems@PM@gd0;OaQ>YY"4,#\FE#Y1Z(5<`EhAH,PeK\h3!*FGQ(,;Ea1XN\auXf;O"aG?'8IY^@b&)&BL\HdXdKbGpW:+
%Dr$Sj]RRdO.6:fs-5hb^l'^T^jK33\nH$,58Hurb3[Z@TId`igo"qMUP'c*_-b8uJK9A:QHRQG1ET<d(K__a2P'Z"I.B3'TQ]c]&
%\g[r\HgdkCK^Z%<dNKdjGUaSsI-7M?!og>cP)3n^c:Y\A[C;=0O14OLl@&''ABO);_ii'^V8nb>pPm@ZHJ\NMR6#WV[%tG1?:uoU
%hRY;LpSHc1Qeu#f-!,;/4dTF1]l[NeYgTB:P.0^<k9\%9DS;A<b]i6ajG1JB?h1%3*LL)-^\(tiD"H53acOnS+"$`rF^jp4hg$q:
%)SL9'npTEl0n"?IN$FNPEL37j5%WT^19(#U09^H2GKrn%%UFB:)*iB2c4h_I.t8ln<c9"IN9[qCBQDE\QR8In/q'1YLV@kF$7*`i
%=-Iu<\i$JY]jHtLh`E_VnUKlXUmf3/CQgg:qDPn:ETQ!:!mdumP7)rNmS2++d_AAeD]P>VgUZop;Vh$&`C[a]I@OOq^3"C9k=[HU
%FhW!>;Vu7S-WfIa*M!TI\Fjt?np]ig"H)3]f86)#c;(R7fA98K:"Sf.qEXfS:7b+&%St)/>^ANO!c[DpFAN6E5#5@`n"$&_e6dMb
%)8U:Vp(T4(42303DKh+:ET'R:V_@M2E.(VHE9mD^8EA4pa[+:UpQOX@9D9e=SX9=ONj<RDTNoLOomlo0rYZM#otL-NqXXV'-RdRr
%0>4#`gq@`\EWPIV&'>'S91LBPg2B-J>k,FIL&1B>$"'Van"4TSEj"BL)p6.U>B_LQpn^3>ZQ+0!;,2.:H:/XSEU+81jo$u!;1@_5
%V^Rm&0>4)bj1KJlEh<0V0.QPJQ]=qgF'j5_3GEj))WaB[X`%0DqU.CHq>!\PW6!:l\juS$YPb/CiEHPd0CPP'ORfet?)4!_^\*_0
%If@nib1kL4Q^!%JQYo^XZu5i<]_Ghp8i\lAop#=DrY\e:82XcN8ibLNk:G^coZgZ5IIH!g^:\s4?cn_LFdR4<991Ob\M%6cI*T=r
%RJQLR)5eqHa`"kio[rnU;sJes2l47_N`0<A5N+Wqjo%!<;a.,8q+aB;lHXZ)QEiU@.A*qah5;5ehYL#.%_d(YEi&9VK?A-1dY5i!
%l:W5!=T'nDW8.:$Momu-ksjb8Id9McD<oW4b1$4<PKLMoXXfYQZV+XTYG51E<+"KHj%ZB,p[2#+:#>_F3?NV6:ut[GX[gp.pWp?K
%3<O`p;l.e6:0$_1lW*W>rSF[AbPSDKeX-#Ga/WO[s614-Id((uEH(5Kp#Z//].1,_QgRl!bhr7u3FodFYk"6&k@*JjriM*DK@O0J
%X&uL,S?2XbDnW57mI&c2^:`A#=W*lOlY(DDC;0"KjZVeTfBUQVB:Q(D]\e$>`Td$?h9)Y.97JIanh(rc>h$@W\FR;CFh.>jk_ATa
%s5qp_puC93p=g[=qto:LpkM)KrN4fQ:B1+>?f\]2r:TN-s1>bllJO;Z:&gR;r1F#e,;"EDr:`GUl7YOa.3-J5b#X&d)JPI(JZYk=
%U3JhF-p(!4j;!"1hhikCr4@arj>k1bE5E:<YeomArXe9ZnD7].P\>a*gf+h2>,&rNm\\>m)>+aq)6&f8e*7Vh/lQ+]9<s*<^V$]l
%dSF-FeY)sBokEF#l,UAFrB%MZOUu[6[?&[4e+!4q9DJVOZ1#I*^\R'miue<c+9)9,Dr:Qbs8"B5rlad1gL%Ymh<RH+6Vd*R?bcT,
%^O#e7IeJp'=!-u.hZ*AC?4F[KL]7:fs6a7nn]*lojpth6^)F``k9'`s2uiUoIf/TJrT4X*qMTk%pE0Fmhn8p_]ANSdO$EX62uiRD
%5J@$]++EhMJ,K6eIe3:%s5j"T9eGZ&rsc+s<RoXWNL("Q!c95r~>
%AI9_PrivateDataEnd
